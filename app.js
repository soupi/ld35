(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/suppi/code/purescript/ld35/output/CanvasUtils/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Lens = require("../Data.Lens");
var Data_Array = require("../Data.Array");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Graphics_Canvas = require("../Graphics.Canvas");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Graphics_Drawing = require("../Graphics.Drawing");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var y = Data_Lens_Lens.lens(function (v) {
    return v.y;
})(function (v) {
    return function (v1) {
        var $6 = {};
        for (var $7 in v) {
            if (v.hasOwnProperty($7)) {
                $6[$7] = v[$7];
            };
        };
        $6.y = v1;
        return $6;
    };
});
var x = Data_Lens_Lens.lens(function (v) {
    return v.x;
})(function (v) {
    return function (v1) {
        var $8 = {};
        for (var $9 in v) {
            if (v.hasOwnProperty($9)) {
                $8[$9] = v[$9];
            };
        };
        $8.x = v1;
        return $8;
    };
});
var width = 1024.0;
var pointInRect = function (p) {
    return function (obj) {
        return obj.pos.x <= p.x && p.x <= obj.pos.x + obj.size.x && (obj.pos.y <= p.y && p.y <= obj.pos.y + obj.size.y);
    };
};
var makePoint = function (x1) {
    return function (y1) {
        return {
            x: x1, 
            y: y1
        };
    };
};
var loadImageData = function (src) {
    return Control_Monad_Aff.makeAff(function (error) {
        return function (success) {
            return Graphics_Canvas.withImage(src)(success);
        };
    });
};
var height = 768.0;
module.exports = {
    y: y, 
    x: x, 
    pointInRect: pointInRect, 
    loadImageData: loadImageData, 
    makePoint: makePoint, 
    height: height, 
    width: width
};

},{"../Control.Monad.Aff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Aff/index.js","../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Data.Array":"/Users/suppi/code/purescript/ld35/output/Data.Array/index.js","../Data.Lens":"/Users/suppi/code/purescript/ld35/output/Data.Lens/index.js","../Data.Lens.Lens":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens/index.js","../Graphics.Canvas":"/Users/suppi/code/purescript/ld35/output/Graphics.Canvas/index.js","../Graphics.Drawing":"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Color/foreign.js":[function(require,module,exports){
// module Color
// jshint node: true

"use strict";

// Parse a string which guaranteed to be of the form `[0-9a-f]{1,2}`.
exports.parseHex = function(str) {
  return parseInt(str, 16);
};

// Convert a number between 0 and 255 to a hex value between 00 and ff.
exports.toHex = function(n) {
  var str = n.toString(16);
  if (str.length == 1) {
    return "0" + str;
  }
  return str;
};

},{}],"/Users/suppi/code/purescript/ld35/output/Color/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Bind = require("../Control.Bind");
var Data_Array = require("../Data.Array");
var Data_Foldable = require("../Data.Foldable");
var Data_Int = require("../Data.Int");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_Unsafe = require("../Data.Maybe.Unsafe");
var Data_Ord = require("../Data.Ord");
var Data_String = require("../Data.String");
var Data_String_Regex = require("../Data.String.Regex");
var $$Math = require("../Math");
var RGB = (function () {
    function RGB() {

    };
    RGB.value = new RGB();
    return RGB;
})();
var HSL = (function () {
    function HSL() {

    };
    HSL.value = new HSL();
    return HSL;
})();
var LCh = (function () {
    function LCh() {

    };
    LCh.value = new LCh();
    return LCh;
})();
var Lab = (function () {
    function Lab() {

    };
    Lab.value = new Lab();
    return Lab;
})();
var HSLA = (function () {
    function HSLA(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    HSLA.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new HSLA(value0, value1, value2, value3);
                };
            };
        };
    };
    return HSLA;
})();
var toRGBA$prime = function (v) {
    var h$prime = v.value0 / 60.0;
    var chr = (1.0 - $$Math.abs(2.0 * v.value2 - 1.0)) * v.value1;
    var m = v.value2 - chr / 2.0;
    var x = chr * (1.0 - $$Math.abs($$Math["%"](h$prime)(2.0) - 1.0));
    var col = (function () {
        if (h$prime < 1.0) {
            return {
                r: chr, 
                g: x, 
                b: 0.0
            };
        };
        if (1.0 <= h$prime && h$prime < 2.0) {
            return {
                r: x, 
                g: chr, 
                b: 0.0
            };
        };
        if (2.0 <= h$prime && h$prime < 3.0) {
            return {
                r: 0.0, 
                g: chr, 
                b: x
            };
        };
        if (3.0 <= h$prime && h$prime < 4.0) {
            return {
                r: 0.0, 
                g: x, 
                b: chr
            };
        };
        if (4.0 <= h$prime && h$prime < 5.0) {
            return {
                r: x, 
                g: 0.0, 
                b: chr
            };
        };
        if (Prelude.otherwise) {
            return {
                r: chr, 
                g: 0.0, 
                b: x
            };
        };
        throw new Error("Failed pattern match at Color line 295, column 1 - line 313, column 1: " + [  ]);
    })();
    return {
        r: col.r + m, 
        g: col.g + m, 
        b: col.b + m, 
        a: v.value3
    };
};
var toXYZ = function (c) {
    var rec = toRGBA$prime(c);
    var finv = function (c1) {
        if (c1 <= 4.045e-2) {
            return c1 / 12.92;
        };
        if (Prelude.otherwise) {
            return $$Math.pow((c1 + 5.500000000000001e-2) / 1.055)(2.4);
        };
        throw new Error("Failed pattern match at Color line 314, column 1 - line 331, column 1: " + [ c1.constructor.name ]);
    };
    var g = finv(rec.g);
    var r = finv(rec.r);
    var b = finv(rec.b);
    var x = 0.4124 * r + 0.35760000000000003 * g + 0.18050000000000002 * b;
    var y = 0.21259999999999998 * r + 0.7152000000000001 * g + 7.22e-2 * b;
    var z = 1.93e-2 * r + 0.1192 * g + 0.9505000000000001 * b;
    return {
        x: x, 
        y: y, 
        z: z
    };
};
var toRGBA = function (v) {
    var c = toRGBA$prime(v);
    var g = Data_Int.round(255.0 * c.g);
    var r = Data_Int.round(255.0 * c.r);
    var b = Data_Int.round(255.0 * c.b);
    return {
        r: r, 
        g: g, 
        b: b, 
        a: v.value3
    };
};
var toHexString = function (color) {
    var c = toRGBA(color);
    return "#" + ($foreign.toHex(c.r) + ($foreign.toHex(c.g) + $foreign.toHex(c.b)));
};
var toHSLA = function (v) {
    return {
        h: v.value0, 
        s: v.value1, 
        l: v.value2, 
        a: v.value3
    };
};
var showColor = new Prelude.Show(function (c) {
    var col = toRGBA(c);
    return "rgba " + (Prelude.show(Prelude.showInt)(col.r) + (" " + (Prelude.show(Prelude.showInt)(col.g) + (" " + (Prelude.show(Prelude.showInt)(col.b) + (" " + Prelude.show(Prelude.showNumber)(col.a)))))));
});
var modPos = function (x) {
    return function (y) {
        return $$Math["%"]($$Math["%"](x)(y) + y)(y);
    };
};
var rgba = function (red$prime) {
    return function (green$prime) {
        return function (blue$prime) {
            return function (alpha) {
                var red = Data_Ord.clamp(Prelude.ordInt)(0)(255)(red$prime);
                var r = Data_Int.toNumber(red) / 255.0;
                var green = Data_Ord.clamp(Prelude.ordInt)(0)(255)(green$prime);
                var g = Data_Int.toNumber(green) / 255.0;
                var blue = Data_Ord.clamp(Prelude.ordInt)(0)(255)(blue$prime);
                var maxChroma = Data_Ord.max(Prelude.ordInt)(Data_Ord.max(Prelude.ordInt)(red)(green))(blue);
                var minChroma = Data_Ord.min(Prelude.ordInt)(Data_Ord.min(Prelude.ordInt)(red)(green))(blue);
                var chroma = maxChroma - minChroma;
                var chroma$prime = Data_Int.toNumber(chroma) / 255.0;
                var lightness = Data_Int.toNumber(maxChroma + minChroma | 0) / (255.0 * 2.0);
                var saturation = (function () {
                    if (chroma === 0) {
                        return 0.0;
                    };
                    if (Prelude.otherwise) {
                        return chroma$prime / (1.0 - $$Math.abs(2.0 * lightness - 1.0));
                    };
                    throw new Error("Failed pattern match at Color line 119, column 1 - line 150, column 1: " + [  ]);
                })();
                var b = Data_Int.toNumber(blue) / 255.0;
                var hue$prime = function (v) {
                    if (v === 0) {
                        return 0.0;
                    };
                    if (maxChroma === red) {
                        return modPos((g - b) / chroma$prime)(6.0);
                    };
                    if (maxChroma === green) {
                        return (b - r) / chroma$prime + 2.0;
                    };
                    if (Prelude.otherwise) {
                        return (r - g) / chroma$prime + 4.0;
                    };
                    throw new Error("Failed pattern match at Color line 119, column 1 - line 150, column 1: " + [ v.constructor.name ]);
                };
                var hue = 60.0 * hue$prime(chroma);
                return new HSLA(hue, saturation, lightness, alpha);
            };
        };
    };
};
var rgb = function (r) {
    return function (g) {
        return function (b) {
            return rgba(r)(g)(b)(1.0);
        };
    };
};
var rgba$prime = function (r) {
    return function (g) {
        return function (b) {
            return function (a) {
                return rgba(Data_Int.round(r * 255.0))(Data_Int.round(g * 255.0))(Data_Int.round(b * 255.0))(a);
            };
        };
    };
};
var rgb$prime = function (r) {
    return function (g) {
        return function (b) {
            return rgba$prime(r)(g)(b)(1.0);
        };
    };
};
var xyz = function (x) {
    return function (y) {
        return function (z) {
            var f = function (c) {
                if (c <= 3.1307999999999996e-3) {
                    return 12.92 * c;
                };
                if (Prelude.otherwise) {
                    return 1.055 * $$Math.pow(c)(1.0 / 2.4) - 5.500000000000001e-2;
                };
                throw new Error("Failed pattern match at Color line 194, column 5 - line 196, column 5: " + [ c.constructor.name ]);
            };
            var g = f(-0.9689 * x + 1.8758 * y + 4.15e-2 * z);
            var r = f(3.2406 * x - 1.5372 * y - 0.4986 * z);
            var b = f((5.5700000000000006e-2 * x - 0.20400000000000001 * y) + 1.057 * z);
            return rgb$prime(r)(g)(b);
        };
    };
};
var luminance = function (col) {
    var val = toRGBA$prime(col);
    var f = function (c) {
        if (c <= 3.9279999999999995e-2) {
            return c / 12.92;
        };
        if (Prelude.otherwise) {
            return $$Math.pow((c + 5.500000000000001e-2) / 1.055)(2.4);
        };
        throw new Error("Failed pattern match at Color line 519, column 1 - line 535, column 1: " + [ c.constructor.name ]);
    };
    var g = f(val.g);
    var r = f(val.r);
    var b = f(val.b);
    return 0.21259999999999998 * r + 0.7152000000000001 * g + 7.22e-2 * b;
};
var interpolate = function (fraction) {
    return function (a) {
        return function (b) {
            return a + fraction * (b - a);
        };
    };
};
var interpolateAngle = function (fraction) {
    return function (a) {
        return function (b) {
            var paths = [ {
                from: a, 
                to: b
            }, {
                from: a, 
                to: b + 360.0
            }, {
                from: a + 360.0, 
                to: b
            } ];
            var dist = function (v) {
                return $$Math.abs(v.to - v.from);
            };
            var shortest = Data_Maybe_Unsafe.fromJust(Data_Foldable.minimumBy(Data_Foldable.foldableArray)(Data_Ord.comparing(Prelude.ordNumber)(dist))(paths));
            return interpolate(fraction)(shortest.from)(shortest.to);
        };
    };
};
var hsla = function (h) {
    return function (s) {
        return function (l) {
            return function (a) {
                var s$prime = Data_Ord.clamp(Prelude.ordNumber)(0.0)(1.0)(s);
                var l$prime = Data_Ord.clamp(Prelude.ordNumber)(0.0)(1.0)(l);
                var h$prime = modPos(h)(360.0);
                var a$prime = Data_Ord.clamp(Prelude.ordNumber)(0.0)(1.0)(a);
                return new HSLA(h$prime, s$prime, l$prime, a$prime);
            };
        };
    };
};
var lighten = function (f) {
    return function (v) {
        return hsla(v.value0)(v.value1)(v.value2 + f)(v.value3);
    };
};
var rotateHue = function (angle) {
    return function (v) {
        return hsla(v.value0 + angle)(v.value1)(v.value2)(v.value3);
    };
};
var saturate = function (f) {
    return function (v) {
        return hsla(v.value0)(v.value1 + f)(v.value2)(v.value3);
    };
};
var hsl = function (h) {
    return function (s) {
        return function (l) {
            return hsla(h)(s)(l)(1.0);
        };
    };
};
var white = hsl(0.0)(0.0)(1.0);
var graytone = function (l) {
    return hsl(0.0)(0.0)(l);
};
var fromInt = function (m) {
    var n = Data_Ord.clamp(Prelude.ordInt)(0)(16777215)(m);
    var r = n >> 16 & 255;
    var g = n >> 8 & 255;
    var b = n & 255;
    return rgb(r)(g)(b);
};
var fromHexString = function (str) {
    var isShort = Data_String.length(str) === 4;
    var pair = "(" + ("[0-9a-f]" + ("[0-9a-f]" + ")"));
    var single = "(" + ("[0-9a-f]" + ")");
    var variant = (function () {
        if (isShort) {
            return single + (single + single);
        };
        if (!isShort) {
            return pair + (pair + pair);
        };
        throw new Error("Failed pattern match at Color line 257, column 15 - line 260, column 5: " + [ isShort.constructor.name ]);
    })();
    var pattern = Data_String_Regex.regex("^#(?:" + (variant + ")$"))(Data_String_Regex.parseFlags("i"));
    return Prelude.bind(Data_Maybe.bindMaybe)(Data_String_Regex.match(pattern)(str))(function (v) {
        return Prelude.bind(Data_Maybe.bindMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)($foreign.parseHex)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array["!!"](v)(1))))(function (v1) {
            return Prelude.bind(Data_Maybe.bindMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)($foreign.parseHex)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array["!!"](v)(2))))(function (v2) {
                return Prelude.bind(Data_Maybe.bindMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)($foreign.parseHex)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array["!!"](v)(3))))(function (v3) {
                    if (isShort) {
                        return Prelude.pure(Data_Maybe.applicativeMaybe)(rgb((16 * v1 | 0) + v1 | 0)((16 * v2 | 0) + v2 | 0)((16 * v3 | 0) + v3 | 0));
                    };
                    if (!isShort) {
                        return Prelude.pure(Data_Maybe.applicativeMaybe)(rgb(v1)(v2)(v3));
                    };
                    throw new Error("Failed pattern match at Color line 247, column 3 - line 252, column 3: " + [ isShort.constructor.name ]);
                });
            });
        });
    });
};
var eqColor = new Prelude.Eq(function (c1) {
    return function (c2) {
        var rgb2 = toRGBA(c2);
        var rgb1 = toRGBA(c1);
        return rgb1.r === rgb2.r && (rgb1.g === rgb2.g && (rgb1.b === rgb2.b && rgb1.a === rgb2.a));
    };
});
var desaturate = function (f) {
    return saturate(-f);
};
var darken = function (f) {
    return lighten(-f);
};
var d65 = {
    xn: 0.9504699999999999, 
    yn: 1.0, 
    zn: 1.08883
};
var lab = function (l) {
    return function (a) {
        return function (b) {
            var l$prime = (l + 16.0) / 116.0;
            var delta = 6.0 / 29.0;
            var finv = function (t) {
                if (t > delta) {
                    return $$Math.pow(t)(3.0);
                };
                if (Prelude.otherwise) {
                    return 3.0 * delta * delta * (t - 4.0 / 29.0);
                };
                throw new Error("Failed pattern match at Color line 213, column 1 - line 229, column 1: " + [ t.constructor.name ]);
            };
            var x = d65.xn * finv(l$prime + a / 500.0);
            var y = d65.yn * finv(l$prime);
            var z = d65.zn * finv(l$prime - b / 200.0);
            return xyz(x)(y)(z);
        };
    };
};
var lch = function (l) {
    return function (c) {
        return function (h) {
            var deg2rad = $$Math.pi / 180.0;
            var b = c * $$Math.sin(h * deg2rad);
            var a = c * $$Math.cos(h * deg2rad);
            return lab(l)(a)(b);
        };
    };
};
var toLab = function (col) {
    var rec = toXYZ(col);
    var cut = $$Math.pow(6.0 / 29.0)(3.0);
    var f = function (t) {
        if (t > cut) {
            return $$Math.pow(t)(1.0 / 3.0);
        };
        if (Prelude.otherwise) {
            return (1.0 / 3.0) * $$Math.pow(29.0 / 6.0)(2.0) * t + 4.0 / 29.0;
        };
        throw new Error("Failed pattern match at Color line 332, column 1 - line 349, column 1: " + [ t.constructor.name ]);
    };
    var fy = f(rec.y / d65.yn);
    var l = 116.0 * fy - 16.0;
    var b = 200.0 * (fy - f(rec.z / d65.zn));
    var a = 500.0 * (f(rec.x / d65.xn) - fy);
    return {
        l: l, 
        a: a, 
        b: b
    };
};
var distance = function (col1) {
    return function (col2) {
        var sq = function (x) {
            return $$Math.pow(x)(2.0);
        };
        var c2 = toLab(col2);
        var c1 = toLab(col1);
        return $$Math.sqrt(sq(c1.l - c2.l) + sq(c1.a - c2.a) + sq(c1.b - c2.b));
    };
};
var toLCh = function (col) {
    var rec = toLab(col);
    var rad2deg = 180.0 / $$Math.pi;
    var c = $$Math.sqrt(rec.a * rec.a + rec.b * rec.b);
    var h = modPos($$Math.atan2(rec.b)(rec.a) * rad2deg)(360.0);
    return {
        l: rec.l, 
        c: c, 
        h: h
    };
};
var mix = function (v) {
    return function (c1) {
        return function (c2) {
            return function (frac) {
                if (v instanceof HSL) {
                    var t = toHSLA(c2);
                    var f = toHSLA(c1);
                    return hsla(interpolateAngle(frac)(f.h)(t.h))(interpolate(frac)(f.s)(t.s))(interpolate(frac)(f.l)(t.l))(interpolate(frac)(f.a)(t.a));
                };
                if (v instanceof RGB) {
                    var t = toRGBA$prime(c2);
                    var f = toRGBA$prime(c1);
                    return rgba$prime(interpolate(frac)(f.r)(t.r))(interpolate(frac)(f.g)(t.g))(interpolate(frac)(f.b)(t.b))(interpolate(frac)(f.a)(t.a));
                };
                if (v instanceof LCh) {
                    var t = toLCh(c2);
                    var f = toLCh(c1);
                    return lch(interpolate(frac)(f.l)(t.l))(interpolate(frac)(f.c)(t.c))(interpolateAngle(frac)(f.h)(t.h));
                };
                if (v instanceof Lab) {
                    var t = toLab(c2);
                    var f = toLab(c1);
                    return lab(interpolate(frac)(f.l)(t.l))(interpolate(frac)(f.a)(t.a))(interpolate(frac)(f.b)(t.b));
                };
                throw new Error("Failed pattern match at Color line 473, column 1 - line 482, column 1: " + [ v.constructor.name, c1.constructor.name, c2.constructor.name, frac.constructor.name ]);
            };
        };
    };
};
var toGray = function (col) {
    var res = toLCh(col);
    return desaturate(1.0)(lch(res.l)(0.0)(0.0));
};
var cssStringRGBA = function (col) {
    var c = toRGBA(col);
    var green = Prelude.show(Prelude.showInt)(c.g);
    var red = Prelude.show(Prelude.showInt)(c.r);
    var blue = Prelude.show(Prelude.showInt)(c.b);
    var alpha = Prelude.show(Prelude.showNumber)(c.a);
    var $66 = c.a === 1.0;
    if ($66) {
        return "rgb(" + (red + (", " + (green + (", " + (blue + ")")))));
    };
    if (!$66) {
        return "rgba(" + (red + (", " + (green + (", " + (blue + (", " + (alpha + ")")))))));
    };
    throw new Error("Failed pattern match at Color line 390, column 3 - line 394, column 3: " + [ $66.constructor.name ]);
};
var cssStringHSLA = function (v) {
    var toString = function (n) {
        return Prelude.show(Prelude.showNumber)(Data_Int.toNumber(Data_Int.round(100.0 * n)) / 100.0);
    };
    var saturation = toString(v.value1 * 100.0) + "%";
    var lightness = toString(v.value2 * 100.0) + "%";
    var hue = toString(v.value0);
    var alpha = Prelude.show(Prelude.showNumber)(v.value3);
    var $68 = v.value3 === 1.0;
    if ($68) {
        return "hsl(" + (hue + (", " + (saturation + (", " + (lightness + ")")))));
    };
    if (!$68) {
        return "hsla(" + (hue + (", " + (saturation + (", " + (lightness + (", " + (alpha + ")")))))));
    };
    throw new Error("Failed pattern match at Color line 376, column 3 - line 380, column 3: " + [ $68.constructor.name ]);
};
var contrast = function (c1) {
    return function (c2) {
        var l2 = luminance(c2);
        var l1 = luminance(c1);
        var $73 = l1 > l2;
        if ($73) {
            return (l1 + 5.0e-2) / (l2 + 5.0e-2);
        };
        if (!$73) {
            return (l2 + 5.0e-2) / (l1 + 5.0e-2);
        };
        throw new Error("Failed pattern match at Color line 536, column 18 - line 539, column 3: " + [ $73.constructor.name ]);
    };
};
var isReadable = function (c1) {
    return function (c2) {
        return contrast(c1)(c2) > 4.5;
    };
};
var complementary = rotateHue(180.0);
var brightness = function (col) {
    var c = toRGBA$prime(col);
    return (299.0 * c.r + 587.0 * c.g + 114.0 * c.b) / 1000.0;
};
var isLight = function (c) {
    return brightness(c) > 0.5;
};
var black = hsl(0.0)(0.0)(0.0);
var textColor = function (c) {
    if (isLight(c)) {
        return black;
    };
    if (Prelude.otherwise) {
        return white;
    };
    throw new Error("Failed pattern match at Color line 564, column 1 - line 571, column 1: " + [ c.constructor.name ]);
};
module.exports = {
    RGB: RGB, 
    HSL: HSL, 
    LCh: LCh, 
    Lab: Lab, 
    distance: distance, 
    textColor: textColor, 
    isReadable: isReadable, 
    isLight: isLight, 
    contrast: contrast, 
    luminance: luminance, 
    brightness: brightness, 
    mix: mix, 
    toGray: toGray, 
    desaturate: desaturate, 
    saturate: saturate, 
    darken: darken, 
    lighten: lighten, 
    complementary: complementary, 
    rotateHue: rotateHue, 
    graytone: graytone, 
    white: white, 
    black: black, 
    cssStringRGBA: cssStringRGBA, 
    cssStringHSLA: cssStringHSLA, 
    toHexString: toHexString, 
    toLCh: toLCh, 
    toLab: toLab, 
    toXYZ: toXYZ, 
    "toRGBA'": toRGBA$prime, 
    toRGBA: toRGBA, 
    toHSLA: toHSLA, 
    fromInt: fromInt, 
    fromHexString: fromHexString, 
    lch: lch, 
    lab: lab, 
    xyz: xyz, 
    hsl: hsl, 
    hsla: hsla, 
    "rgb'": rgb$prime, 
    "rgba'": rgba$prime, 
    rgb: rgb, 
    rgba: rgba, 
    showColor: showColor, 
    eqColor: eqColor
};

},{"../Control.Bind":"/Users/suppi/code/purescript/ld35/output/Control.Bind/index.js","../Data.Array":"/Users/suppi/code/purescript/ld35/output/Data.Array/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Int":"/Users/suppi/code/purescript/ld35/output/Data.Int/index.js","../Data.Int.Bits":"/Users/suppi/code/purescript/ld35/output/Data.Int.Bits/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Maybe.Unsafe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Unsafe/index.js","../Data.Ord":"/Users/suppi/code/purescript/ld35/output/Data.Ord/index.js","../Data.String":"/Users/suppi/code/purescript/ld35/output/Data.String/index.js","../Data.String.Regex":"/Users/suppi/code/purescript/ld35/output/Data.String.Regex/index.js","../Math":"/Users/suppi/code/purescript/ld35/output/Math/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Color/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
var $less$bar$greater = function (dictAlt) {
    return alt(dictAlt);
};
module.exports = {
    Alt: Alt, 
    "<|>": $less$bar$greater, 
    alt: alt, 
    altArray: altArray
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Plus = require("../Control.Plus");
var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Apply/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var $less$times = function (dictApply) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (dictApply) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
module.exports = {
    lift5: lift5, 
    lift4: lift4, 
    lift3: lift3, 
    lift2: lift2, 
    "*>": $times$greater, 
    "<*": $less$times
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Biapplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Biapply = require("../Control.Biapply");
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"../Control.Biapply":"/Users/suppi/code/purescript/ld35/output/Control.Biapply/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Biapply/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryFn);
var biapply = function (dict) {
    return dict.biapply;
};
var $less$less$times$greater$greater = function (dictBiapply) {
    return biapply(dictBiapply);
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return $less$less$times$greater$greater(dictBiapply)($less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
var $times$greater$greater = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(Prelude["const"](Prelude.id(Prelude.categoryFn))))(a))(b);
        };
    };
};
var $less$less$times = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    bilift3: bilift3, 
    bilift2: bilift2, 
    "<<*": $less$less$times, 
    "*>>": $times$greater$greater, 
    "<<*>>": $less$less$times$greater$greater, 
    biapply: biapply, 
    "<<$>>": $less$less$dollar$greater$greater
};

},{"../Data.Bifunctor":"/Users/suppi/code/purescript/ld35/output/Data.Bifunctor/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Bind/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var $greater$eq$greater = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return Prelude[">>="](dictBind)(f(a))(g);
            };
        };
    };
};
var $eq$less$less = function (dictBind) {
    return function (f) {
        return function (m) {
            return Prelude[">>="](dictBind)(m)(f);
        };
    };
};
var $less$eq$less = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return $eq$less$less(dictBind)(f)(g(a));
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return Prelude[">>="](dictBind)(m)(Prelude.id(Prelude.categoryFn));
    };
};
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return Prelude[">>="](dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    if (!cond$prime) {
                        return f;
                    };
                    throw new Error("Failed pattern match at Control.Bind line 45, column 35 - line 45, column 56: " + [ cond$prime.constructor.name ]);
                });
            };
        };
    };
};
module.exports = {
    ifM: ifM, 
    join: join, 
    "<=<": $less$eq$less, 
    ">=>": $greater$eq$greater, 
    "=<<": $eq$less$less
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Extend = require("../Control.Extend");
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var $less$less$eq = function (dictExtend) {
    return extend(dictExtend);
};
var $eq$less$eq = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(dictExtend)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(dictExtend)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (dictExtend) {
    return function (w) {
        return function (f) {
            return $less$less$eq(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend, 
    duplicate: duplicate, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    "<<=": $less$less$eq, 
    extend: extend, 
    extendFn: extendFn
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Lazy/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    fix: fix, 
    defer: defer
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Aff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Aff

exports._cancelWith = function (nonCanceler, aff, canceler1) {
  return function(success, error) {
    var canceler2 = aff(success, error);

    return function(e) {
      return function(success, error) {
        var cancellations = 0;
        var result        = false;
        var errored       = false;

        var s = function(bool) {
          cancellations = cancellations + 1;
          result        = result || bool;

          if (cancellations === 2 && !errored) {
            try {
              success(result);
            } catch (err) {
              error(err);
            }
          }
        };

        var f = function(err) {
          if (!errored) {
            errored = true;

            error(err);
          }
        };

        canceler2(e)(s, f);
        canceler1(e)(s, f);

        return nonCanceler;
      };
    };
  };
}

exports._setTimeout = function (nonCanceler, millis, aff) {
  var set = setTimeout, clear = clearTimeout;
  if (millis <= 0 && typeof setImmediate === "function") {
    set = setImmediate;
    clear = clearImmediate;
  }
  return function(success, error) {
    var canceler;

    var timeout = set(function() {
      canceler = aff(success, error);
    }, millis);

    return function(e) {
      return function(s, f) {
        if (canceler !== undefined) {
          return canceler(e)(s, f);
        } else {
          clear(timeout);

          try {
            s(true);
          } catch (err) {
            f(err);
          }

          return nonCanceler;
        }
      };
    };
  };
}

exports._unsafeInterleaveAff = function (aff) {
  return aff;
}

exports._forkAff = function (nonCanceler, aff) {
  var voidF = function(){};

  return function(success, error) {
    var canceler = aff(voidF, voidF);

    try {
      success(canceler);
    } catch (err) {
      error(err);
    }

    return nonCanceler;
  };
}

exports._forkAll = function (nonCanceler, foldl, affs) {
  var voidF = function(){};

  return function(success, error) {
    var cancelers = foldl(function(acc) {
      return function(aff) {
        acc.push(aff(voidF, voidF));
        return acc;
      }
    })([])(affs);

    var canceler = function(e) {
      return function(success, error) {
        var cancellations = 0;
        var result        = false;
        var errored       = false;

        var s = function(bool) {
          cancellations = cancellations + 1;
          result        = result || bool;

          if (cancellations === cancelers.length && !errored) {
            try {
              success(result);
            } catch (err) {
              error(err);
            }
          }
        };

        var f = function(err) {
          if (!errored) {
            errored = true;
            error(err);
          }
        };

        for (var i = 0; i < cancelers.length; i++) {
          cancelers[i](e)(s, f);
        }

        return nonCanceler;
      };
    };

    try {
      success(canceler);
    } catch (err) {
      error(err);
    }

    return nonCanceler;
  };
}

exports._makeAff = function (cb) {
  return function(success, error) {
    return cb(function(e) {
      return function() {
        error(e);
      };
    })(function(v) {
      return function() {
        try {
          success(v);
        } catch (err) {
          error(err);
        }
      };
    })();
  }
}

exports._pure = function (nonCanceler, v) {
  return function(success, error) {
    try {
      success(v);
    } catch (err) {
      error(err);
    }

    return nonCanceler;
  };
}

exports._throwError = function (nonCanceler, e) {
  return function(success, error) {
    error(e);

    return nonCanceler;
  };
}

exports._fmap = function (f, aff) {
  return function(success, error) {
    return aff(function(v) {
      try {
        success(f(v));
      } catch (err) {
        error(err);
      }
    }, error);
  };
}

exports._bind = function (alwaysCanceler, aff, f) {
  return function(success, error) {
    var canceler1, canceler2;

    var isCanceled    = false;
    var requestCancel = false;

    var onCanceler = function(){};

    canceler1 = aff(function(v) {
      if (requestCancel) {
        isCanceled = true;

        return alwaysCanceler;
      } else {
        canceler2 = f(v)(success, error);

        onCanceler(canceler2);

        return canceler2;
      }
    }, error);

    return function(e) {
      return function(s, f) {
        requestCancel = true;

        if (canceler2 !== undefined) {
          return canceler2(e)(s, f);
        } else {
          return canceler1(e)(function(bool) {
            if (bool || isCanceled) {
              try {
                s(true);
              } catch (err) {
                f(err);
              }
            } else {
              onCanceler = function(canceler) {
                canceler(e)(s, f);
              };
            }
          }, f);
        }
      };
    };
  };
}

exports._attempt = function (Left, Right, aff) {
  return function(success, error) {
    return aff(function(v) {
      try {
        success(Right(v));
      } catch (err) {
        error(err);
      }
    }, function(e) {
      try {
        success(Left(e));
      } catch (err) {
        error(err);
      }
    });
  };
}

exports._runAff = function (errorT, successT, aff) {
  return function() {
    return aff(function(v) {
      try {
        successT(v)();
      } catch (err) {
        errorT(err)();
      }
    }, function(e) {
      errorT(e)();
    });
  };
}

exports._liftEff = function (nonCanceler, e) {
  return function(success, error) {
    try {
      success(e());
    } catch (err) {
      error(err);
    }

    return nonCanceler;
  };
}

},{}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Aff/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Plus = require("../Control.Plus");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Monoid = require("../Data.Monoid");
var Canceler = function (x) {
    return x;
};
var runAff = function (ex) {
    return function (f) {
        return function (aff) {
            return $foreign._runAff(ex, f, aff);
        };
    };
};
var makeAff$prime = function (h) {
    return $foreign._makeAff(h);
};
var launchAff = function ($20) {
    return runAff(Control_Monad_Eff_Exception.throwException)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))($foreign._unsafeInterleaveAff($20));
};
var functorAff = new Prelude.Functor(function (f) {
    return function (fa) {
        return $foreign._fmap(f, fa);
    };
});
var cancel = function (v) {
    return v;
};
var attempt = function (aff) {
    return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
};
var apathize = function (a) {
    return Prelude["<$>"](functorAff)(Prelude["const"](Prelude.unit))(attempt(a));
};
var applyAff = new Prelude.Apply(function () {
    return functorAff;
}, function (ff) {
    return function (fa) {
        return $foreign._bind(alwaysCanceler, ff, function (f) {
            return Prelude["<$>"](functorAff)(f)(fa);
        });
    };
});
var applicativeAff = new Prelude.Applicative(function () {
    return applyAff;
}, function (v) {
    return $foreign._pure(nonCanceler, v);
});
var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
var cancelWith = function (aff) {
    return function (c) {
        return $foreign._cancelWith(nonCanceler, aff, c);
    };
};
var forkAff = function (aff) {
    return $foreign._forkAff(nonCanceler, aff);
};
var forkAll = function (dictFoldable) {
    return function (affs) {
        return $foreign._forkAll(nonCanceler, Data_Foldable.foldl(dictFoldable), affs);
    };
};
var later$prime = function (n) {
    return function (aff) {
        return $foreign._setTimeout(nonCanceler, n, aff);
    };
};
var later = later$prime(0);
var liftEff$prime = function (eff) {
    return attempt($foreign._unsafeInterleaveAff($foreign._liftEff(nonCanceler, eff)));
};
var makeAff = function (h) {
    return makeAff$prime(function (e) {
        return function (a) {
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](nonCanceler))(h(e)(a));
        };
    });
};
var semigroupAff = function (dictSemigroup) {
    return new Prelude.Semigroup(function (a) {
        return function (b) {
            return Prelude["<*>"](applyAff)(Prelude["<$>"](functorAff)(Prelude["<>"](dictSemigroup))(a))(b);
        };
    });
};
var monoidAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAff(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Prelude.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};
var semigroupCanceler = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return function (e) {
            return Prelude["<*>"](applyAff)(Prelude["<$>"](functorAff)(Prelude["||"](Prelude.booleanAlgebraBoolean))(v(e)))(v1(e));
        };
    };
});
var monoidCanceler = new Data_Monoid.Monoid(function () {
    return semigroupCanceler;
}, Prelude["const"](Prelude.pure(applicativeAff)(true)));
var bindAff = new Prelude.Bind(function () {
    return applyAff;
}, function (fa) {
    return function (f) {
        return $foreign._bind(alwaysCanceler, fa, f);
    };
});
var monadAff = new Prelude.Monad(function () {
    return applicativeAff;
}, function () {
    return bindAff;
});
var monadContAff = new Control_Monad_Cont_Class.MonadCont(function () {
    return monadAff;
}, function (f) {
    return makeAff(function (eb) {
        return function (cb) {
            return runAff(eb)(cb)(f(function (a) {
                return makeAff(function (v) {
                    return function (v1) {
                        return cb(a);
                    };
                });
            }));
        };
    });
});
var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
    return monadAff;
}, function (eff) {
    return $foreign._liftEff(nonCanceler, eff);
});
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadAff;
}, function (aff) {
    return function (ex) {
        return Prelude[">>="](bindAff)(attempt(aff))(Data_Either.either(ex)(Prelude.pure(applicativeAff)));
    };
}, function (e) {
    return $foreign._throwError(nonCanceler, e);
});
var $$finally = function (aff1) {
    return function (aff2) {
        return Prelude.bind(bindAff)(attempt(aff1))(function (v) {
            return Prelude.bind(bindAff)(aff2)(function () {
                return Data_Either.either(Control_Monad_Error_Class.throwError(monadErrorAff))(Prelude.pure(applicativeAff))(v);
            });
        });
    };
};
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
}, function (f) {
    return function (a) {
        var go = function (size) {
            return function (f1) {
                return function (a1) {
                    return Prelude.bind(bindAff)(f1(a1))(function (v) {
                        if (v instanceof Data_Either.Left) {
                            if (size < 100) {
                                return go(size + 1 | 0)(f1)(v.value0);
                            };
                            if (Prelude.otherwise) {
                                return later(Control_Monad_Rec_Class.tailRecM(monadRecAff)(f1)(v.value0));
                            };
                        };
                        if (v instanceof Data_Either.Right) {
                            return Prelude.pure(applicativeAff)(v.value0);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Aff line 198, column 7 - line 203, column 1: " + [ v.constructor.name ]);
                    });
                };
            };
        };
        return go(0)(f)(a);
    };
});
var altAff = new Control_Alt.Alt(function () {
    return functorAff;
}, function (a1) {
    return function (a2) {
        return Prelude[">>="](bindAff)(attempt(a1))(Data_Either.either(Prelude["const"](a2))(Prelude.pure(applicativeAff)));
    };
});
var plusAff = new Control_Plus.Plus(function () {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadErrorAff)(Control_Monad_Eff_Exception.error("Always fails")));
var alternativeAff = new Control_Alternative.Alternative(function () {
    return plusAff;
}, function () {
    return applicativeAff;
});
var monadPlusAff = new Control_MonadPlus.MonadPlus(function () {
    return alternativeAff;
}, function () {
    return monadAff;
});
module.exports = {
    Canceler: Canceler, 
    runAff: runAff, 
    nonCanceler: nonCanceler, 
    "makeAff'": makeAff$prime, 
    makeAff: makeAff, 
    "liftEff'": liftEff$prime, 
    launchAff: launchAff, 
    "later'": later$prime, 
    later: later, 
    forkAll: forkAll, 
    forkAff: forkAff, 
    "finally": $$finally, 
    cancelWith: cancelWith, 
    cancel: cancel, 
    attempt: attempt, 
    apathize: apathize, 
    semigroupAff: semigroupAff, 
    monoidAff: monoidAff, 
    functorAff: functorAff, 
    applyAff: applyAff, 
    applicativeAff: applicativeAff, 
    bindAff: bindAff, 
    monadAff: monadAff, 
    monadEffAff: monadEffAff, 
    monadErrorAff: monadErrorAff, 
    altAff: altAff, 
    plusAff: plusAff, 
    alternativeAff: alternativeAff, 
    monadPlusAff: monadPlusAff, 
    monadRecAff: monadRecAff, 
    monadContAff: monadContAff, 
    semigroupCanceler: semigroupCanceler, 
    monoidCanceler: monoidCanceler
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Monad.Cont.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Cont.Class/index.js","../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Monad.Eff.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Class/index.js","../Control.Monad.Eff.Exception":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Exception/index.js","../Control.Monad.Error.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Error.Class/index.js","../Control.Monad.Rec.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Rec.Class/index.js","../Control.MonadPlus":"/Users/suppi/code/purescript/ld35/output/Control.MonadPlus/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Function":"/Users/suppi/code/purescript/ld35/output/Data.Function/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Aff/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Cont.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var MonadCont = function (__superclass_Prelude$dotMonad_0, callCC) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont, 
    callCC: callCC
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Prelude.id(Prelude.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    MonadEff: MonadEff, 
    liftEff: liftEff, 
    monadEffEff: monadEffEff
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Console/foreign.js":[function(require,module,exports){
/* global exports, console */
"use strict";

// module Control.Monad.Eff.Console

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Console/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var print = function (dictShow) {
    return function ($1) {
        return $foreign.log(Prelude.show(dictShow)($1));
    };
};
module.exports = {
    print: print, 
    error: $foreign.error, 
    log: $foreign.log
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Console/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Exception.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var unsafeThrowException = function ($0) {
    return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
};
var unsafeThrow = function ($1) {
    return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
};
module.exports = {
    unsafeThrow: unsafeThrow, 
    unsafeThrowException: unsafeThrowException
};

},{"../Control.Monad.Eff.Exception":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Exception/index.js","../Control.Monad.Eff.Unsafe":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Unsafe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Exception/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Exception

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Exception/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var $$throw = function ($0) {
    return $foreign.throwException($foreign.error($0));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Prelude.Show($foreign.showErrorImpl);
module.exports = {
    "throw": $$throw, 
    stack: stack, 
    showError: showError, 
    catchException: $foreign.catchException, 
    throwException: $foreign.throwException, 
    message: $foreign.message, 
    error: $foreign.error
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Exception/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Unsafe

exports.unsafeInterleaveEff = function (f) {
  return f;
};

},{}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var unsafePerformEff = function ($0) {
    return Control_Monad_Eff.runPure($foreign.unsafeInterleaveEff($0));
};
module.exports = {
    unsafePerformEff: unsafePerformEff, 
    unsafeInterleaveEff: $foreign.unsafeInterleaveEff
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Unsafe/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Error.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Either = require("../Data.Either");
var MonadError = function (__superclass_Prelude$dotMonad_0, catchError, throwError) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.catchError = catchError;
    this.throwError = throwError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadErrorMaybe = new MonadError(function () {
    return Data_Maybe.monadMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Prelude.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 53, column 3 - line 54, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Prelude["const"](Data_Maybe.Nothing.value));
var monadErrorEither = new MonadError(function () {
    return Data_Either.monadEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 48, column 3 - line 49, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Data_Either.Left.create);
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var $12 = p(e);
                    if ($12 instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError)(e);
                    };
                    if ($12 instanceof Data_Maybe.Just) {
                        return handler($12.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 42, column 5 - line 46, column 1: " + [ $12.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
module.exports = {
    MonadError: MonadError, 
    catchJust: catchJust, 
    catchError: catchError, 
    throwError: throwError, 
    monadErrorEither: monadErrorEither, 
    monadErrorMaybe: monadErrorMaybe
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Reader.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var MonadReader = function (__superclass_Prelude$dotMonad_0, ask, local) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.ask = ask;
    this.local = local;
};
var monadReaderFun = new MonadReader(function () {
    return Prelude.monadFn;
}, Prelude.id(Prelude.categoryFn), Prelude[">>>"](Prelude.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var reader = function (dictMonadReader) {
    return function (f) {
        return Prelude[">>="]((dictMonadReader["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(ask(dictMonadReader))(function ($1) {
            return Prelude["return"]((dictMonadReader["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(f($1));
        });
    };
};
module.exports = {
    MonadReader: MonadReader, 
    reader: reader, 
    local: local, 
    ask: ask, 
    monadReaderFun: monadReaderFun
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Rec.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Data_Either_Unsafe = require("../Data.Either.Unsafe");
var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a, 
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a, 
                        b: b, 
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var f$prime = function ($18) {
            return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(f($18));
        };
        return function __do() {
            var v = f$prime(a)();
            var v1 = {
                value: v
            };
            (function () {
                while (!(function __do() {
                    var v2 = v1.value;
                    if (v2 instanceof Data_Either.Left) {
                        var v3 = f$prime(v2.value0)();
                        v1.value = v3;
                        return false;
                    };
                    if (v2 instanceof Data_Either.Right) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 81, column 5 - line 86, column 3: " + [ v2.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Either_Unsafe.fromRight)(Control_Monad_ST.readSTRef(v1))();
        };
    };
};
var tailRec = function (f) {
    return function (a) {
        var go = function (__copy_v) {
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Data_Either.Left) {
                    var __tco_v = f(v.value0);
                    v = __tco_v;
                    continue tco;
                };
                if (v instanceof Data_Either.Right) {
                    return v.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 64, column 1 - line 69, column 1: " + [ v.constructor.name ]);
            };
        };
        return go(f(a));
    };
};
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    return function ($19) {
        return Data_Identity.Identity(tailRec(function ($20) {
            return Data_Identity.runIdentity(f($20));
        })($19));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor["<$"]((((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(new Data_Either.Left(u))(ma);
        })(Prelude.unit);
    };
};
module.exports = {
    MonadRec: MonadRec, 
    forever: forever, 
    tailRecM3: tailRecM3, 
    tailRecM2: tailRecM2, 
    tailRecM: tailRecM, 
    tailRec: tailRec, 
    monadRecIdentity: monadRecIdentity, 
    monadRecEff: monadRecEff
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Monad.Eff.Unsafe":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Unsafe/index.js","../Control.Monad.ST":"/Users/suppi/code/purescript/ld35/output/Control.Monad.ST/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Either.Unsafe":"/Users/suppi/code/purescript/ld35/output/Data.Either.Unsafe/index.js","../Data.Functor":"/Users/suppi/code/purescript/ld35/output/Data.Functor/index.js","../Data.Identity":"/Users/suppi/code/purescript/ld35/output/Data.Identity/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.ST

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef, 
    modifySTRef: $foreign.modifySTRef, 
    readSTRef: $foreign.readSTRef, 
    newSTRef: $foreign.newSTRef
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Control.Monad.ST/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var MonadState = function (__superclass_Prelude$dotMonad_0, state) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Prelude.unit, s);
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Prelude.unit, f(s));
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    MonadState: MonadState, 
    modify: modify, 
    put: put, 
    gets: gets, 
    get: get, 
    state: state
};

},{"../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Either = require("../Data.Either");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans = require("../Control.Monad.Trans");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Plus = require("../Control.Plus");
var StateT = function (x) {
    return x;
};
var runStateT = function (v) {
    return v;
};
var withStateT = function (f) {
    return function (s) {
        return StateT(function ($60) {
            return runStateT(s)(f($60));
        });
    };
};
var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (s) {
            return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(v, s));
            });
        };
    };
});
var mapStateT = function (f) {
    return function (m) {
        return StateT(function ($61) {
            return f(runStateT(m)($61));
        });
    };
};
var lazyStateT = new Control_Lazy.Lazy(function (f) {
    return StateT(function (s) {
        return runStateT(f(Prelude.unit))(s);
    });
});
var execStateT = function (dictApply) {
    return function (m) {
        return function (s) {
            return Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runStateT(m)(s));
        };
    };
};
var evalStateT = function (dictApply) {
    return function (m) {
        return function (s) {
            return Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runStateT(m)(s));
        };
    };
};
var monadStateT = function (dictMonad) {
    return new Prelude.Monad(function () {
        return applicativeStateT(dictMonad);
    }, function () {
        return bindStateT(dictMonad);
    });
};
var functorStateT = function (dictMonad) {
    return new Prelude.Functor(Prelude.liftM1(monadStateT(dictMonad)));
};
var bindStateT = function (dictMonad) {
    return new Prelude.Bind(function () {
        return applyStateT(dictMonad);
    }, function (v) {
        return function (f) {
            return function (s) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(v(s))(function (v1) {
                    return runStateT(f(v1.value0))(v1.value1);
                });
            };
        };
    });
};
var applyStateT = function (dictMonad) {
    return new Prelude.Apply(function () {
        return functorStateT(dictMonad);
    }, Prelude.ap(monadStateT(dictMonad)));
};
var applicativeStateT = function (dictMonad) {
    return new Prelude.Applicative(function () {
        return applyStateT(dictMonad);
    }, function (a) {
        return StateT(function (s) {
            return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
        });
    });
};
var monadContStateT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadStateT(dictMonadCont["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return StateT(function (s) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                return runStateT(f(function (a) {
                    return StateT(function (s$prime) {
                        return c(new Data_Tuple.Tuple(a, s$prime));
                    });
                }))(s);
            });
        });
    });
};
var monadEffState = function (dictMonad) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadStateT(dictMonad);
        }, function ($62) {
            return Control_Monad_Trans.lift(monadTransStateT)(dictMonad)(Control_Monad_Eff_Class.liftEff(dictMonadEff)($62));
        });
    };
};
var monadErrorStateT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadStateT(dictMonadError["__superclass_Prelude.Monad_0"]());
    }, function (m) {
        return function (h) {
            return StateT(function (s) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(runStateT(m)(s))(function (e) {
                    return runStateT(h(e))(s);
                });
            });
        };
    }, function (e) {
        return Control_Monad_Trans.lift(monadTransStateT)(dictMonadError["__superclass_Prelude.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
    });
};
var monadReaderStateT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadStateT(dictMonadReader["__superclass_Prelude.Monad_0"]());
    }, Control_Monad_Trans.lift(monadTransStateT)(dictMonadReader["__superclass_Prelude.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadRecStateT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadStateT(dictMonadRec["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return function (a) {
            var f$prime = function (v) {
                return Prelude.bind((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runStateT(f(v.value0))(v.value1))(function (v1) {
                    return Prelude["return"]((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                        if (v1.value0 instanceof Data_Either.Left) {
                            return new Data_Either.Left(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        if (v1.value0 instanceof Data_Either.Right) {
                            return new Data_Either.Right(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        throw new Error("Failed pattern match at Control.Monad.State.Trans line 85, column 7 - line 89, column 1: " + [ v1.value0.constructor.name ]);
                    })());
                });
            };
            return function (s) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
            };
        };
    });
};
var monadStateStateT = function (dictMonad) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadStateT(dictMonad);
    }, function (f) {
        return StateT(function ($63) {
            return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(f($63));
        });
    });
};
var monadWriterStateT = function (dictMonad) {
    return function (dictMonadWriter) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadStateT(dictMonad);
        }, function (m) {
            return StateT(function (s) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(runStateT(m)(s)))(function (v) {
                    return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
                });
            });
        }, function (m) {
            return StateT(function (s) {
                return Control_Monad_Writer_Class.pass(dictMonadWriter)(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (v) {
                    return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
                }));
            });
        }, function (wd) {
            return Control_Monad_Trans.lift(monadTransStateT)(dictMonad)(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
        });
    };
};
var altStateT = function (dictMonad) {
    return function (dictAlt) {
        return new Control_Alt.Alt(function () {
            return functorStateT(dictMonad);
        }, function (x) {
            return function (y) {
                return StateT(function (s) {
                    return Control_Alt["<|>"](dictAlt)(runStateT(x)(s))(runStateT(y)(s));
                });
            };
        });
    };
};
var plusStateT = function (dictMonad) {
    return function (dictPlus) {
        return new Control_Plus.Plus(function () {
            return altStateT(dictMonad)(dictPlus["__superclass_Control.Alt.Alt_0"]());
        }, StateT(function (v) {
            return Control_Plus.empty(dictPlus);
        }));
    };
};
var alternativeStateT = function (dictMonad) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return plusStateT(dictMonad)(dictAlternative["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeStateT(dictMonad);
        });
    };
};
var monadPlusStateT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeStateT(dictMonadPlus["__superclass_Prelude.Monad_0"]())(dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadStateT(dictMonadPlus["__superclass_Prelude.Monad_0"]());
    });
};
module.exports = {
    StateT: StateT, 
    withStateT: withStateT, 
    mapStateT: mapStateT, 
    execStateT: execStateT, 
    evalStateT: evalStateT, 
    runStateT: runStateT, 
    functorStateT: functorStateT, 
    applyStateT: applyStateT, 
    applicativeStateT: applicativeStateT, 
    altStateT: altStateT, 
    plusStateT: plusStateT, 
    alternativeStateT: alternativeStateT, 
    bindStateT: bindStateT, 
    monadStateT: monadStateT, 
    monadRecStateT: monadRecStateT, 
    monadPlusStateT: monadPlusStateT, 
    monadTransStateT: monadTransStateT, 
    lazyStateT: lazyStateT, 
    monadEffState: monadEffState, 
    monadContStateT: monadContStateT, 
    monadErrorStateT: monadErrorStateT, 
    monadReaderStateT: monadReaderStateT, 
    monadStateStateT: monadStateStateT, 
    monadWriterStateT: monadWriterStateT
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Lazy":"/Users/suppi/code/purescript/ld35/output/Control.Lazy/index.js","../Control.Monad.Cont.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Cont.Class/index.js","../Control.Monad.Eff.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Class/index.js","../Control.Monad.Error.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Class/index.js","../Control.Monad.Trans":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Trans/index.js","../Control.Monad.Writer.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus":"/Users/suppi/code/purescript/ld35/output/Control.MonadPlus/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.State/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Data_Identity = require("../Data.Identity");
var Data_Tuple = require("../Data.Tuple");
var withState = Control_Monad_State_Trans.withStateT;
var runState = function (s) {
    return function ($0) {
        return Data_Identity.runIdentity(Control_Monad_State_Trans.runStateT(s)($0));
    };
};
var mapState = function (f) {
    return Control_Monad_State_Trans.mapStateT(function ($1) {
        return Data_Identity.Identity(f(Data_Identity.runIdentity($1)));
    });
};
var execState = function (m) {
    return function (s) {
        return Data_Tuple.snd(runState(m)(s));
    };
};
var evalState = function (m) {
    return function (s) {
        return Data_Tuple.fst(runState(m)(s));
    };
};
module.exports = {
    withState: withState, 
    mapState: mapState, 
    execState: execState, 
    evalState: evalState, 
    runState: runState
};

},{"../Control.Monad.State.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Class/index.js","../Control.Monad.State.Trans":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Trans/index.js","../Data.Identity":"/Users/suppi/code/purescript/ld35/output/Data.Identity/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    MonadTrans: MonadTrans, 
    lift: lift
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad.Writer.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Monoid = require("../Data.Monoid");
var Data_Tuple = require("../Data.Tuple");
var MonadWriter = function (__superclass_Prelude$dotMonad_0, listen, pass, writer) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.listen = listen;
    this.pass = pass;
    this.writer = writer;
};
var writer = function (dict) {
    return dict.writer;
};
var tell = function (dictMonoid) {
    return function (dictMonad) {
        return function (dictMonadWriter) {
            return function (w) {
                return writer(dictMonadWriter)(new Data_Tuple.Tuple(Prelude.unit, w));
            };
        };
    };
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonoid) {
    return function (dictMonad) {
        return function (dictMonadWriter) {
            return function (f) {
                return function (m) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(listen(dictMonadWriter)(m))(function (v) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
                    });
                };
            };
        };
    };
};
var censor = function (dictMonoid) {
    return function (dictMonad) {
        return function (dictMonadWriter) {
            return function (f) {
                return function (m) {
                    return pass(dictMonadWriter)(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(v, f));
                    }));
                };
            };
        };
    };
};
module.exports = {
    MonadWriter: MonadWriter, 
    censor: censor, 
    listens: listens, 
    tell: tell, 
    pass: pass, 
    listen: listen, 
    writer: writer
};

},{"../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Monad/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var when = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at Control.Monad line 9, column 1 - line 10, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var unless = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at Control.Monad line 14, column 1 - line 15, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    unless: unless, 
    when: when
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.MonadPlus/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Alternative = require("../Control.Alternative");
var Control_Plus = require("../Control.Plus");
var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function (dictMonadPlus) {
    return function (v) {
        if (v) {
            return Prelude["return"]((dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at Control.MonadPlus line 36, column 1 - line 37, column 1: " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard, 
    monadPlusArray: monadPlusArray
};

},{"../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Control.Timer/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
module.exports = {};

},{}],"/Users/suppi/code/purescript/ld35/output/DOM/index.js":[function(require,module,exports){
arguments[4]["/Users/suppi/code/purescript/ld35/output/Control.Timer/index.js"][0].apply(exports,arguments)
},{}],"/Users/suppi/code/purescript/ld35/output/Data.Array.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.ST

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Array.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Maybe = require("../Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    thaw: thaw, 
    freeze: freeze, 
    pushSTArray: pushSTArray, 
    peekSTArray: peekSTArray, 
    toAssocArray: $foreign.toAssocArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    emptySTArray: $foreign.emptySTArray, 
    runSTArray: $foreign.runSTArray
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Monad.ST":"/Users/suppi/code/purescript/ld35/output/Control.Monad.ST/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Array.ST/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Array/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    for (var i = start, n = 0; i !== end; i += step) {
      result[n++] = i;
    }
    result[n] = i;
    return result;
  };
};

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) r[i] = v;
    return r;
  };
};

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no  = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes: yes, no: no };
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    /* jshint maxparams: 2 */
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Array/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Lazy = require("../Control.Lazy");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Plus = require("../Control.Plus");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Maybe_Unsafe = require("../Data.Maybe.Unsafe");
var $colon = $foreign.cons;
var $dot$dot = $foreign.range;
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unzip = $foreign["uncons'"](function (v) {
    return new Data_Tuple.Tuple([  ], [  ]);
})(function (v) {
    return function (ts) {
        var $36 = unzip(ts);
        return new Data_Tuple.Tuple($colon(v.value0)($36.value0), $colon(v.value1)($36.value1));
    };
});
var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x, 
            tail: xs
        });
    };
});
var take = $foreign.slice(0);
var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var span = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $42 = uncons(xs);
                if ($42 instanceof Data_Maybe.Just && p($42.value0.head)) {
                    var __tco_acc = $colon($42.value0.head)(acc);
                    acc = __tco_acc;
                    xs = $42.value0.tail;
                    continue tco;
                };
                return {
                    init: $foreign.reverse(acc), 
                    rest: xs
                };
            };
        };
    };
    return go([  ]);
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var $46 = comp(x)(y);
                if ($46 instanceof Prelude.GT) {
                    return 1;
                };
                if ($46 instanceof Prelude.EQ) {
                    return 0;
                };
                if ($46 instanceof Prelude.LT) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.Array line 417, column 15 - line 422, column 1: " + [ $46.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Prelude.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())([  ]);
            };
            if (Prelude.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad["__superclass_Prelude.Applicative_0"]())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at Data.Array line 138, column 1 - line 145, column 1: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var $49 = uncons(xs);
        if ($49 instanceof Data_Maybe.Just) {
            return $colon($49.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq($49.value0.head)(y);
            })($49.value0.tail)));
        };
        if ($49 instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match at Data.Array line 500, column 15 - line 507, column 1: " + [ $49.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Prelude.eq(dictEq));
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Prelude["<*>"]((dictAlternative["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt["<|>"]((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Prelude.pure(dictAlternative["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Prelude.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 228, column 1 - line 245, column 1: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var $bang$bang = index;
var last = function (xs) {
    return $bang$bang(xs)($foreign.length(xs) - 1);
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (v) {
        return new Data_Maybe.Just(x);
    };
});
var groupBy = function (op) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $54 = uncons(xs);
                if ($54 instanceof Data_Maybe.Just) {
                    var sp = span(op($54.value0.head))($54.value0.tail);
                    var __tco_acc = $colon($colon($54.value0.head)(sp.init))(acc);
                    acc = __tco_acc;
                    xs = sp.rest;
                    continue tco;
                };
                if ($54 instanceof Data_Maybe.Nothing) {
                    return $foreign.reverse(acc);
                };
                throw new Error("Failed pattern match at Data.Array line 488, column 15 - line 494, column 1: " + [ $54.constructor.name ]);
            };
        };
    };
    return go([  ]);
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Prelude.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($68) {
        return group(dictOrd["__superclass_Prelude.Eq_0"]())(sort(dictOrd)($68));
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(a);
            })(function (b) {
                return function (bs) {
                    return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Prelude["=="](Prelude.eqOrdering)(cmp(x)(y))(Prelude.GT.value);
            })(ys));
            return Data_Maybe_Unsafe.fromJust(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Prelude.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Prelude.eq(dictEq));
};
var filterM = function (dictMonad) {
    return function (p) {
        return $foreign["uncons'"](function (v) {
            return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())([  ]);
        })(function (x) {
            return function (xs) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(p(x))(function (v) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(filterM(dictMonad)(p)(xs))(function (v1) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())((function () {
                            if (v) {
                                return $colon(x)(v1);
                            };
                            if (!v) {
                                return v1;
                            };
                            throw new Error("Failed pattern match at Data.Array line 390, column 5 - line 396, column 1: " + [ v.constructor.name ]);
                        })());
                    });
                });
            };
        });
    };
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe_Unsafe.fromJust(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["++"](Prelude.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Prelude["=="](dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Prelude.eq(dictEq));
};
var $bslash$bslash = function (dictEq) {
    return function (xs) {
        return function (ys) {
            if ($$null(xs)) {
                return [  ];
            };
            if (Prelude.otherwise) {
                return $foreign["uncons'"](Prelude["const"](xs))(function (y) {
                    return function (ys2) {
                        return $bslash$bslash(dictEq)($$delete(dictEq)(y)(xs))(ys2);
                    };
                })(ys);
            };
            throw new Error("Failed pattern match at Data.Array line 532, column 1 - line 536, column 1: " + [ xs.constructor.name, ys.constructor.name ]);
        };
    };
};
var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($69) {
        return Data_Maybe.maybe([  ])(singleton)(f($69));
    });
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var $66 = f(x);
                if ($66 instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if ($66 instanceof Data_Maybe.Just) {
                    return updateAt(i)($66.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 350, column 10 - line 359, column 1: " + [ $66.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
module.exports = {
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    take: take, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    concatMap: concatMap, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    ":": $colon, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    "..": $dot$dot, 
    singleton: singleton, 
    zipWith: $foreign.zipWith, 
    drop: $foreign.drop, 
    slice: $foreign.slice, 
    partition: $foreign.partition, 
    filter: $foreign.filter, 
    concat: $foreign.concat, 
    reverse: $foreign.reverse, 
    snoc: $foreign.snoc, 
    cons: $foreign.cons, 
    length: $foreign.length, 
    replicate: $foreign.replicate, 
    range: $foreign.range
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Lazy":"/Users/suppi/code/purescript/ld35/output/Control.Lazy/index.js","../Control.MonadPlus":"/Users/suppi/code/purescript/ld35/output/Control.MonadPlus/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Maybe.Unsafe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Unsafe/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Array/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.ArrayBuffer.Types/index.js":[function(require,module,exports){
arguments[4]["/Users/suppi/code/purescript/ld35/output/Control.Timer/index.js"][0].apply(exports,arguments)
},{}],"/Users/suppi/code/purescript/ld35/output/Data.Bifoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Apply = require("../Control.Apply");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($18) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($18));
                })(function ($19) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(g($19));
                })(Prelude.pure(dictApplicative)(Prelude.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldr(dictBifoldable)(function ($20) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f($20));
                    })(function ($21) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(g($21));
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldl(dictBifoldable)(function (m) {
                        return function (a) {
                            return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(m)(f(a));
                        };
                    })(function (m) {
                        return function (b) {
                            return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(m)(g(b));
                        };
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($22) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(f)($22)));
                    })(function ($23) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(g)($23)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($24) {
                        return Data_Monoid_Endo.Endo(f($24));
                    })(function ($25) {
                        return Data_Monoid_Endo.Endo(g($25));
                    })(p))(z);
                };
            };
        };
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($26) {
                    return Data_Monoid_Disj.runDisj(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($27) {
                        return Data_Monoid_Disj.Disj(p($27));
                    })(function ($28) {
                        return Data_Monoid_Disj.Disj(q($28));
                    })($26));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($29) {
                    return Data_Monoid_Conj.runConj(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra))(function ($30) {
                        return Data_Monoid_Conj.Conj(p($30));
                    })(function ($31) {
                        return Data_Monoid_Conj.Conj(q($31));
                    })($29));
                };
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bisequence_: bisequence_, 
    bifor_: bifor_, 
    bitraverse_: bitraverse_, 
    bifold: bifold, 
    bifoldMapDefaultL: bifoldMapDefaultL, 
    bifoldMapDefaultR: bifoldMapDefaultR, 
    bifoldlDefault: bifoldlDefault, 
    bifoldrDefault: bifoldrDefault, 
    bifoldMap: bifoldMap, 
    bifoldl: bifoldl, 
    bifoldr: bifoldr
};

},{"../Control.Apply":"/Users/suppi/code/purescript/ld35/output/Control.Apply/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Monoid.Conj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Endo/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Bifunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    rmap: rmap, 
    lmap: lmap, 
    bimap: bimap
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Bitraversable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return bitraverse(dictBitraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn))(t);
        };
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequenceDefault: bisequenceDefault, 
    bitraverseDefault: bitraverseDefault, 
    bisequence: bisequence, 
    bitraverse: bitraverse
};

},{"../Data.Bifoldable":"/Users/suppi/code/purescript/ld35/output/Data.Bifoldable/index.js","../Data.Bifunctor":"/Users/suppi/code/purescript/ld35/output/Data.Bifunctor/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Char/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Char

exports.toString = function (c) {
  return c;
};

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Char/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
module.exports = {
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharCode: $foreign.toCharCode, 
    fromCharCode: $foreign.fromCharCode, 
    toString: $foreign.toString
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Char/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Const/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Const = function (x) {
    return x;
};
var showConst = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Const (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupoidConst = new Prelude.Semigroupoid(function (v) {
    return function (v1) {
        return v1;
    };
});
var semigroupConst = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["<>"](dictSemigroup)(v)(v1);
        };
    });
};
var monoidConst = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConst(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(dictMonoid));
};
var getConst = function (v) {
    return v;
};
var functorConst = new Prelude.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return Data_Monoid.mempty(dictMonoid);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
});
var traversableConst = new Data_Traversable.Traversable(function () {
    return foldableConst;
}, function () {
    return functorConst;
}, function (dictApplicative) {
    return function (v) {
        return Prelude.pure(dictApplicative)(v);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return Prelude.pure(dictApplicative)(v1);
        };
    };
});
var eqConst = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordConst = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqConst(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
    return function (v1) {
        return v1;
    };
});
var boundedConst = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var applyConst = function (dictSemigroup) {
    return new Prelude.Apply(function () {
        return functorConst;
    }, function (v) {
        return function (v1) {
            return Prelude["<>"](dictSemigroup)(v)(v1);
        };
    });
};
var bindConst = function (dictSemigroup) {
    return new Prelude.Bind(function () {
        return applyConst(dictSemigroup);
    }, function (v) {
        return function (v1) {
            return v;
        };
    });
};
var applicativeConst = function (dictMonoid) {
    return new Prelude.Applicative(function () {
        return applyConst(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, function (v) {
        return Data_Monoid.mempty(dictMonoid);
    });
};
module.exports = {
    Const: Const, 
    getConst: getConst, 
    eqConst: eqConst, 
    ordConst: ordConst, 
    boundedConst: boundedConst, 
    showConst: showConst, 
    semigroupoidConst: semigroupoidConst, 
    semigroupConst: semigroupConst, 
    monoidConst: monoidConst, 
    functorConst: functorConst, 
    invariantConst: invariantConst, 
    applyConst: applyConst, 
    bindConst: bindConst, 
    applicativeConst: applicativeConst, 
    contravariantConst: contravariantConst, 
    foldableConst: foldableConst, 
    traversableConst: traversableConst
};

},{"../Data.Bifoldable":"/Users/suppi/code/purescript/ld35/output/Data.Bifoldable/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Functor.Contravariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Contravariant/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Either.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Either.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Either.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var fromRight = function (v) {
    if (v instanceof Data_Either.Right) {
        return v.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromRight called on Left value");
};
var fromLeft = function (v) {
    if (v instanceof Data_Either.Left) {
        return v.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromLeft called on Right value");
};
module.exports = {
    fromRight: fromRight, 
    fromLeft: fromLeft
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Either.Unsafe/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Extend = require("../Control.Extend");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Foldable = require("../Data.Foldable");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Prelude.Show(function (v) {
            if (v instanceof Left) {
                return "Left (" + (Prelude.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "Right (" + (Prelude.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 175, column 3 - line 176, column 3: " + [ v.constructor.name ]);
        });
    };
};
var functorEither = new Prelude.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 53, column 3 - line 54, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 206, column 3 - line 207, column 3: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 204, column 3 - line 205, column 3: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 202, column 3 - line 203, column 3: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Prelude.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 220, column 3 - line 221, column 3: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Prelude.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 218, column 3 - line 219, column 3: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Prelude.Eq(function (v) {
            return function (v1) {
                if (v instanceof Left && v1 instanceof Left) {
                    return Prelude["=="](dictEq)(v.value0)(v1.value0);
                };
                if (v instanceof Right && v1 instanceof Right) {
                    return Prelude["=="](dictEq1)(v.value0)(v1.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Prelude.Ord(function () {
            return eqEither(dictOrd["__superclass_Prelude.Eq_0"]())(dictOrd1["__superclass_Prelude.Eq_0"]());
        }, function (v) {
            return function (v1) {
                if (v instanceof Left && v1 instanceof Left) {
                    return Prelude.compare(dictOrd)(v.value0)(v1.value0);
                };
                if (v instanceof Right && v1 instanceof Right) {
                    return Prelude.compare(dictOrd1)(v.value0)(v1.value0);
                };
                if (v instanceof Left) {
                    return Prelude.LT.value;
                };
                if (v1 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 3 - line 193, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        });
    };
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 29, column 1 - line 30, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Prelude.Bounded(new Left(Prelude.bottom(dictBounded)), new Right(Prelude.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 57, column 3 - line 58, column 3: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 214, column 3 - line 215, column 3: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 212, column 3 - line 213, column 3: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 210, column 3 - line 211, column 3: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 226, column 3 - line 227, column 3: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 224, column 3 - line 225, column 3: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Prelude.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Prelude["<$>"](functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 93, column 3 - line 94, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Prelude.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Prelude.Semigroup(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function (dictSemiring) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.mul(dictSemiring))(x))(y);
        };
    }, new Right(Prelude.one(dictSemiring)), new Right(Prelude.zero(dictSemiring)));
};
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    isRight: isRight, 
    isLeft: isLeft, 
    either: either, 
    functorEither: functorEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    ordEither: ordEither, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither, 
    semiringEither: semiringEither, 
    semigroupEither: semigroupEither
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Bifoldable":"/Users/suppi/code/purescript/ld35/output/Data.Bifoldable/index.js","../Data.Bifunctor":"/Users/suppi/code/purescript/ld35/output/Data.Bifunctor/index.js","../Data.Bitraversable":"/Users/suppi/code/purescript/ld35/output/Data.Bitraversable/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Foldable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foldable

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Apply = require("../Control.Apply");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($161) {
                return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($161));
            })(Prelude.pure(dictApplicative)(Prelude.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Prelude.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Prelude.id(Prelude.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(v.acc)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $87 = cmp(v.value0)(v1);
                        if ($87 instanceof Prelude.GT) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 246, column 3 - line 247, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Prelude.compare(dictOrd));
    };
};
var mconcat = function (dictFoldable) {
    return function (dictMonoid) {
        return foldl(dictFoldable)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(dictMonoid));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $91 = cmp(v.value0)(v1);
                        if ($91 instanceof Prelude.LT) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 261, column 3 - line 262, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Prelude.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Prelude["*"](dictSemiring))(Prelude.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Prelude["+"](dictSemiring))(Prelude.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 108, column 3 - line 109, column 3: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 106, column 3 - line 107, column 3: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 104, column 3 - line 105, column 3: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldr(dictFoldable)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldl(dictFoldable)(function (acc) {
                    return function (x) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($162) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(c)($162)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($163) {
                    return Data_Monoid_Endo.Endo(c($163));
                })(xs))(u);
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Prelude.id(Prelude.categoryFn));
    };
};
var find = function (dictFoldable) {
    return function (p) {
        return foldl(dictFoldable)(function (r) {
            return function (x) {
                var $160 = p(x);
                if ($160) {
                    return new Data_Maybe.Just(x);
                };
                if (!$160) {
                    return r;
                };
                throw new Error("Failed pattern match at Data.Foldable line 234, column 25 - line 234, column 50: " + [ $160.constructor.name ]);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($164) {
                return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($165) {
                    return Data_Monoid_Disj.Disj(p($165));
                })($164));
            };
        };
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($166) {
            return any(dictFoldable)(Prelude.booleanAlgebraBoolean)(Prelude["=="](dictEq)($166));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($167) {
                return !elem(dictFoldable)(dictEq)(x)($167);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return any(dictFoldable)(dictBooleanAlgebra)(Prelude.id(Prelude.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($168) {
                return Data_Monoid_Conj.runConj(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra))(function ($169) {
                    return Data_Monoid_Conj.Conj(p($169));
                })($168));
            };
        };
    };
};
var and = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return all(dictFoldable)(dictBooleanAlgebra)(Prelude.id(Prelude.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    minimumBy: minimumBy, 
    minimum: minimum, 
    maximumBy: maximumBy, 
    maximum: maximum, 
    find: find, 
    notElem: notElem, 
    elem: elem, 
    product: product, 
    sum: sum, 
    all: all, 
    any: any, 
    or: or, 
    and: and, 
    intercalate: intercalate, 
    mconcat: mconcat, 
    sequence_: sequence_, 
    for_: for_, 
    traverse_: traverse_, 
    fold: fold, 
    foldMapDefaultR: foldMapDefaultR, 
    foldMapDefaultL: foldMapDefaultL, 
    foldlDefault: foldlDefault, 
    foldrDefault: foldrDefault, 
    foldMap: foldMap, 
    foldl: foldl, 
    foldr: foldr, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Apply":"/Users/suppi/code/purescript/ld35/output/Control.Apply/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Maybe.First":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.First/index.js","../Data.Maybe.Last":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Last/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Monoid.Additive":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Multiplicative/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Function/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Function

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Function/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    on: on, 
    runFn10: $foreign.runFn10, 
    runFn9: $foreign.runFn9, 
    runFn8: $foreign.runFn8, 
    runFn7: $foreign.runFn7, 
    runFn6: $foreign.runFn6, 
    runFn5: $foreign.runFn5, 
    runFn4: $foreign.runFn4, 
    runFn3: $foreign.runFn3, 
    runFn2: $foreign.runFn2, 
    runFn1: $foreign.runFn1, 
    runFn0: $foreign.runFn0, 
    mkFn10: $foreign.mkFn10, 
    mkFn9: $foreign.mkFn9, 
    mkFn8: $foreign.mkFn8, 
    mkFn7: $foreign.mkFn7, 
    mkFn6: $foreign.mkFn6, 
    mkFn5: $foreign.mkFn5, 
    mkFn4: $foreign.mkFn4, 
    mkFn3: $foreign.mkFn3, 
    mkFn2: $foreign.mkFn2, 
    mkFn1: $foreign.mkFn1, 
    mkFn0: $foreign.mkFn0
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Function/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Functor.Compose/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Plus = require("../Control.Plus");
var Control_Alternative = require("../Control.Alternative");
var Data_Foldable = require("../Data.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Compose = (function () {
    function Compose(value0) {
        this.value0 = value0;
    };
    Compose.create = function (value0) {
        return new Compose(value0);
    };
    return Compose;
})();
var eqCompose = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v.value0)(v1.value0);
        };
    });
};
var ordCompose = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqCompose(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v.value0)(v1.value0);
        };
    });
};
var decompose = function (v) {
    return v.value0;
};
var foldableCompose = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return function ($49) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(decompose($49));
                };
            };
        }, function (f) {
            return function (i) {
                return function ($50) {
                    return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(decompose($50));
                };
            };
        }, function (f) {
            return function (i) {
                return function ($51) {
                    return Data_Foldable.foldr(dictFoldable)(Prelude.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(decompose($51));
                };
            };
        });
    };
};
var functorCompose = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Prelude.Functor(function (f) {
            return function ($52) {
                return Compose.create(Prelude.map(dictFunctor)(Prelude.map(dictFunctor1)(f))(decompose($52)));
            };
        });
    };
};
var showCompose = function (dictShow) {
    return new Prelude.Show(function ($53) {
        return Prelude.show(dictShow)(decompose($53));
    });
};
var traversableCompose = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCompose(dictTraversable["__superclass_Data.Foldable.Foldable_1"]())(dictTraversable1["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCompose(dictTraversable["__superclass_Prelude.Functor_0"]())(dictTraversable1["__superclass_Prelude.Functor_0"]());
        }, function (dictApplicative) {
            return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Prelude.id(Prelude.categoryFn));
        }, function (dictApplicative) {
            return function (f) {
                return function ($54) {
                    return Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Compose.create)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(decompose($54)));
                };
            };
        });
    };
};
var applyCompose = function (dictApply) {
    return function (dictApply1) {
        return new Prelude.Apply(function () {
            return functorCompose(dictApply["__superclass_Prelude.Functor_0"]())(dictApply1["__superclass_Prelude.Functor_0"]());
        }, function (v) {
            return function (v1) {
                return Compose.create(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude.apply(dictApply1))(v.value0))(v1.value0));
            };
        });
    };
};
var applicativeCompose = function (dictApplicative) {
    return function (dictApplicative1) {
        return new Prelude.Applicative(function () {
            return applyCompose(dictApplicative["__superclass_Prelude.Apply_0"]())(dictApplicative1["__superclass_Prelude.Apply_0"]());
        }, function ($55) {
            return Compose.create(Prelude.pure(dictApplicative)(Prelude.pure(dictApplicative1)($55)));
        });
    };
};
var altCompose = function (dictAlt) {
    return function (dictFunctor) {
        return new Control_Alt.Alt(function () {
            return functorCompose(dictAlt["__superclass_Prelude.Functor_0"]())(dictFunctor);
        }, function (v) {
            return function (v1) {
                return Compose.create(Control_Alt.alt(dictAlt)(v.value0)(v1.value0));
            };
        });
    };
};
var plusCompose = function (dictPlus) {
    return function (dictFunctor) {
        return new Control_Plus.Plus(function () {
            return altCompose(dictPlus["__superclass_Control.Alt.Alt_0"]())(dictFunctor);
        }, new Compose(Control_Plus.empty(dictPlus)));
    };
};
var alternativeCompose = function (dictAlternative) {
    return function (dictApplicative) {
        return new Control_Alternative.Alternative(function () {
            return plusCompose(dictAlternative["__superclass_Control.Plus.Plus_1"]())((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, function () {
            return applicativeCompose(dictAlternative["__superclass_Prelude.Applicative_0"]())(dictApplicative);
        });
    };
};
module.exports = {
    Compose: Compose, 
    decompose: decompose, 
    showCompose: showCompose, 
    eqCompose: eqCompose, 
    ordCompose: ordCompose, 
    functorCompose: functorCompose, 
    applyCompose: applyCompose, 
    applicativeCompose: applicativeCompose, 
    foldableCompose: foldableCompose, 
    traversableCompose: traversableCompose, 
    altCompose: altCompose, 
    plusCompose: plusCompose, 
    alternativeCompose: alternativeCompose
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Functor.Contravariant/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Contravariant = function (cmap) {
    this.cmap = cmap;
};
var cmap = function (dict) {
    return dict.cmap;
};
var $greater$dollar$less = function (dictContravariant) {
    return cmap(dictContravariant);
};
var $greater$hash$less = function (dictContravariant) {
    return function (x) {
        return function (f) {
            return $greater$dollar$less(dictContravariant)(f)(x);
        };
    };
};
module.exports = {
    Contravariant: Contravariant, 
    ">#<": $greater$hash$less, 
    ">$<": $greater$dollar$less, 
    cmap: cmap
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (dictFunctor) {
    return function ($1) {
        return Prelude["const"](Prelude.map(dictFunctor)($1));
    };
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imapF: imapF, 
    imap: imap, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Functor/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var $less$dollar = function (dictFunctor) {
    return function (x) {
        return function (f) {
            return Prelude["<$>"](dictFunctor)(Prelude["const"](x))(f);
        };
    };
};
var $dollar$greater = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return Prelude["<$>"](dictFunctor)(Prelude["const"](x))(f);
        };
    };
};
module.exports = {
    "$>": $dollar$greater, 
    "<$": $less$dollar
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Identity/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Identity (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude["+"](dictSemiring)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude["*"](dictSemiring)(v)(v1);
        };
    }, Prelude.one(dictSemiring), Prelude.zero(dictSemiring));
};
var semigroupIdenity = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["<>"](dictSemigroup)(v)(v1);
        };
    });
};
var runIdentity = function (v) {
    return v;
};
var ringIdentity = function (dictRing) {
    return new Prelude.Ring(function () {
        return semiringIdentity(dictRing["__superclass_Prelude.Semiring_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude["-"](dictRing)(v)(v1);
        };
    });
};
var monoidIdentity = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupIdenity(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(dictMonoid));
};
var moduloSemiringIdentity = function (dictModuloSemiring) {
    return new Prelude.ModuloSemiring(function () {
        return semiringIdentity(dictModuloSemiring["__superclass_Prelude.Semiring_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude["/"](dictModuloSemiring)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.mod(dictModuloSemiring)(v)(v1);
        };
    });
};
var functorIdentity = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(f(v));
        };
    };
});
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var eqIdentity = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordIdentity = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqIdentity(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var divisionRingIdentity = function (dictDivisionRing) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringIdentity(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringIdentity(dictDivisionRing["__superclass_Prelude.Ring_0"]());
    });
};
var numIdentity = function (dictNum) {
    return new Prelude.Num(function () {
        return divisionRingIdentity(dictNum["__superclass_Prelude.DivisionRing_0"]());
    });
};
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var boundedIdentity = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var boundedOrdIdentity = function (dictBoundedOrd) {
    return new Prelude.BoundedOrd(function () {
        return boundedIdentity(dictBoundedOrd["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordIdentity(dictBoundedOrd["__superclass_Prelude.Ord_1"]());
    });
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedIdentity(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return Prelude.not(dictBooleanAlgebra)(v);
    });
};
var applyIdentity = new Prelude.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Prelude.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Prelude.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Prelude.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
module.exports = {
    Identity: Identity, 
    runIdentity: runIdentity, 
    eqIdentity: eqIdentity, 
    ordIdentity: ordIdentity, 
    boundedIdentity: boundedIdentity, 
    boundedOrdIdentity: boundedOrdIdentity, 
    booleanAlgebraIdentity: booleanAlgebraIdentity, 
    semigroupIdenity: semigroupIdenity, 
    monoidIdentity: monoidIdentity, 
    semiringIdentity: semiringIdentity, 
    moduloSemiringIdentity: moduloSemiringIdentity, 
    ringIdentity: ringIdentity, 
    divisionRingIdentity: divisionRingIdentity, 
    numIdentity: numIdentity, 
    showIdentity: showIdentity, 
    functorIdentity: functorIdentity, 
    invariantIdentity: invariantIdentity, 
    applyIdentity: applyIdentity, 
    applicativeIdentity: applicativeIdentity, 
    bindIdentity: bindIdentity, 
    monadIdentity: monadIdentity, 
    extendIdentity: extendIdentity, 
    comonadIdentity: comonadIdentity, 
    foldableIdentity: foldableIdentity, 
    traversableIdentity: traversableIdentity
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Int.Bits/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int.Bits

exports.andImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.orImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xorImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Int.Bits/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var $dot$bar$dot = $foreign.orImpl;
var $dot$up$dot = $foreign.xorImpl;
var $dot$amp$dot = $foreign.andImpl;
module.exports = {
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    ".&.": $dot$amp$dot, 
    complement: $foreign.complement, 
    zshr: $foreign.zshr, 
    shr: $foreign.shr, 
    shl: $foreign.shl
};

},{"./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Int.Bits/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Int/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringImpl = function (just) {
  return function (nothing) {
    return function (s) {
      /* jshint bitwise: false */
      var i = parseFloat(s);
      return (i | 0) === i ? just(i) : nothing;
    };
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Int/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_Unsafe = require("../Data.Maybe.Unsafe");
var $$Math = require("../Math");
var odd = function (x) {
    return (x & 1) !== 0;
};
var fromString = $foreign.fromStringImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x >= $foreign.toNumber(Prelude.top(Prelude.boundedInt))) {
        return Prelude.top(Prelude.boundedInt);
    };
    if (x <= $foreign.toNumber(Prelude.bottom(Prelude.boundedInt))) {
        return Prelude.bottom(Prelude.boundedInt);
    };
    if (Prelude.otherwise) {
        return Data_Maybe_Unsafe.fromJust(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 49, column 1 - line 56, column 1: " + [ x.constructor.name ]);
};
var round = function ($1) {
    return unsafeClamp($$Math.round($1));
};
var floor = function ($2) {
    return unsafeClamp($$Math.floor($2));
};
var even = function (x) {
    return (x & 1) === 0;
};
var ceil = function ($3) {
    return unsafeClamp($$Math.ceil($3));
};
module.exports = {
    odd: odd, 
    even: even, 
    fromString: fromString, 
    round: round, 
    floor: floor, 
    ceil: ceil, 
    fromNumber: fromNumber, 
    toNumber: $foreign.toNumber
};

},{"../Data.Int.Bits":"/Users/suppi/code/purescript/ld35/output/Data.Int.Bits/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Maybe.Unsafe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Unsafe/index.js","../Math":"/Users/suppi/code/purescript/ld35/output/Math/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Int/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Common/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Data_Lens_Lens_Tuple = require("../Data.Lens.Lens.Tuple");
var Data_Lens_Lens_Unit = require("../Data.Lens.Lens.Unit");
var Data_Lens_Lens_Void = require("../Data.Lens.Lens.Void");
var Data_Lens_Prism_Either = require("../Data.Lens.Prism.Either");
var Data_Lens_Prism_Maybe = require("../Data.Lens.Prism.Maybe");
module.exports = {};

},{"../Data.Lens.Lens.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens.Tuple/index.js","../Data.Lens.Lens.Unit":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens.Unit/index.js","../Data.Lens.Lens.Void":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens.Void/index.js","../Data.Lens.Prism.Either":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism.Either/index.js","../Data.Lens.Prism.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism.Maybe/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Fold/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Apply = require("../Control.Apply");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Tuple = require("../Data.Tuple");
var Data_Lens_Internal_Void = require("../Data.Lens.Internal.Void");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var unfolded = function (dictMonoid) {
    return function (f) {
        return function (p) {
            var go = function ($37) {
                return Data_Maybe.maybe(Data_Monoid.mempty(dictMonoid))(function (v) {
                    return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(Data_Lens_Internal_Forget.runForget(p)(v.value0))(go(v.value1));
                })(f($37));
            };
            return go;
        };
    };
};
var replicated = function (dictMonoid) {
    return function (n) {
        var go = function (v) {
            return function (x) {
                if (v === 0) {
                    return Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid));
                };
                return Prelude["<>"](Prelude.semigroupFn(dictMonoid["__superclass_Prelude.Semigroup_0"]()))(x)(go(v - 1)(x));
            };
        };
        return function ($38) {
            return Data_Lens_Internal_Forget.Forget(go(n)(Data_Lens_Internal_Forget.runForget($38)));
        };
    };
};
var ifoldMapOf = function (p) {
    return function (f) {
        return Data_Lens_Internal_Forget.runForget(p(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f))));
    };
};
var ifoldlOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($39) {
                return Prelude.flip(Data_Monoid_Endo.runEndo)(r)(Data_Monoid_Dual.runDual(ifoldMapOf(p)(function (i) {
                    return function ($40) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(f(i))($40)));
                    };
                })($39)));
            };
        };
    };
};
var ifoldrOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($41) {
                return Prelude.flip(Data_Monoid_Endo.runEndo)(r)(ifoldMapOf(p)(function (i) {
                    return function ($42) {
                        return Data_Monoid_Endo.Endo(f(i)($42));
                    };
                })($41));
            };
        };
    };
};
var itoListOf = function (p) {
    return ifoldrOf(p)(function (i) {
        return function (x) {
            return function (xs) {
                return Data_List[":"](new Data_Tuple.Tuple(i, x))(xs);
            };
        };
    })(Data_List.Nil.value);
};
var itraverseOf_ = function (dictApplicative) {
    return function (p) {
        return function (f) {
            return ifoldrOf(p)(function (i) {
                return function (a) {
                    return function (fu) {
                        return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["void"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f(i)(a)))(fu);
                    };
                };
            })(Prelude.pure(dictApplicative)(Prelude.unit));
        };
    };
};
var ifindOf = function (p) {
    return function (f) {
        return ifoldrOf(p)(function (i) {
            return function (a) {
                return Data_Maybe.maybe((function () {
                    var $32 = f(i)(a);
                    if ($32) {
                        return new Data_Maybe.Just(a);
                    };
                    if (!$32) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.Lens.Fold line 191, column 42 - line 191, column 75: " + [ $32.constructor.name ]);
                })())(Data_Maybe.Just.create);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var ianyOf = function (dictBooleanAlgebra) {
    return function (p) {
        return function (f) {
            return function ($43) {
                return Data_Monoid_Disj.runDisj(ifoldMapOf(p)(function (i) {
                    return function ($44) {
                        return Data_Monoid_Disj.Disj(f(i)($44));
                    };
                })($43));
            };
        };
    };
};
var iallOf = function (dictBooleanAlgebra) {
    return function (p) {
        return function (f) {
            return function ($45) {
                return Data_Monoid_Conj.runConj(ifoldMapOf(p)(function (i) {
                    return function ($46) {
                        return Data_Monoid_Conj.Conj(f(i)($46));
                    };
                })($45));
            };
        };
    };
};
var folded = function (dictMonoid) {
    return function (dictFoldable) {
        return function ($47) {
            return Data_Lens_Internal_Forget.Forget(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Lens_Internal_Forget.runForget($47)));
        };
    };
};
var foldOf = function (p) {
    return Data_Lens_Internal_Forget.runForget(p(Prelude.id(Prelude.categoryFn)));
};
var foldMapOf = function (p) {
    return function (f) {
        return Data_Lens_Internal_Forget.runForget(p(f));
    };
};
var foldlOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($48) {
                return Prelude.flip(Data_Monoid_Endo.runEndo)(r)(Data_Monoid_Dual.runDual(foldMapOf(p)(function ($49) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(f)($49)));
                })($48)));
            };
        };
    };
};
var foldrOf = function (p) {
    return function (f) {
        return function (r) {
            return function ($50) {
                return Prelude.flip(Data_Monoid_Endo.runEndo)(r)(foldMapOf(p)(function ($51) {
                    return Data_Monoid_Endo.Endo(f($51));
                })($50));
            };
        };
    };
};
var maximumOf = function (dictOrd) {
    return function (p) {
        var max = function (a) {
            return function (b) {
                var $33 = Prelude[">"](dictOrd)(a)(b);
                if ($33) {
                    return a;
                };
                if (!$33) {
                    return b;
                };
                throw new Error("Failed pattern match at Data.Lens.Fold line 114, column 13 - line 117, column 1: " + [ $33.constructor.name ]);
            };
        };
        return foldrOf(p)(function (a) {
            return function ($52) {
                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(max(a))($52));
            };
        })(Data_Maybe.Nothing.value);
    };
};
var minimumOf = function (dictOrd) {
    return function (p) {
        var min = function (a) {
            return function (b) {
                var $34 = Prelude["<"](dictOrd)(a)(b);
                if ($34) {
                    return a;
                };
                if (!$34) {
                    return b;
                };
                throw new Error("Failed pattern match at Data.Lens.Fold line 119, column 13 - line 122, column 1: " + [ $34.constructor.name ]);
            };
        };
        return foldrOf(p)(function (a) {
            return function ($53) {
                return Data_Maybe.Just.create(Data_Maybe.maybe(a)(min(a))($53));
            };
        })(Data_Maybe.Nothing.value);
    };
};
var toListOf = function (p) {
    return foldrOf(p)(Data_List[":"])(Data_List.Nil.value);
};
var $up$dot$dot = function (s) {
    return function (p) {
        return toListOf(p)(s);
    };
};
var traverseOf_ = function (dictApplicative) {
    return function (p) {
        return function (f) {
            return foldrOf(p)(function (a) {
                return function (fu) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["void"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f(a)))(fu);
                };
            })(Prelude.pure(dictApplicative)(Prelude.unit));
        };
    };
};
var has = function (dictBooleanAlgebra) {
    return function (p) {
        return function ($54) {
            return Data_Monoid_Disj.runDisj(foldMapOf(p)(Prelude["const"](Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]())))($54));
        };
    };
};
var hasn$primet = function (dictBooleanAlgebra) {
    return function (p) {
        return function ($55) {
            return Data_Monoid_Conj.runConj(foldMapOf(p)(Prelude["const"](Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]())))($55));
        };
    };
};
var lastOf = function (p) {
    return function ($56) {
        return Data_Maybe_Last.runLast(foldMapOf(p)(function ($57) {
            return Data_Maybe_Last.Last(Data_Maybe.Just.create($57));
        })($56));
    };
};
var lengthOf = function (p) {
    return function ($58) {
        return Data_Monoid_Additive.runAdditive(foldMapOf(p)(Prelude["const"](1))($58));
    };
};
var preview = function (p) {
    return function ($59) {
        return Data_Maybe_First.runFirst(foldMapOf(p)(function ($60) {
            return Data_Maybe_First.First(Data_Maybe.Just.create($60));
        })($59));
    };
};
var $up$qmark = function (s) {
    return function (p) {
        return preview(p)(s);
    };
};
var productOf = function (dictSemiring) {
    return function (p) {
        return function ($61) {
            return Data_Monoid_Multiplicative.runMultiplicative(foldMapOf(p)(Data_Monoid_Multiplicative.Multiplicative)($61));
        };
    };
};
var sequenceOf_ = function (dictApplicative) {
    return function (p) {
        return function ($62) {
            return Prelude.flip(Data_Monoid_Endo.runEndo)(Prelude.pure(dictApplicative)(Prelude.unit))(foldMapOf(p)(function (f) {
                return function (v) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f)(v);
                };
            })($62));
        };
    };
};
var sumOf = function (dictSemiring) {
    return function (p) {
        return function ($63) {
            return Data_Monoid_Additive.runAdditive(foldMapOf(p)(Data_Monoid_Additive.Additive)($63));
        };
    };
};
var firstOf = function (p) {
    return function ($64) {
        return Data_Maybe_First.runFirst(foldMapOf(p)(function ($65) {
            return Data_Maybe_First.First(Data_Maybe.Just.create($65));
        })($64));
    };
};
var findOf = function (p) {
    return function (f) {
        return foldrOf(p)(function (a) {
            return Data_Maybe.maybe((function () {
                var $35 = f(a);
                if ($35) {
                    return new Data_Maybe.Just(a);
                };
                if (!$35) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Lens.Fold line 123, column 38 - line 123, column 69: " + [ $35.constructor.name ]);
            })())(Data_Maybe.Just.create);
        })(Data_Maybe.Nothing.value);
    };
};
var filtered = function (dictChoice) {
    return function (f) {
        return function ($66) {
            return Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(function (x) {
                var $36 = f(x);
                if ($36) {
                    return new Data_Either.Right(x);
                };
                if (!$36) {
                    return new Data_Either.Left(x);
                };
                throw new Error("Failed pattern match at Data.Lens.Fold line 152, column 27 - line 152, column 58: " + [ $36.constructor.name ]);
            })(Data_Either.either(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)($66));
        };
    };
};
var anyOf = function (dictBooleanAlgebra) {
    return function (p) {
        return function (f) {
            return function ($67) {
                return Data_Monoid_Disj.runDisj(foldMapOf(p)(function ($68) {
                    return Data_Monoid_Disj.Disj(f($68));
                })($67));
            };
        };
    };
};
var elemOf = function (dictEq) {
    return function (p) {
        return function (a) {
            return anyOf(Prelude.booleanAlgebraBoolean)(p)(function (v) {
                return Prelude["=="](dictEq)(v)(a);
            });
        };
    };
};
var orOf = function (dictBooleanAlgebra) {
    return function (p) {
        return anyOf(dictBooleanAlgebra)(p)(Prelude.id(Prelude.categoryFn));
    };
};
var allOf = function (dictBooleanAlgebra) {
    return function (p) {
        return function (f) {
            return function ($69) {
                return Data_Monoid_Conj.runConj(foldMapOf(p)(function ($70) {
                    return Data_Monoid_Conj.Conj(f($70));
                })($69));
            };
        };
    };
};
var andOf = function (dictBooleanAlgebra) {
    return function (p) {
        return allOf(dictBooleanAlgebra)(p)(Prelude.id(Prelude.categoryFn));
    };
};
var notElemOf = function (dictEq) {
    return function (p) {
        return function (a) {
            return allOf(Prelude.booleanAlgebraBoolean)(p)(function (v) {
                return Prelude["/="](dictEq)(v)(a);
            });
        };
    };
};
module.exports = {
    itraverseOf_: itraverseOf_, 
    itoListOf: itoListOf, 
    ianyOf: ianyOf, 
    iallOf: iallOf, 
    ifoldlOf: ifoldlOf, 
    ifoldrOf: ifoldrOf, 
    ifoldMapOf: ifoldMapOf, 
    unfolded: unfolded, 
    folded: folded, 
    filtered: filtered, 
    replicated: replicated, 
    "hasn't": hasn$primet, 
    has: has, 
    sequenceOf_: sequenceOf_, 
    findOf: findOf, 
    lengthOf: lengthOf, 
    productOf: productOf, 
    sumOf: sumOf, 
    notElemOf: notElemOf, 
    elemOf: elemOf, 
    orOf: orOf, 
    andOf: andOf, 
    anyOf: anyOf, 
    allOf: allOf, 
    minimumOf: minimumOf, 
    maximumOf: maximumOf, 
    lastOf: lastOf, 
    firstOf: firstOf, 
    toListOf: toListOf, 
    foldlOf: foldlOf, 
    foldrOf: foldrOf, 
    foldMapOf: foldMapOf, 
    foldOf: foldOf, 
    preview: preview, 
    "^..": $up$dot$dot, 
    "^?": $up$qmark
};

},{"../Control.Apply":"/Users/suppi/code/purescript/ld35/output/Control.Apply/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Lens.Internal.Forget":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Forget/index.js","../Data.Lens.Internal.Indexed":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Void":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Void/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.List":"/Users/suppi/code/purescript/ld35/output/Data.List/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Maybe.First":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.First/index.js","../Data.Maybe.Last":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Last/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Monoid.Additive":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Multiplicative/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Getter/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Const = require("../Data.Const");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Tuple = require("../Data.Tuple");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var view = function (l) {
    return Data_Lens_Internal_Forget.runForget(l(Prelude.id(Prelude.categoryFn)));
};
var $up$dot = function (s) {
    return function (l) {
        return view(l)(s);
    };
};
var use = function (dictMonadState) {
    return function (p) {
        return Control_Monad_State_Class.gets(dictMonadState)(function (v) {
            return $up$dot(v)(p);
        });
    };
};
var to = function (f) {
    return function (p) {
        return function ($3) {
            return Data_Lens_Internal_Forget.runForget(p)(f($3));
        };
    };
};
var iview = function (l) {
    return Data_Lens_Internal_Forget.runForget(l(Data_Lens_Internal_Indexed.Indexed(Prelude.id(Prelude.categoryFn))));
};
var iuse = function (dictMonadState) {
    return function (p) {
        return Control_Monad_State_Class.gets(dictMonadState)(iview(p));
    };
};
module.exports = {
    iuse: iuse, 
    iview: iview, 
    use: use, 
    to: to, 
    view: view, 
    "^.": $up$dot
};

},{"../Control.Monad.State.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Class/index.js","../Data.Const":"/Users/suppi/code/purescript/ld35/output/Data.Const/index.js","../Data.Functor.Contravariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Contravariant/index.js","../Data.Lens.Internal.Forget":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Forget/index.js","../Data.Lens.Internal.Indexed":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Star":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Star/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Indexed/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_State = require("../Control.Monad.State");
var Control_Apply = require("../Control.Apply");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Functor_Compose = require("../Data.Functor.Compose");
var Data_Tuple = require("../Data.Tuple");
var Data_Either = require("../Data.Either");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Data_Identity = require("../Data.Identity");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var unIndex = function (dictProfunctor) {
    return function (l) {
        return function ($6) {
            return l(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Tuple.snd)(Prelude.id(Prelude.categoryFn))($6)));
        };
    };
};
var iwander = function (dictWander) {
    return function (itr) {
        return function ($7) {
            return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                return function (f) {
                    return function (s) {
                        return itr(dictApplicative)(Data_Tuple.curry(f))(s);
                    };
                };
            })(Data_Lens_Internal_Indexed.fromIndexed($7));
        };
    };
};
var positions = function (dictWander) {
    return function (tr) {
        return iwander(dictWander)(function (dictApplicative) {
            return function (f) {
                return function (s) {
                    return Prelude.flip(Control_Monad_State.evalState)(0)(Data_Functor_Compose.decompose(Prelude.flip(Data_Profunctor_Star.runStar)(s)(tr(Data_Lens_Internal_Wander.wanderStar(Data_Functor_Compose.applicativeCompose(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(dictApplicative)))(function (a) {
                        return Data_Functor_Compose.Compose.create(Control_Apply["<*"](Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Prelude["<*>"](Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Prelude["<$>"](Control_Monad_State_Trans.functorStateT(Data_Identity.monadIdentity))(f)(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(a)))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
                            return v + 1 | 0;
                        })));
                    }))));
                };
            };
        });
    };
};
module.exports = {
    positions: positions, 
    iwander: iwander, 
    unIndex: unIndex
};

},{"../Control.Apply":"/Users/suppi/code/purescript/ld35/output/Control.Apply/index.js","../Control.Monad.State":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State/index.js","../Control.Monad.State.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Class/index.js","../Control.Monad.State.Trans":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Trans/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Functor.Compose":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Compose/index.js","../Data.Identity":"/Users/suppi/code/purescript/ld35/output/Data.Identity/index.js","../Data.Lens.Internal.Indexed":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Wander":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Wander/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Star":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Star/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Exchange/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Exchange = (function () {
    function Exchange(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Exchange.create = function (value0) {
        return function (value1) {
            return new Exchange(value0, value1);
        };
    };
    return Exchange;
})();
var profunctorExchange = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Exchange(function ($11) {
                return v.value0(f($11));
            }, function ($12) {
                return g(v.value1($12));
            });
        };
    };
});
var functorExchange = new Prelude.Functor(function (f) {
    return function (v) {
        return new Exchange(v.value0, function ($13) {
            return f(v.value1($13));
        });
    };
});
module.exports = {
    Exchange: Exchange, 
    functorExchange: functorExchange, 
    profunctorExchange: profunctorExchange
};

},{"../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Forget/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Either = require("../Data.Either");
var Data_Monoid = require("../Data.Monoid");
var Data_Const = require("../Data.Const");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Forget = function (x) {
    return x;
};
var runForget = function (v) {
    return v;
};
var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
    return function (v) {
        return function (v1) {
            return function ($24) {
                return v1(f($24));
            };
        };
    };
});
var strongForget = new Data_Profunctor_Strong.Strong(function () {
    return profunctorForget;
}, function (v) {
    return function ($25) {
        return v(Data_Tuple.fst($25));
    };
}, function (v) {
    return function ($26) {
        return v(Data_Tuple.snd($26));
    };
});
var cochoiceForget = new Data_Profunctor_Cochoice.Cochoice(function () {
    return profunctorForget;
}, function (v) {
    return function ($27) {
        return v(Data_Either.Left.create($27));
    };
}, function (v) {
    return function ($28) {
        return v(Data_Either.Right.create($28));
    };
});
var choiceForget = function (dictMonoid) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorForget;
    }, function (v) {
        return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
    }, function (v) {
        return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
    });
};
var wanderForget = function (dictMonoid) {
    return new Data_Lens_Internal_Wander.Wander(function () {
        return choiceForget(dictMonoid);
    }, function () {
        return strongForget;
    }, function (f) {
        return function (v) {
            return function (s) {
                return Data_Const.getConst(f(Data_Const.applicativeConst(dictMonoid))(function ($29) {
                    return Data_Const.Const(v($29));
                })(s));
            };
        };
    });
};
module.exports = {
    Forget: Forget, 
    runForget: runForget, 
    profunctorForget: profunctorForget, 
    choiceForget: choiceForget, 
    strongForget: strongForget, 
    cochoiceForget: cochoiceForget, 
    wanderForget: wanderForget
};

},{"../Data.Const":"/Users/suppi/code/purescript/ld35/output/Data.Const/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Lens.Internal.Wander":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Wander/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Cochoice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Cochoice/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Indexed/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Tuple = require("../Data.Tuple");
var Data_Either = require("../Data.Either");
var Indexed = function (x) {
    return x;
};
var fromIndexed = function (v) {
    return v;
};
var indexedProfunctor = function (dictProfunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function ($29) {
                return Indexed(Data_Profunctor.dimap(dictProfunctor)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(f))(g)(fromIndexed($29)));
            };
        };
    });
};
var indexedChoice = function (dictChoice) {
    return new Data_Profunctor_Choice.Choice(function () {
        return indexedProfunctor(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]());
    }, function (v) {
        return Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(function (v1) {
            return Data_Either.either(function ($30) {
                return Data_Either.Left.create(Data_Tuple.Tuple.create(v1.value0)($30));
            })(Data_Either.Right.create)(v1.value1);
        })(Prelude.id(Prelude.categoryFn))(Data_Profunctor_Choice.left(dictChoice)(v));
    }, function (v) {
        return Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(function (v1) {
            return Data_Either.either(Data_Either.Left.create)(function ($31) {
                return Data_Either.Right.create(Data_Tuple.Tuple.create(v1.value0)($31));
            })(v1.value1);
        })(Prelude.id(Prelude.categoryFn))(Data_Profunctor_Choice.right(dictChoice)(v));
    });
};
var indexedStrong = function (dictStrong) {
    return new Data_Profunctor_Strong.Strong(function () {
        return indexedProfunctor(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]());
    }, function ($32) {
        return Indexed(Data_Profunctor.dimap(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]())(function (v) {
            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, v.value1.value0), v.value1.value1);
        })(Prelude.id(Prelude.categoryFn))(Data_Profunctor_Strong.first(dictStrong)(fromIndexed($32))));
    }, function ($33) {
        return Indexed(Data_Profunctor.dimap(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]())(function (v) {
            return new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value0, v.value1.value1));
        })(Prelude.id(Prelude.categoryFn))(Data_Profunctor_Strong.second(dictStrong)(fromIndexed($33))));
    });
};
module.exports = {
    Indexed: Indexed, 
    fromIndexed: fromIndexed, 
    indexedProfunctor: indexedProfunctor, 
    indexedStrong: indexedStrong, 
    indexedChoice: indexedChoice
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Market/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Market = (function () {
    function Market(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Market.create = function (value0) {
        return function (value1) {
            return new Market(value0, value1);
        };
    };
    return Market;
})();
var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Market(function ($19) {
                return g(v.value0($19));
            }, function ($20) {
                return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(g)(v.value1(f($20)));
            });
        };
    };
});
var functorMarket = new Prelude.Functor(function (f) {
    return function (v) {
        return new Market(function ($21) {
            return f(v.value0($21));
        }, function ($22) {
            return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f)(v.value1($22));
        });
    };
});
var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
    return profunctorMarket;
}, function (v) {
    return new Market(function ($23) {
        return Data_Either.Left.create(v.value0($23));
    }, Data_Either.either(function ($24) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Left.create)(v.value1($24));
    })(function ($25) {
        return Data_Either.Left.create(Data_Either.Right.create($25));
    }));
}, function (v) {
    return new Market(function ($26) {
        return Data_Either.Right.create(v.value0($26));
    }, Data_Either.either(function ($27) {
        return Data_Either.Left.create(Data_Either.Left.create($27));
    })(function ($28) {
        return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Right.create)(v.value1($28));
    }));
});
module.exports = {
    Market: Market, 
    functorMarket: functorMarket, 
    profunctorMarket: profunctorMarket, 
    choiceMarket: choiceMarket
};

},{"../Data.Bifunctor":"/Users/suppi/code/purescript/ld35/output/Data.Bifunctor/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Re/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong");
var Re = function (x) {
    return x;
};
var runRe = function (v) {
    return v;
};
var profunctorRe = function (dictProfunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($27) {
                    return v(Data_Profunctor.dimap(dictProfunctor)(g)(f)($27));
                };
            };
        };
    });
};
var strongRe = function (dictStrong) {
    return new Data_Profunctor_Costrong.Costrong(function () {
        return profunctorRe(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]());
    }, function (v) {
        return function ($28) {
            return v(Data_Profunctor_Strong.first(dictStrong)($28));
        };
    }, function (v) {
        return function ($29) {
            return v(Data_Profunctor_Strong.second(dictStrong)($29));
        };
    });
};
var costrongRe = function (dictCostrong) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorRe(dictCostrong["__superclass_Data.Profunctor.Profunctor_0"]());
    }, function (v) {
        return function ($30) {
            return v(Data_Profunctor_Costrong.unfirst(dictCostrong)($30));
        };
    }, function (v) {
        return function ($31) {
            return v(Data_Profunctor_Costrong.unsecond(dictCostrong)($31));
        };
    });
};
var cochoiceRe = function (dictCochoice) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorRe(dictCochoice["__superclass_Data.Profunctor.Profunctor_0"]());
    }, function (v) {
        return function ($32) {
            return v(Data_Profunctor_Cochoice.unleft(dictCochoice)($32));
        };
    }, function (v) {
        return function ($33) {
            return v(Data_Profunctor_Cochoice.unright(dictCochoice)($33));
        };
    });
};
var choiceRe = function (dictChoice) {
    return new Data_Profunctor_Cochoice.Cochoice(function () {
        return profunctorRe(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]());
    }, function (v) {
        return function ($34) {
            return v(Data_Profunctor_Choice.left(dictChoice)($34));
        };
    }, function (v) {
        return function ($35) {
            return v(Data_Profunctor_Choice.right(dictChoice)($35));
        };
    });
};
module.exports = {
    Re: Re, 
    runRe: runRe, 
    profunctorRe: profunctorRe, 
    choiceRe: choiceRe, 
    cochoiceRe: cochoiceRe, 
    strongRe: strongRe, 
    costrongRe: costrongRe
};

},{"../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Cochoice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Cochoice/index.js","../Data.Profunctor.Costrong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Costrong/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Shop/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Shop = (function () {
    function Shop(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Shop.create = function (value0) {
        return function (value1) {
            return new Shop(value0, value1);
        };
    };
    return Shop;
})();
var profunctorShop = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Shop(function ($30) {
                return v.value0(f($30));
            }, function (s) {
                return function ($31) {
                    return g(v.value1(f(s))($31));
                };
            });
        };
    };
});
var strongShop = new Data_Profunctor_Strong.Strong(function () {
    return profunctorShop;
}, function (v) {
    return new Shop(function (v1) {
        return v.value0(v1.value0);
    }, function (v1) {
        return function (b) {
            return new Data_Tuple.Tuple(v.value1(v1.value0)(b), v1.value1);
        };
    });
}, function (v) {
    return new Shop(function (v1) {
        return v.value0(v1.value1);
    }, function (v1) {
        return function (b) {
            return new Data_Tuple.Tuple(v1.value0, v.value1(v1.value1)(b));
        };
    });
});
module.exports = {
    Shop: Shop, 
    profunctorShop: profunctorShop, 
    strongShop: strongShop
};

},{"../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Tagged/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong");
var Data_Either = require("../Data.Either");
var Data_Tuple = require("../Data.Tuple");
var Tagged = function (x) {
    return x;
};
var unTagged = function (v) {
    return v;
};
var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
    return function (g) {
        return function (v1) {
            return g(v1);
        };
    };
});
var taggedCostrong = new Data_Profunctor_Costrong.Costrong(function () {
    return taggedProfunctor;
}, function (v) {
    return v.value0;
}, function (v) {
    return v.value1;
});
var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
    return taggedProfunctor;
}, function (v) {
    return new Data_Either.Left(v);
}, function (v) {
    return new Data_Either.Right(v);
});
module.exports = {
    Tagged: Tagged, 
    unTagged: unTagged, 
    taggedProfunctor: taggedProfunctor, 
    taggedChoice: taggedChoice, 
    taggedCostrong: taggedCostrong
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Costrong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Costrong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Void/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var absurd = Unsafe_Coerce.unsafeCoerce;
var coerce = function (dictContravariant) {
    return function (dictFunctor) {
        return function (a) {
            return Prelude["<$>"](dictFunctor)(absurd)(Data_Functor_Contravariant[">$<"](dictContravariant)(absurd)(a));
        };
    };
};
module.exports = {
    coerce: coerce, 
    absurd: absurd
};

},{"../Data.Functor.Contravariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Contravariant/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","../Unsafe.Coerce":"/Users/suppi/code/purescript/ld35/output/Unsafe.Coerce/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Wander/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Identity = require("../Data.Identity");
var Wander = function (__superclass_Data$dotProfunctor$dotChoice$dotChoice_1, __superclass_Data$dotProfunctor$dotStrong$dotStrong_0, wander) {
    this["__superclass_Data.Profunctor.Choice.Choice_1"] = __superclass_Data$dotProfunctor$dotChoice$dotChoice_1;
    this["__superclass_Data.Profunctor.Strong.Strong_0"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_0;
    this.wander = wander;
};
var wanderStar = function (dictApplicative) {
    return new Wander(function () {
        return Data_Profunctor_Star.choiceStar(dictApplicative);
    }, function () {
        return Data_Profunctor_Star.strongStar((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, function (t) {
        return function ($1) {
            return Data_Profunctor_Star.Star(t(dictApplicative)(Data_Profunctor_Star.runStar($1)));
        };
    });
};
var wanderFunction = new Wander(function () {
    return Data_Profunctor_Choice.choiceFn;
}, function () {
    return Data_Profunctor_Strong.strongFn;
}, function (t) {
    return function (f) {
        return function (s) {
            return Data_Identity.runIdentity(t(Data_Identity.applicativeIdentity)(function ($2) {
                return Data_Identity.Identity(f($2));
            })(s));
        };
    };
});
var wander = function (dict) {
    return dict.wander;
};
module.exports = {
    Wander: Wander, 
    wander: wander, 
    wanderFunction: wanderFunction, 
    wanderStar: wanderStar
};

},{"../Data.Identity":"/Users/suppi/code/purescript/ld35/output/Data.Identity/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Star":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Star/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Iso/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange");
var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re");
var withIso = function (l) {
    return function (f) {
        var $6 = l(new Data_Lens_Internal_Exchange.Exchange(Prelude.id(Prelude.categoryFn), Prelude.id(Prelude.categoryFn)));
        return f($6.value0)($6.value1);
    };
};
var under = function (l) {
    return withIso(l)(function (sa) {
        return function (bt) {
            return function (ts) {
                return function ($9) {
                    return sa(ts(bt($9)));
                };
            };
        };
    });
};
var re = function (t) {
    return Data_Lens_Internal_Re.runRe(t(Prelude.id(Prelude.categoryFn)));
};
var iso = function (f) {
    return function (g) {
        return function (dictProfunctor) {
            return function (pab) {
                return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
            };
        };
    };
};
var uncurried = function (dictProfunctor) {
    return iso(Data_Tuple.uncurry)(Data_Tuple.curry)(dictProfunctor);
};
var flipped = function (dictProfunctor) {
    return iso(Prelude.flip)(Prelude.flip)(dictProfunctor);
};
var curried = function (dictProfunctor) {
    return iso(Data_Tuple.curry)(Data_Tuple.uncurry)(dictProfunctor);
};
var cloneIso = function (l) {
    return function (dictProfunctor) {
        return withIso(l)(function (x) {
            return function (y) {
                return function (p) {
                    return iso(x)(y)(dictProfunctor)(p);
                };
            };
        });
    };
};
var auf = function (dictProfunctor) {
    return function (l) {
        return withIso(l)(function (sa) {
            return function (bt) {
                return function (f) {
                    return function (g) {
                        return function (e) {
                            return bt(f(Data_Profunctor.rmap(dictProfunctor)(sa)(g))(e));
                        };
                    };
                };
            };
        });
    };
};
var au = function (l) {
    return withIso(l)(function (sa) {
        return function (bt) {
            return function (f) {
                return function (e) {
                    return sa(f(bt)(e));
                };
            };
        };
    });
};
module.exports = {
    flipped: flipped, 
    uncurried: uncurried, 
    curried: curried, 
    under: under, 
    auf: auf, 
    au: au, 
    re: re, 
    cloneIso: cloneIso, 
    withIso: withIso, 
    iso: iso
};

},{"../Data.Lens.Internal.Exchange":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Exchange/index.js","../Data.Lens.Internal.Re":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Re/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens.Tuple/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var _2 = function (dictStrong) {
    return Data_Profunctor_Strong.second(dictStrong);
};
var _1 = function (dictStrong) {
    return Data_Profunctor_Strong.first(dictStrong);
};
module.exports = {
    _2: _2, 
    _1: _1
};

},{"../Data.Lens.Lens":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens.Unit/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var united = function (dictStrong) {
    return Data_Lens_Lens.lens(Prelude["const"](Prelude.unit))(Prelude["const"])(dictStrong);
};
module.exports = {
    united: united
};

},{"../Data.Lens.Lens":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens.Void/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Lens_Internal_Void = require("../Data.Lens.Internal.Void");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var devoid = function (dictStrong) {
    return Data_Lens_Lens.lens(Data_Lens_Internal_Void.absurd)(Prelude["const"])(dictStrong);
};
module.exports = {
    devoid: devoid
};

},{"../Data.Lens.Internal.Void":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Void/index.js","../Data.Lens.Lens":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop");
var Data_Lens_Types = require("../Data.Lens.Types");
var withLens = function (l) {
    return function (f) {
        var $6 = l(new Data_Lens_Internal_Shop.Shop(Prelude.id(Prelude.categoryFn), function (v) {
            return function (b) {
                return b;
            };
        }));
        return f($6.value0)($6.value1);
    };
};
var lens$prime = function (to) {
    return function (dictStrong) {
        return function (pab) {
            return Data_Profunctor.dimap(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]())(to)(function (v) {
                return v.value1(v.value0);
            })(Data_Profunctor_Strong.first(dictStrong)(pab));
        };
    };
};
var lens = function (get) {
    return function (set) {
        return function (dictStrong) {
            return lens$prime(function (s) {
                return new Data_Tuple.Tuple(get(s), function (b) {
                    return set(s)(b);
                });
            })(dictStrong);
        };
    };
};
var cloneLens = function (l) {
    return function (dictStrong) {
        return withLens(l)(function (x) {
            return function (y) {
                return function (p) {
                    return lens(x)(y)(dictStrong)(p);
                };
            };
        });
    };
};
module.exports = {
    cloneLens: cloneLens, 
    withLens: withLens, 
    "lens'": lens$prime, 
    lens: lens
};

},{"../Data.Lens.Internal.Shop":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Shop/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism.Either/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var _Right = function (dictChoice) {
    return Data_Profunctor_Choice.right(dictChoice);
};
var _Left = function (dictChoice) {
    return Data_Profunctor_Choice.left(dictChoice);
};
module.exports = {
    _Right: _Right, 
    _Left: _Left
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Lens.Prism":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism.Maybe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Maybe = require("../Data.Maybe");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var _Nothing = function (dictChoice) {
    return Data_Lens_Prism.prism(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.maybe(new Data_Either.Right(Prelude.unit))(Prelude["const"](new Data_Either.Left(Data_Maybe.Nothing.value))))(dictChoice);
};
var _Just = function (dictChoice) {
    return Data_Lens_Prism.prism(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create))(dictChoice);
};
module.exports = {
    _Just: _Just, 
    _Nothing: _Nothing
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Lens.Prism":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_MonadPlus = require("../Control.MonadPlus");
var Data_Either = require("../Data.Either");
var Data_Maybe = require("../Data.Maybe");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Lens_Types_1 = require("../Data.Lens.Types");
var Data_Lens_Types_1 = require("../Data.Lens.Types");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged");
var withPrism = function (l) {
    return function (f) {
        var $10 = l(new Data_Lens_Internal_Market.Market(Prelude.id(Prelude.categoryFn), Data_Either.Right.create));
        return f($10.value0)($10.value1);
    };
};
var review = function (p) {
    return function ($14) {
        return Data_Lens_Internal_Tagged.unTagged(p(Data_Lens_Internal_Tagged.Tagged($14)));
    };
};
var prism = function (to) {
    return function (fro) {
        return function (dictChoice) {
            return function (pab) {
                return Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(fro)(Data_Either.either(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(to)(pab)));
            };
        };
    };
};
var prism$prime = function (to) {
    return function (fro) {
        return function (dictChoice) {
            return prism(to)(function (s) {
                return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
            })(dictChoice);
        };
    };
};
var nearly = function (x) {
    return function (f) {
        return function (dictChoice) {
            return prism$prime(Prelude["const"](x))(function ($15) {
                return Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(f($15));
            })(dictChoice);
        };
    };
};
var only = function (dictEq) {
    return function (x) {
        return function (dictChoice) {
            return nearly(x)(function (v) {
                return Prelude["=="](dictEq)(v)(x);
            })(dictChoice);
        };
    };
};
var matching = function (l) {
    return withPrism(l)(function (v) {
        return function (f) {
            return f;
        };
    });
};
var is = function (dictBooleanAlgebra) {
    return function (l) {
        return function ($16) {
            return Data_Either.either(Prelude["const"](Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]())))(Prelude["const"](Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]())))(matching(l)($16));
        };
    };
};
var isn$primet = function (dictBooleanAlgebra) {
    return function (l) {
        return function ($17) {
            return Prelude.not(dictBooleanAlgebra)(is(dictBooleanAlgebra)(l)($17));
        };
    };
};
var clonePrism = function (l) {
    return function (dictChoice) {
        return withPrism(l)(function (x) {
            return function (y) {
                return function (p) {
                    return prism(x)(y)(dictChoice)(p);
                };
            };
        });
    };
};
module.exports = {
    "isn't": isn$primet, 
    is: is, 
    matching: matching, 
    withPrism: withPrism, 
    clonePrism: clonePrism, 
    only: only, 
    nearly: nearly, 
    review: review, 
    "prism'": prism$prime, 
    prism: prism
};

},{"../Control.MonadPlus":"/Users/suppi/code/purescript/ld35/output/Control.MonadPlus/index.js","../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Lens.Internal.Market":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Market/index.js","../Data.Lens.Internal.Tagged":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Tagged/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Setter/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Data_Lens_Types_1 = require("../Data.Lens.Types");
var Data_Lens_Types_1 = require("../Data.Lens.Types");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var over = function (l) {
    return l;
};
var set = function (l) {
    return function (b) {
        return over(l)(Prelude["const"](b));
    };
};
var $dot$tilde = set;
var $qmark$tilde = function (p) {
    return function ($29) {
        return set(p)(Data_Maybe.Just.create($29));
    };
};
var $percent$tilde = over;
var $amp$amp$tilde = function (dictBooleanAlgebra) {
    return function (p) {
        return function ($30) {
            return over(p)(Prelude.flip(Prelude.conj(dictBooleanAlgebra))($30));
        };
    };
};
var $times$tilde = function (dictSemiring) {
    return function (p) {
        return function ($31) {
            return over(p)(Prelude.flip(Prelude.mul(dictSemiring))($31));
        };
    };
};
var $plus$plus$tilde = function (dictSemigroup) {
    return function (p) {
        return function ($32) {
            return over(p)(Prelude.flip(Prelude.append(dictSemigroup))($32));
        };
    };
};
var $plus$tilde = function (dictSemiring) {
    return function (p) {
        return function ($33) {
            return over(p)(Prelude.add(dictSemiring)($33));
        };
    };
};
var $minus$tilde = function (dictRing) {
    return function (p) {
        return function ($34) {
            return over(p)(Prelude.flip(Prelude.sub(dictRing))($34));
        };
    };
};
var $div$div$tilde = function (dictDivisionRing) {
    return function (p) {
        return function ($35) {
            return over(p)(Prelude.flip(Prelude.div(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]()))($35));
        };
    };
};
var $less$greater$tilde = function (dictSemigroup) {
    return function (p) {
        return function ($36) {
            return over(p)(Prelude.flip(Prelude.append(dictSemigroup))($36));
        };
    };
};
var $bar$bar$tilde = function (dictBooleanAlgebra) {
    return function (p) {
        return function ($37) {
            return over(p)(Prelude.flip(Prelude.disj(dictBooleanAlgebra))($37));
        };
    };
};
var modifying = function (dictMonadState) {
    return function (p) {
        return function (f) {
            return Control_Monad_State_Class.modify(dictMonadState)(over(p)(f));
        };
    };
};
var $percent$eq = function (dictMonadState) {
    return modifying(dictMonadState);
};
var $amp$amp$eq = function (dictMonadState) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($38) {
                return modifying(dictMonadState)(p)(Prelude.flip(Prelude.conj(dictBooleanAlgebra))($38));
            };
        };
    };
};
var $times$eq = function (dictMonadState) {
    return function (dictSemiring) {
        return function (p) {
            return function ($39) {
                return modifying(dictMonadState)(p)(Prelude.flip(Prelude.mul(dictSemiring))($39));
            };
        };
    };
};
var $plus$plus$eq = function (dictMonadState) {
    return function (dictSemigroup) {
        return function (p) {
            return function ($40) {
                return modifying(dictMonadState)(p)(Prelude.flip(Prelude.append(dictSemigroup))($40));
            };
        };
    };
};
var $plus$eq = function (dictMonadState) {
    return function (dictSemiring) {
        return function (p) {
            return function ($41) {
                return modifying(dictMonadState)(p)(Prelude.add(dictSemiring)($41));
            };
        };
    };
};
var $minus$eq = function (dictMonadState) {
    return function (dictRing) {
        return function (p) {
            return function ($42) {
                return modifying(dictMonadState)(p)(Prelude.flip(Prelude.sub(dictRing))($42));
            };
        };
    };
};
var $div$div$eq = function (dictMonadState) {
    return function (dictDivisionRing) {
        return function (p) {
            return function ($43) {
                return modifying(dictMonadState)(p)(Prelude.flip(Prelude.div(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]()))($43));
            };
        };
    };
};
var $less$greater$eq = function (dictMonadState) {
    return function (dictSemigroup) {
        return function (p) {
            return function ($44) {
                return modifying(dictMonadState)(p)(Prelude.flip(Prelude.append(dictSemigroup))($44));
            };
        };
    };
};
var $bar$bar$eq = function (dictMonadState) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($45) {
                return modifying(dictMonadState)(p)(Prelude.flip(Prelude.disj(dictBooleanAlgebra))($45));
            };
        };
    };
};
var iover = function (l) {
    return function (f) {
        return l(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f)));
    };
};
var assign = function (dictMonadState) {
    return function (p) {
        return function (b) {
            return Control_Monad_State_Class.modify(dictMonadState)(set(p)(b));
        };
    };
};
var $dot$eq = function (dictMonadState) {
    return assign(dictMonadState);
};
var $qmark$eq = function (dictMonadState) {
    return function (p) {
        return function ($46) {
            return assign(dictMonadState)(p)(Data_Maybe.Just.create($46));
        };
    };
};
module.exports = {
    set: set, 
    over: over, 
    "?=": $qmark$eq, 
    "++=": $plus$plus$eq, 
    "<>=": $less$greater$eq, 
    "&&=": $amp$amp$eq, 
    "||=": $bar$bar$eq, 
    "//=": $div$div$eq, 
    "-=": $minus$eq, 
    "*=": $times$eq, 
    "+=": $plus$eq, 
    "%=": $percent$eq, 
    ".=": $dot$eq, 
    "?~": $qmark$tilde, 
    "++~": $plus$plus$tilde, 
    "<>~": $less$greater$tilde, 
    "&&~": $amp$amp$tilde, 
    "||~": $bar$bar$tilde, 
    "//~": $div$div$tilde, 
    "*~": $times$tilde, 
    "-~": $minus$tilde, 
    "+~": $plus$tilde, 
    ".~": $dot$tilde, 
    "%~": $percent$tilde
};

},{"../Control.Monad.State.Class":"/Users/suppi/code/purescript/ld35/output/Control.Monad.State.Class/index.js","../Data.Lens.Internal.Indexed":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Traversal/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Alternative = require("../Control.Alternative");
var Control_Plus = require("../Control.Plus");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Types_2 = require("../Data.Lens.Types");
var Data_Lens_Indexed = require("../Data.Lens.Indexed");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
var traversed = function (dictTraversable) {
    return function (dictWander) {
        return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
            return Data_Traversable.traverse(dictTraversable)(dictApplicative);
        });
    };
};
var traverseOf = function (dictApplicative) {
    return function (t) {
        return function ($23) {
            return Data_Profunctor_Star.runStar(t(Data_Profunctor_Star.Star($23)));
        };
    };
};
var sequenceOf = function (dictApplicative) {
    return function (t) {
        return traverseOf(dictApplicative)(t)(Prelude.id(Prelude.categoryFn));
    };
};
var itraverseOf = function (dictApplicative) {
    return function (t) {
        return function (f) {
            return Data_Profunctor_Star.runStar(t(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor_Star.Star(Data_Tuple.uncurry(f)))));
        };
    };
};
var failover = function (dictAlternative) {
    return function (t) {
        return function (f) {
            return function (s) {
                var $14 = Data_Profunctor_Star.runStar(t(Data_Profunctor_Star.Star(function ($24) {
                    return Data_Tuple.Tuple.create(true)(f($24));
                })))(s);
                if ($14.value0) {
                    return Prelude.pure(dictAlternative["__superclass_Prelude.Applicative_0"]())($14.value1);
                };
                if (!$14.value0) {
                    return Control_Plus.empty(dictAlternative["__superclass_Control.Plus.Plus_1"]());
                };
                throw new Error("Failed pattern match at Data.Lens.Traversal line 49, column 18 - line 54, column 1: " + [ $14.constructor.name ]);
            };
        };
    };
};
var elementsOf = function (dictWander) {
    return function (tr) {
        return function (pr) {
            return Data_Lens_Indexed.iwander(dictWander)(function (dictApplicative) {
                return function (f) {
                    return Data_Profunctor_Star.runStar(tr(Data_Lens_Internal_Wander.wanderStar(dictApplicative))(Data_Lens_Internal_Indexed.Indexed(Data_Profunctor_Star.Star(function (v) {
                        var $20 = pr(v.value0);
                        if ($20) {
                            return f(v.value0)(v.value1);
                        };
                        if (!$20) {
                            return Prelude.pure(dictApplicative)(v.value1);
                        };
                        throw new Error("Failed pattern match at Data.Lens.Traversal line 63, column 82 - line 66, column 1: " + [ $20.constructor.name ]);
                    }))));
                };
            });
        };
    };
};
var element = function (dictWander) {
    return function (n) {
        return function (tr) {
            return Data_Lens_Indexed.unIndex((dictWander["__superclass_Data.Profunctor.Choice.Choice_1"]())["__superclass_Data.Profunctor.Profunctor_0"]())(elementsOf(dictWander)(function (dictWander1) {
                return Data_Lens_Indexed.positions(dictWander1)(function (dictWander2) {
                    return tr(dictWander2);
                });
            })(function (v) {
                return v === n;
            }));
        };
    };
};
module.exports = {
    elementsOf: elementsOf, 
    failover: failover, 
    sequenceOf: sequenceOf, 
    traverseOf: traverseOf, 
    traversed: traversed
};

},{"../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Data.Lens.Indexed":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Indexed/index.js","../Data.Lens.Internal.Indexed":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Wander":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Wander/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js","../Data.Monoid.Disj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Disj/index.js","../Data.Profunctor.Star":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Star/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Data_Const = require("../Data.Const");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Star = require("../Data.Profunctor.Star");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Profunctor_Closed = require("../Data.Profunctor.Closed");
var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market");
var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander");
var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re");
var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed");
module.exports = {};

},{"../Data.Const":"/Users/suppi/code/purescript/ld35/output/Data.Const/index.js","../Data.Lens.Internal.Exchange":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Exchange/index.js","../Data.Lens.Internal.Forget":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Forget/index.js","../Data.Lens.Internal.Indexed":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Indexed/index.js","../Data.Lens.Internal.Market":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Market/index.js","../Data.Lens.Internal.Re":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Re/index.js","../Data.Lens.Internal.Shop":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Shop/index.js","../Data.Lens.Internal.Tagged":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Tagged/index.js","../Data.Lens.Internal.Wander":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Internal.Wander/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Closed":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Closed/index.js","../Data.Profunctor.Star":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Star/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Lens/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Data_Lens_Iso = require("../Data.Lens.Iso");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Lens_Traversal = require("../Data.Lens.Traversal");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Lens_Setter = require("../Data.Lens.Setter");
var Data_Lens_Getter = require("../Data.Lens.Getter");
var Data_Lens_Fold = require("../Data.Lens.Fold");
var Data_Lens_Common = require("../Data.Lens.Common");
module.exports = {};

},{"../Data.Lens.Common":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Common/index.js","../Data.Lens.Fold":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Fold/index.js","../Data.Lens.Getter":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Getter/index.js","../Data.Lens.Iso":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Iso/index.js","../Data.Lens.Lens":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Lens/index.js","../Data.Lens.Prism":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Prism/index.js","../Data.Lens.Setter":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Setter/index.js","../Data.Lens.Traversal":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Traversal/index.js","../Data.Lens.Types":"/Users/suppi/code/purescript/ld35/output/Data.Lens.Types/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.List/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Lazy = require("../Control.Lazy");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Plus = require("../Control.Plus");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var $colon = Cons.create;
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Cons) {
                return new Data_Maybe.Just(new Cons(v1, v2.value1));
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(updateAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var uncons = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just({
            head: v.value0, 
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 273, column 1 - line 274, column 1: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 254, column 1 - line 255, column 1: " + [ v.constructor.name ]);
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Cons && v(v1.value0)) {
            var $134 = span(v)(v1.value1);
            return {
                init: new Cons(v1.value0, $134.init), 
                rest: $134.rest
            };
        };
        return {
            init: Nil.value, 
            rest: v1
        };
    };
};
var singleton = function (a) {
    return new Cons(a, Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Cons && v1 instanceof Cons) {
                if (Prelude["=="](Prelude.eqOrdering)(cmp(v.value0)(v1.value0))(Prelude.GT.value)) {
                    return new Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Prelude.otherwise) {
                    return new Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Nil) {
                return v1;
            };
            if (v1 instanceof Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 475, column 3 - line 478, column 3: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Cons && v.value1 instanceof Cons) {
            return new Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Cons && v.value1 instanceof Nil) {
                return v.value0;
            };
            var __tco_v = mergePairs(v);
            v = __tco_v;
            continue tco;
        };
    };
    var sequences = function (v) {
        if (v instanceof Cons && v.value1 instanceof Cons) {
            if (Prelude["=="](Prelude.eqOrdering)(cmp(v.value0)(v.value1.value0))(Prelude.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Prelude.otherwise) {
                return ascending(v.value1.value0)(Cons.create(v.value0))(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function (__copy_a) {
        return function (__copy_as) {
            return function (__copy_v) {
                var a = __copy_a;
                var as = __copy_as;
                var v = __copy_v;
                tco: while (true) {
                    if (v instanceof Cons && Prelude["=="](Prelude.eqOrdering)(cmp(a)(v.value0))(Prelude.GT.value)) {
                        var __tco_a = v.value0;
                        var __tco_as = new Cons(a, as);
                        var __tco_v = v.value1;
                        a = __tco_a;
                        as = __tco_as;
                        v = __tco_v;
                        continue tco;
                    };
                    return new Cons(new Cons(a, as), sequences(v));
                };
            };
        };
    };
    var ascending = function (a) {
        return function (as) {
            return function (v) {
                if (v instanceof Cons && Prelude["/="](Prelude.eqOrdering)(cmp(a)(v.value0))(Prelude.GT.value)) {
                    return ascending(v.value0)(function (ys) {
                        return as(new Cons(a, ys));
                    })(v.value1);
                };
                return new Cons(as(singleton(a)), sequences(v));
            };
        };
    };
    return function ($372) {
        return mergeAll(sequences($372));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Prelude.compare(dictOrd))(xs);
    };
};
var showList = function (dictShow) {
    return new Prelude.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        if (v instanceof Cons) {
            return "Cons (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(showList(dictShow))(v.value1) + ")")));
        };
        throw new Error("Failed pattern match at Data.List line 727, column 3 - line 728, column 3: " + [ v.constructor.name ]);
    });
};
var semigroupList = new Prelude.Semigroup(function (v) {
    return function (ys) {
        if (v instanceof Nil) {
            return ys;
        };
        if (v instanceof Cons) {
            return new Cons(v.value0, Prelude["<>"](semigroupList)(v.value1)(ys));
        };
        throw new Error("Failed pattern match at Data.List line 751, column 3 - line 752, column 3: " + [ v.constructor.name, ys.constructor.name ]);
    };
});
var reverse = (function () {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return acc;
                };
                if (v instanceof Cons) {
                    var __tco_acc = new Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List line 371, column 1 - line 379, column 1: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
})();
var snoc = function (xs) {
    return function (x) {
        return reverse(new Cons(x, reverse(xs)));
    };
};
var take = (function () {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            return function (__copy_v1) {
                var acc = __copy_acc;
                var v = __copy_v;
                var v1 = __copy_v1;
                tco: while (true) {
                    if (v === 0) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Nil) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Cons) {
                        var __tco_acc = new Cons(v1.value0, acc);
                        var __tco_v = v - 1;
                        var __tco_v1 = v1.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 493, column 1 - line 502, column 1: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
            };
        };
    };
    return go(Nil.value);
})();
var takeWhile = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Cons && p(v.value0)) {
                    var __tco_acc = new Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                return reverse(acc);
            };
        };
    };
    return go(Nil.value);
};
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function (__copy_source) {
            return function (__copy_memo) {
                var source = __copy_source;
                var memo = __copy_memo;
                tco: while (true) {
                    var $188 = f(source);
                    if ($188 instanceof Data_Maybe.Nothing) {
                        return reverse(memo);
                    };
                    if ($188 instanceof Data_Maybe.Just) {
                        var __tco_memo = new Cons($188.value0.value0, memo);
                        source = $188.value0.value1;
                        memo = __tco_memo;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 777, column 24 - line 781, column 1: " + [ $188.constructor.name ]);
                };
            };
        };
        return go(b)(Nil.value);
    };
});
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_acc) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var acc = __copy_acc;
                        tco: while (true) {
                            if (v instanceof Nil) {
                                return acc;
                            };
                            if (v1 instanceof Nil) {
                                return acc;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_acc = new Cons(f(v.value0)(v1.value0), acc);
                                v = __tco_v;
                                v1 = __tco_v1;
                                acc = __tco_acc;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.List line 657, column 1 - line 665, column 1: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                    };
                };
            };
            return reverse(go(xs)(ys)(Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (Prelude.otherwise) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(replicateM(dictMonad)(n - 1)(m))(function (v1) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Cons(v, v1));
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List line 158, column 1 - line 167, column 1: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var replicate = function (n) {
    return function (value) {
        var go = function (__copy_n1) {
            return function (__copy_rest) {
                var n1 = __copy_n1;
                var rest = __copy_rest;
                tco: while (true) {
                    if (n1 <= 0) {
                        return rest;
                    };
                    if (Prelude.otherwise) {
                        var __tco_n1 = n1 - 1;
                        var __tco_rest = new Cons(value, rest);
                        n1 = __tco_n1;
                        rest = __tco_rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 151, column 1 - line 157, column 1: " + [ n1.constructor.name, rest.constructor.name ]);
                };
            };
        };
        return go(n)(Nil.value);
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Prelude.otherwise) {
            var go = function (__copy_s) {
                return function (__copy_e) {
                    return function (__copy_step) {
                        return function (__copy_rest) {
                            var s = __copy_s;
                            var e = __copy_e;
                            var step = __copy_step;
                            var rest = __copy_rest;
                            tco: while (true) {
                                if (s === e) {
                                    return new Cons(s, rest);
                                };
                                if (Prelude.otherwise) {
                                    var __tco_s = s + step | 0;
                                    var __tco_e = e;
                                    var __tco_step = step;
                                    var __tco_rest = new Cons(s, rest);
                                    s = __tco_s;
                                    e = __tco_e;
                                    step = __tco_step;
                                    rest = __tco_rest;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match at Data.List line 143, column 1 - line 150, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $211 = start > end;
                if ($211) {
                    return 1;
                };
                if (!$211) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.List line 144, column 45 - line 144, column 74: " + [ $211.constructor.name ]);
            })())(Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 143, column 1 - line 150, column 1: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var $dot$dot = range;
var $$null = function (v) {
    if (v instanceof Nil) {
        return true;
    };
    return false;
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var mapMaybe = function (f) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return reverse(acc);
                };
                if (v instanceof Cons) {
                    var $215 = f(v.value0);
                    if ($215 instanceof Data_Maybe.Nothing) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if ($215 instanceof Data_Maybe.Just) {
                        var __tco_acc = new Cons($215.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 427, column 5 - line 433, column 1: " + [ $215.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 423, column 1 - line 433, column 1: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Prelude["<*>"]((dictAlternative["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt["<|>"]((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Prelude.pure(dictAlternative["__superclass_Prelude.Applicative_0"]())(Nil.value));
        };
    };
};
var last = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        if (v instanceof Cons && v.value1 instanceof Nil) {
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Cons) {
            var __tco_v = v.value1;
            v = __tco_v;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return new Cons(x, Nil.value);
            };
            if (v1 instanceof Cons) {
                var $228 = v(x)(v1.value0);
                if ($228 instanceof Prelude.GT) {
                    return new Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Cons(x, v1);
            };
            throw new Error("Failed pattern match at Data.List line 225, column 1 - line 226, column 1: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Cons(v1, v2));
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(insertAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Prelude.compare(dictOrd));
};
var init = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    var go = function (__copy_v1) {
        return function (__copy_acc) {
            var v1 = __copy_v1;
            var acc = __copy_acc;
            tco: while (true) {
                if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                    return acc;
                };
                if (v1 instanceof Cons) {
                    var __tco_v1 = v1.value1;
                    var __tco_acc = new Cons(v1.value0, acc);
                    v1 = __tco_v1;
                    acc = __tco_acc;
                    continue tco;
                };
                return acc;
            };
        };
    };
    return Data_Maybe.Just.create(reverse(go(v)(Nil.value)));
};
var index = function (__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Cons && v1 === 0) {
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Cons) {
                var __tco_v = v.value1;
                var __tco_v1 = v1 - 1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match at Data.List line 284, column 1 - line 285, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var $bang$bang = index;
var head = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 239, column 1 - line 240, column 1: " + [ v.constructor.name ]);
};
var transpose = function (v) {
    if (v instanceof Nil) {
        return Nil.value;
    };
    if (v instanceof Cons && v.value0 instanceof Nil) {
        return transpose(v.value1);
    };
    if (v instanceof Cons && v.value0 instanceof Cons) {
        return $colon($colon(v.value0.value0)(mapMaybe(head)(v.value1)))(transpose($colon(v.value0.value1)(mapMaybe(tail)(v.value1))));
    };
    throw new Error("Failed pattern match at Data.List line 694, column 1 - line 695, column 1: " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            var $261 = span(v(v1.value0))(v1.value1);
            return new Cons(new Cons(v1.value0, $261.init), groupBy(v)($261.rest));
        };
        throw new Error("Failed pattern match at Data.List line 567, column 1 - line 568, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Prelude["=="](dictEq));
};
var group$prime = function (dictOrd) {
    return function ($373) {
        return group(dictOrd["__superclass_Prelude.Eq_0"]())(sort(dictOrd)($373));
    };
};
var functorList = new Prelude.Functor(function (f) {
    return function (lst) {
        var go = function (__copy_v) {
            return function (__copy_acc) {
                var v = __copy_v;
                var acc = __copy_acc;
                tco: while (true) {
                    if (v instanceof Nil) {
                        return acc;
                    };
                    if (v instanceof Cons) {
                        var __tco_v = v.value1;
                        var __tco_acc = new Cons(f(v.value0), acc);
                        v = __tco_v;
                        acc = __tco_acc;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 758, column 3 - line 764, column 1: " + [ v.constructor.name, acc.constructor.name ]);
                };
            };
        };
        return reverse(go(lst)(Nil.value));
    };
});
var fromList = function (dictUnfoldable) {
    return toUnfoldable(dictUnfoldable);
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
};
var toList = function (dictFoldable) {
    return fromFoldable(dictFoldable);
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($374) {
                return Prelude.append(dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f($374));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, (function () {
    var go = function (__copy_v) {
        return function (__copy_b) {
            return function (__copy_v1) {
                var v = __copy_v;
                var b = __copy_b;
                var v1 = __copy_v1;
                tco: while (true) {
                    if (v1 instanceof Nil) {
                        return b;
                    };
                    if (v1 instanceof Cons) {
                        var __tco_v = v;
                        var __tco_b = v(b)(v1.value0);
                        var __tco_v1 = v1.value1;
                        v = __tco_v;
                        b = __tco_b;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 767, column 3 - line 771, column 3: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                };
            };
        };
    };
    return go;
})(), function (v) {
    return function (b) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return b;
            };
            if (v1 instanceof Cons) {
                return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.List line 765, column 3 - line 766, column 3: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
        };
    };
});
var length = Data_Foldable.foldl(foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Nil) {
            return Prelude.pure(dictApplicative)(Nil.value);
        };
        if (v instanceof Cons) {
            return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v.value0))(Data_Traversable.sequence(traversableList)(dictApplicative)(v.value1));
        };
        throw new Error("Failed pattern match at Data.List line 784, column 3 - line 785, column 3: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return Prelude.pure(dictApplicative)(Nil.value);
            };
            if (v1 instanceof Cons) {
                return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v(v1.value0)))(Data_Traversable.traverse(traversableList)(dictApplicative)(v)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.List line 782, column 3 - line 783, column 3: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var unzip = Data_Foldable.foldr(foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Cons(v.value0, v1.value0), new Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Nil.value, Nil.value));
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Nil) {
                    return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(a);
                };
                if (v1 instanceof Cons) {
                    return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match at Data.List line 705, column 1 - line 706, column 1: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (__copy_v) {
        return function (__copy_v1) {
            var v = __copy_v;
            var v1 = __copy_v1;
            tco: while (true) {
                if (v1 instanceof Cons) {
                    if (fn(v1.value0)) {
                        return new Data_Maybe.Just(v);
                    };
                    if (Prelude.otherwise) {
                        var __tco_v = v + 1 | 0;
                        var __tco_v1 = v1.value1;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                };
                if (v1 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 307, column 3 - line 309, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(function (v) {
            return length(xs) - 1 - v;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (v1 instanceof Cons) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(v(v1.value0))(function (v2) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())((function () {
                            if (v2) {
                                return new Cons(v1.value0, v3);
                            };
                            if (!v2) {
                                return v3;
                            };
                            throw new Error("Failed pattern match at Data.List line 414, column 3 - line 422, column 1: " + [ v2.constructor.name ]);
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List line 410, column 1 - line 411, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return reverse(acc);
                };
                if (v instanceof Cons) {
                    if (p(v.value0)) {
                        var __tco_acc = new Cons(v.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if (Prelude.otherwise) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 394, column 1 - line 409, column 1: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Nil) {
                return Nil.value;
            };
            if (v2 instanceof Nil) {
                return Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(foldableList)(Prelude.booleanAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Prelude["=="](dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            return new Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match at Data.List line 586, column 1 - line 587, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Prelude.eq(dictEq));
};
var eqList = function (dictEq) {
    return new Prelude.Eq(function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_v2) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var v2 = __copy_v2;
                        tco: while (true) {
                            if (!v2) {
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_v2 = v2 && Prelude["=="](dictEq)(v1.value0)(v.value0);
                                v = __tco_v;
                                v1 = __tco_v1;
                                v2 = __tco_v2;
                                continue tco;
                            };
                            return false;
                        };
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    });
};
var ordList = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqList(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    var v = __copy_v;
                    var v1 = __copy_v1;
                    tco: while (true) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            return Prelude.EQ.value;
                        };
                        if (v instanceof Nil) {
                            return Prelude.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            return Prelude.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var $330 = Prelude.compare(dictOrd)(v.value0)(v1.value0);
                            if ($330 instanceof Prelude.EQ) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                v = __tco_v;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            return $330;
                        };
                        throw new Error("Failed pattern match at Data.List line 740, column 3 - line 750, column 1: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                };
            };
            return go(xs)(ys);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Cons && p(v.value0)) {
                var __tco_v = v.value1;
                v = __tco_v;
                continue tco;
            };
            return v;
        };
    };
    return go;
};
var drop = function (__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v === 0) {
                return v1;
            };
            if (v1 instanceof Nil) {
                return Nil.value;
            };
            if (v1 instanceof Cons) {
                var __tco_v = v - 1;
                var __tco_v1 = v1.value1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match at Data.List line 512, column 1 - line 513, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start)(drop(start)(xs));
        };
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nil) {
                return Nil.value;
            };
            if (v2 instanceof Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Cons) {
                return new Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match at Data.List line 613, column 1 - line 614, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["<>"](semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Prelude["=="](dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v1.value0))(deleteAt(v - 1)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Prelude["=="](dictEq));
};
var $bslash$bslash = function (dictEq) {
    return Data_Foldable.foldl(foldableList)(Prelude.flip($$delete(dictEq)));
};
var concatMap = function (v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            return Prelude["<>"](semigroupList)(v(v1.value0))(concatMap(v)(v1.value1));
        };
        throw new Error("Failed pattern match at Data.List line 387, column 1 - line 388, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var applyList = new Prelude.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(v.value0)(v1))(Prelude["<*>"](applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List line 788, column 3 - line 789, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindList = new Prelude.Bind(function () {
    return applyList;
}, Prelude.flip(concatMap));
var concat = function (v) {
    return Prelude[">>="](bindList)(v)(Prelude.id(Prelude.categoryFn));
};
var applicativeList = new Prelude.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Prelude.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Cons) {
                return Data_Maybe.Just.create((function () {
                    var $366 = v1(v2.value0);
                    if ($366 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if ($366 instanceof Data_Maybe.Just) {
                        return new Cons($366.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match at Data.List line 356, column 27 - line 360, column 1: " + [ $366.constructor.name ]);
                })());
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(alterAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($375) {
            return Data_Maybe.Just.create(f($375));
        });
    };
};
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Prelude.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return plusList;
}, function () {
    return applicativeList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return alternativeList;
}, function () {
    return monadList;
});
module.exports = {
    Nil: Nil, 
    Cons: Cons, 
    fromList: fromList, 
    toList: toList, 
    foldM: foldM, 
    transpose: transpose, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    zipWith: zipWith, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    drop: drop, 
    takeWhile: takeWhile, 
    take: take, 
    slice: slice, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    filter: filter, 
    concatMap: concatMap, 
    concat: concat, 
    reverse: reverse, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    snoc: snoc, 
    ":": $colon, 
    length: length, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    replicate: replicate, 
    range: range, 
    "..": $dot$dot, 
    singleton: singleton, 
    fromFoldable: fromFoldable, 
    toUnfoldable: toUnfoldable, 
    showList: showList, 
    eqList: eqList, 
    ordList: ordList, 
    semigroupList: semigroupList, 
    monoidList: monoidList, 
    functorList: functorList, 
    foldableList: foldableList, 
    unfoldableList: unfoldableList, 
    traversableList: traversableList, 
    applyList: applyList, 
    applicativeList: applicativeList, 
    bindList: bindList, 
    monadList: monadList, 
    altList: altList, 
    plusList: plusList, 
    alternativeList: alternativeList, 
    monadPlusList: monadPlusList
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Lazy":"/Users/suppi/code/purescript/ld35/output/Control.Lazy/index.js","../Control.MonadPlus":"/Users/suppi/code/purescript/ld35/output/Control.MonadPlus/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Data.Unfoldable":"/Users/suppi/code/purescript/ld35/output/Data.Unfoldable/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Maybe.First/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var runFirst = function (v) {
    return v;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var functorFirst = new Prelude.Functor(function (f) {
    return function (v) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(v);
    };
});
var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
var extendFirst = new Control_Extend.Extend(function () {
    return functorFirst;
}, function (f) {
    return function (v) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
            return f(First($34));
        })(v);
    };
});
var eqFirst = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](Data_Maybe.eqMaybe(dictEq))(v)(v1);
        };
    });
};
var ordFirst = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqFirst(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
        };
    });
};
var boundedFirst = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(dictBounded)), Prelude.top(Data_Maybe.boundedMaybe(dictBounded)));
};
var applyFirst = new Prelude.Apply(function () {
    return functorFirst;
}, function (v) {
    return function (v1) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(v)(v1);
    };
});
var bindFirst = new Prelude.Bind(function () {
    return applyFirst;
}, function (v) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
            return runFirst(f($35));
        });
    };
});
var applicativeFirst = new Prelude.Applicative(function () {
    return applyFirst;
}, function ($36) {
    return First(Prelude.pure(Data_Maybe.applicativeMaybe)($36));
});
var monadFirst = new Prelude.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First, 
    runFirst: runFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    invariantFirst: invariantFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Last/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 58, column 3 - line 59, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var runLast = function (v) {
    return v;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var functorLast = new Prelude.Functor(function (f) {
    return function (v) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(v);
    };
});
var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
var extendLast = new Control_Extend.Extend(function () {
    return functorLast;
}, function (f) {
    return function (v) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
            return f(Last($34));
        })(v);
    };
});
var eqLast = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](Data_Maybe.eqMaybe(dictEq))(v)(v1);
        };
    });
};
var ordLast = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqLast(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
        };
    });
};
var boundedLast = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(dictBounded)), Prelude.top(Data_Maybe.boundedMaybe(dictBounded)));
};
var applyLast = new Prelude.Apply(function () {
    return functorLast;
}, function (v) {
    return function (v1) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(v)(v1);
    };
});
var bindLast = new Prelude.Bind(function () {
    return applyLast;
}, function (v) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
            return runLast(f($35));
        });
    };
});
var applicativeLast = new Prelude.Applicative(function () {
    return applyLast;
}, function ($36) {
    return Last(Prelude.pure(Data_Maybe.applicativeMaybe)($36));
});
var monadLast = new Prelude.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    invariantLast: invariantLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Maybe.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var fromJust = function (v) {
    if (v instanceof Data_Maybe.Just) {
        return v.value0;
    };
    if (v instanceof Data_Maybe.Nothing) {
        return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
    };
    throw new Error("Failed pattern match at Data.Maybe.Unsafe line 11, column 1 - line 12, column 1: " + [ v.constructor.name ]);
};
module.exports = {
    fromJust: fromJust, 
    unsafeThrow: $foreign.unsafeThrow
};

},{"../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Unsafe/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Extend = require("../Control.Extend");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Plus = require("../Control.Plus");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Prelude.Show(function (v) {
        if (v instanceof Just) {
            return "Just (" + (Prelude.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 290, column 3 - line 291, column 3: " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 232, column 3 - line 233, column 3: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Prelude.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 40, column 1 - line 41, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 27, column 1 - line 28, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            if (v instanceof Nothing && v1 instanceof Nothing) {
                return true;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return Prelude["=="](dictEq)(v.value0)(v1.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqMaybe(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            if (v instanceof Just && v1 instanceof Just) {
                return Prelude.compare(dictOrd)(v.value0)(v1.value0);
            };
            if (v instanceof Nothing && v1 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (v instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (v1 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at Data.Maybe line 270, column 3 - line 271, column 3: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var boundedMaybe = function (dictBounded) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(dictBounded)));
};
var boundedOrdMaybe = function (dictBoundedOrd) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(dictBoundedOrd["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(dictBoundedOrd["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Prelude["<$>"](functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 122, column 3 - line 123, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 181, column 3 - line 182, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var booleanAlgebraMaybe = function (dictBooleanAlgebra) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(dictBooleanAlgebra))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(dictBooleanAlgebra))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(dictBooleanAlgebra)));
};
var semiringMaybe = function (dictSemiring) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(dictSemiring))(x))(y);
        };
    }, new Just(Prelude.one(dictSemiring)), new Just(Prelude.zero(dictSemiring)));
};
var moduloSemiringMaybe = function (dictModuloSemiring) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(dictModuloSemiring["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(dictModuloSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(dictModuloSemiring))(x))(y);
        };
    });
};
var ringMaybe = function (dictRing) {
    return new Prelude.Ring(function () {
        return semiringMaybe(dictRing["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(dictRing))(x))(y);
        };
    });
};
var divisionRingMaybe = function (dictDivisionRing) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(dictDivisionRing["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function (dictNum) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(dictNum["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    isNothing: isNothing, 
    isJust: isJust, 
    "fromMaybe'": fromMaybe$prime, 
    fromMaybe: fromMaybe, 
    "maybe'": maybe$prime, 
    maybe: maybe, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    semiringMaybe: semiringMaybe, 
    moduloSemiringMaybe: moduloSemiringMaybe, 
    ringMaybe: ringMaybe, 
    divisionRingMaybe: divisionRingMaybe, 
    numMaybe: numMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    boundedOrdMaybe: boundedOrdMaybe, 
    booleanAlgebraMaybe: booleanAlgebraMaybe, 
    showMaybe: showMaybe
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Alternative":"/Users/suppi/code/purescript/ld35/output/Control.Alternative/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Control.MonadPlus":"/Users/suppi/code/purescript/ld35/output/Control.MonadPlus/index.js","../Control.Plus":"/Users/suppi/code/purescript/ld35/output/Control.Plus/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Additive/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Additive (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["+"](dictSemiring)(v)(v1);
        };
    });
};
var runAdditive = function (v) {
    return v;
};
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Prelude.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqAdditive(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, runAdditive);
var applyAdditive = new Prelude.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Prelude.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Prelude.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Prelude.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    runAdditive: runAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    functorAdditive: functorAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    invariantAdditive: invariantAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Conj/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Monoid = require("../Data.Monoid");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Conj (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictBooleanAlgebra) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()), Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var semigroupConj = function (dictBooleanAlgebra) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    });
};
var runConj = function (v) {
    return v;
};
var monoidConj = function (dictBooleanAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictBooleanAlgebra);
    }, Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var functorConj = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqConj(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, runConj);
var boundedConj = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var applyConj = new Prelude.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Prelude.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Prelude.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Prelude.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    runConj: runConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj, 
    semiringConj: semiringConj
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Disj/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Monoid = require("../Data.Monoid");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Disj (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictBooleanAlgebra) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()), Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var semigroupDisj = function (dictBooleanAlgebra) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    });
};
var runDisj = function (v) {
    return v;
};
var monoidDisj = function (dictBooleanAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictBooleanAlgebra);
    }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var functorDisj = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqDisj(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, runDisj);
var boundedDisj = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var applyDisj = new Prelude.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Prelude.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Prelude.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Prelude.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    runDisj: runDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj, 
    semiringDisj: semiringDisj
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Dual/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Dual (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["<>"](dictSemigroup)(v1)(v);
        };
    });
};
var runDual = function (v) {
    return v;
};
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordDual = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqDual(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, runDual);
var applyDual = new Prelude.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Prelude.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Prelude.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Prelude.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    runDual: runDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    functorDual: functorDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    invariantDual: invariantDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Endo/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return function ($10) {
            return v(v1($10));
        };
    };
});
var runEndo = function (v) {
    return v;
};
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Prelude.id(Prelude.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($11) {
                return ab(v(ba($11)));
            };
        };
    };
});
module.exports = {
    Endo: Endo, 
    runEndo: runEndo, 
    invariantEndo: invariantEndo, 
    semigroupEndo: semigroupEndo, 
    monoidEndo: monoidEndo
};

},{"../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Multiplicative (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["*"](dictSemiring)(v)(v1);
        };
    });
};
var runMultiplicative = function (v) {
    return v;
};
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Prelude.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqMultiplicative(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, runMultiplicative);
var applyMultiplicative = new Prelude.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Prelude.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Prelude.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Prelude.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    runMultiplicative: runMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Prelude.semigroupFn(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(dictMonoid)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Ord/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Function = require("../Data.Function");
var Data_Monoid = require("../Data.Monoid");
var Min = function (x) {
    return x;
};
var Max = function (x) {
    return x;
};
var Down = function (x) {
    return x;
};
var showMin = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "(Min " + (Prelude.show(dictShow)(v) + ")");
    });
};
var showMax = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "(Max " + (Prelude.show(dictShow)(v) + ")");
    });
};
var showDown = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "(Down " + (Prelude.show(dictShow)(v) + ")");
    });
};
var runMin = function (v) {
    return v;
};
var runMax = function (v) {
    return v;
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var $39 = Prelude.compare(dictOrd)(x)(y);
            if ($39 instanceof Prelude.LT) {
                return x;
            };
            if ($39 instanceof Prelude.EQ) {
                return x;
            };
            if ($39 instanceof Prelude.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord line 60, column 3 - line 67, column 1: " + [ $39.constructor.name ]);
        };
    };
};
var semigroupMin = function (dictOrd) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return min(dictOrd)(v)(v1);
        };
    });
};
var monoidMin = function (dictOrd) {
    return function (dictBounded) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMin(dictOrd);
        }, Prelude.top(dictBounded));
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var $42 = Prelude.compare(dictOrd)(x)(y);
            if ($42 instanceof Prelude.LT) {
                return y;
            };
            if ($42 instanceof Prelude.EQ) {
                return x;
            };
            if ($42 instanceof Prelude.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord line 69, column 3 - line 81, column 1: " + [ $42.constructor.name ]);
        };
    };
};
var semigroupMax = function (dictOrd) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return max(dictOrd)(v)(v1);
        };
    });
};
var monoidMax = function (dictOrd) {
    return function (dictBounded) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMax(dictOrd);
        }, Prelude.bottom(dictBounded));
    };
};
var invert = function (v) {
    if (v instanceof Prelude.GT) {
        return Prelude.LT.value;
    };
    if (v instanceof Prelude.EQ) {
        return Prelude.EQ.value;
    };
    if (v instanceof Prelude.LT) {
        return Prelude.GT.value;
    };
    throw new Error("Failed pattern match at Data.Ord line 12, column 1 - line 13, column 1: " + [ v.constructor.name ]);
};
var eqMin = function (dictEq) {
    return new Prelude.Eq(Data_Function.on(Prelude.eq(dictEq))(runMin));
};
var ordMin = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqMin(dictOrd["__superclass_Prelude.Eq_0"]());
    }, Data_Function.on(Prelude.compare(dictOrd))(runMin));
};
var eqMax = function (dictEq) {
    return new Prelude.Eq(Data_Function.on(Prelude.eq(dictEq))(runMax));
};
var ordMax = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqMax(dictOrd["__superclass_Prelude.Eq_0"]());
    }, Data_Function.on(Prelude.compare(dictOrd))(runMax));
};
var eqDown = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordDown = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqDown(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return invert(Prelude.compare(dictOrd)(v)(v1));
        };
    });
};
var comparing = function (dictOrd) {
    return function (f) {
        return Data_Function.on(Prelude.compare(dictOrd))(f);
    };
};
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return Prelude["<="](dictOrd)(low)(x) && Prelude["<="](dictOrd)(x)(hi);
            };
        };
    };
};
module.exports = {
    Max: Max, 
    Min: Min, 
    Down: Down, 
    runMax: runMax, 
    runMin: runMin, 
    max: max, 
    min: min, 
    between: between, 
    clamp: clamp, 
    comparing: comparing, 
    invert: invert, 
    eqDown: eqDown, 
    showDown: showDown, 
    ordDown: ordDown, 
    eqMin: eqMin, 
    showMin: showMin, 
    ordMin: ordMin, 
    semigroupMin: semigroupMin, 
    monoidMin: monoidMin, 
    eqMax: eqMax, 
    showMax: showMax, 
    ordMax: ordMax, 
    semigroupMax: semigroupMax, 
    monoidMax: monoidMax
};

},{"../Data.Function":"/Users/suppi/code/purescript/ld35/output/Data.Function/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Profunctor = require("../Data.Profunctor");
var Choice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.left = left;
    this.right = right;
};
var right = function (dict) {
    return dict.right;
};
var left = function (dict) {
    return dict.left;
};
var $plus$plus$plus = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                return Prelude[">>>"](dictCategory["__superclass_Prelude.Semigroupoid_0"]())(left(dictChoice)(l))(right(dictChoice)(r));
            };
        };
    };
};
var $bar$bar$bar = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                var join = Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(Data_Either.either(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn)))(Prelude.id(Prelude.categoryFn))(Prelude.id(dictCategory));
                return Prelude[">>>"](dictCategory["__superclass_Prelude.Semigroupoid_0"]())($plus$plus$plus(dictCategory)(dictChoice)(l)(r))(join);
            };
        };
    };
};
var choiceFn = new Choice(function () {
    return Data_Profunctor.profunctorFn;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Data_Either.Left) {
            return Data_Either.Left.create(v(v1.value0));
        };
        if (v1 instanceof Data_Either.Right) {
            return new Data_Either.Right(v1.value0);
        };
        throw new Error("Failed pattern match at Data.Profunctor.Choice line 18, column 3 - line 19, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Prelude["<$>"](Data_Either.functorEither));
module.exports = {
    Choice: Choice, 
    "|||": $bar$bar$bar, 
    "+++": $plus$plus$plus, 
    right: right, 
    left: left, 
    choiceFn: choiceFn
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Closed/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Closed = function (__superclass_Data$dotProfunctor$dotProfunctor_0, closed) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.closed = closed;
};
var closedFunction = new Closed(function () {
    return Data_Profunctor.profunctorFn;
}, Prelude["<<<"](Prelude.semigroupoidFn));
var closed = function (dict) {
    return dict.closed;
};
module.exports = {
    Closed: Closed, 
    closed: closed, 
    closedFunction: closedFunction
};

},{"../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Cochoice/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Profunctor = require("../Data.Profunctor");
var Cochoice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, unleft, unright) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.unleft = unleft;
    this.unright = unright;
};
var unright = function (dict) {
    return dict.unright;
};
var unleft = function (dict) {
    return dict.unleft;
};
module.exports = {
    Cochoice: Cochoice, 
    unright: unright, 
    unleft: unleft
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Costrong/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Profunctor = require("../Data.Profunctor");
var Costrong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, unfirst, unsecond) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.unfirst = unfirst;
    this.unsecond = unsecond;
};
var unsecond = function (dict) {
    return dict.unsecond;
};
var unfirst = function (dict) {
    return dict.unfirst;
};
module.exports = {
    Costrong: Costrong, 
    unsecond: unsecond, 
    unfirst: unfirst
};

},{"../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Star/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Either = require("../Data.Either");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Star = function (x) {
    return x;
};
var runStar = function (v) {
    return v;
};
var profunctorStar = function (dictFunctor) {
    return new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (v) {
                return function ($26) {
                    return Prelude.map(dictFunctor)(g)(v(f($26)));
                };
            };
        };
    });
};
var strongStar = function (dictFunctor) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorStar(dictFunctor);
    }, function (v) {
        return function (v1) {
            return Prelude.map(dictFunctor)(function (v2) {
                return new Data_Tuple.Tuple(v2, v1.value1);
            })(v(v1.value0));
        };
    }, function (v) {
        return function (v1) {
            return Prelude.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
        };
    });
};
var choiceStar = function (dictApplicative) {
    return new Data_Profunctor_Choice.Choice(function () {
        return profunctorStar((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, function (v) {
        return Star(Data_Either.either(function ($27) {
            return Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(v($27));
        })(function ($28) {
            return Prelude.pure(dictApplicative)(Data_Either.Right.create($28));
        }));
    }, function (v) {
        return Star(Data_Either.either(function ($29) {
            return Prelude.pure(dictApplicative)(Data_Either.Left.create($29));
        })(function ($30) {
            return Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(v($30));
        }));
    });
};
module.exports = {
    Star: Star, 
    runStar: runStar, 
    profunctorStar: profunctorStar, 
    strongStar: strongStar, 
    choiceStar: choiceStar
};

},{"../Data.Either":"/Users/suppi/code/purescript/ld35/output/Data.Either/index.js","../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Profunctor.Choice":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Choice/index.js","../Data.Profunctor.Strong":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Profunctor.Strong/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.first = first;
    this.second = second;
};
var strongFn = new Strong(function () {
    return Data_Profunctor.profunctorFn;
}, function (a2b) {
    return function (v) {
        return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
    };
}, Prelude["<$>"](Data_Tuple.functorTuple));
var second = function (dict) {
    return dict.second;
};
var first = function (dict) {
    return dict.first;
};
var $times$times$times = function (dictCategory) {
    return function (dictStrong) {
        return function (l) {
            return function (r) {
                return Prelude[">>>"](dictCategory["__superclass_Prelude.Semigroupoid_0"]())(first(dictStrong)(l))(second(dictStrong)(r));
            };
        };
    };
};
var $amp$amp$amp = function (dictCategory) {
    return function (dictStrong) {
        return function (l) {
            return function (r) {
                var split = Data_Profunctor.dimap(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]())(Prelude.id(Prelude.categoryFn))(function (a) {
                    return new Data_Tuple.Tuple(a, a);
                })(Prelude.id(dictCategory));
                return Prelude[">>>"](dictCategory["__superclass_Prelude.Semigroupoid_0"]())(split)($times$times$times(dictCategory)(dictStrong)(l)(r));
            };
        };
    };
};
module.exports = {
    Strong: Strong, 
    "&&&": $amp$amp$amp, 
    "***": $times$times$times, 
    second: second, 
    first: first, 
    strongFn: strongFn
};

},{"../Data.Profunctor":"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Profunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Profunctor = function (dimap) {
    this.dimap = dimap;
};
var profunctorFn = new Profunctor(function (a2b) {
    return function (c2d) {
        return function (b2c) {
            return function ($4) {
                return c2d(b2c(a2b($4)));
            };
        };
    };
});
var dimap = function (dict) {
    return dict.dimap;
};
var lmap = function (dictProfunctor) {
    return function (a2b) {
        return dimap(dictProfunctor)(a2b)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (dictProfunctor) {
    return function (b2c) {
        return dimap(dictProfunctor)(Prelude.id(Prelude.categoryFn))(b2c);
    };
};
var arr = function (dictCategory) {
    return function (dictProfunctor) {
        return function (f) {
            return rmap(dictProfunctor)(f)(Prelude.id(dictCategory));
        };
    };
};
module.exports = {
    Profunctor: Profunctor, 
    arr: arr, 
    rmap: rmap, 
    lmap: lmap, 
    dimap: dimap, 
    profunctorFn: profunctorFn
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.String.Regex/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Regex

exports["showRegex'"] = function (r) {
  return "" + r;
};

exports["regex'"] = function (s1) {
  return function (s2) {
    return new RegExp(s1, s2);
  };
};

exports.source = function (r) {
  return r.source;
};

exports.flags = function (r) {
  return {
    multiline: r.multiline,
    ignoreCase: r.ignoreCase,
    global: r.global,
    sticky: !!r.sticky,
    unicode: !!r.unicode
  };
};

exports.test = function (r) {
  return function (s) {
    return r.test(s);
  };
};

exports._match = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var m = s.match(r);
        if (m == null) {
          return nothing;
        } else {
          var list = [];
          for (var i = 0; i < m.length; i++) {
            list.push(m[i] == null ? nothing : just(m[i]));
          }
          return just(list);
        }
      };
    };
  };
};

exports.replace = function (r) {
  return function (s1) {
    return function (s2) {
      return s2.replace(r, s1);
    };
  };
};

exports["replace'"] = function (r) {
  return function (f) {
    return function (s2) {
      return s2.replace(r, function (match) {
        return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
      });
    };
  };
};

exports._search = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var result = s.search(r);
        return result === -1 ? nothing : just(result);
      };
    };
  };
};

exports.split = function (r) {
  return function (s) {
    return s.split(r);
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.String.Regex/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_String = require("../Data.String");
var showRegex = new Prelude.Show($foreign["showRegex'"]);
var search = $foreign._search(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var renderFlags = function (f) {
    return (function () {
        if (f.global) {
            return "g";
        };
        if (!f.global) {
            return "";
        };
        throw new Error("Failed pattern match at Data.String.Regex line 65, column 4 - line 65, column 32: " + [ f.global.constructor.name ]);
    })() + ((function () {
        if (f.ignoreCase) {
            return "i";
        };
        if (!f.ignoreCase) {
            return "";
        };
        throw new Error("Failed pattern match at Data.String.Regex line 66, column 4 - line 66, column 36: " + [ f.ignoreCase.constructor.name ]);
    })() + ((function () {
        if (f.multiline) {
            return "m";
        };
        if (!f.multiline) {
            return "";
        };
        throw new Error("Failed pattern match at Data.String.Regex line 67, column 4 - line 67, column 35: " + [ f.multiline.constructor.name ]);
    })() + ((function () {
        if (f.sticky) {
            return "y";
        };
        if (!f.sticky) {
            return "";
        };
        throw new Error("Failed pattern match at Data.String.Regex line 68, column 4 - line 68, column 32: " + [ f.sticky.constructor.name ]);
    })() + (function () {
        if (f.unicode) {
            return "u";
        };
        if (!f.unicode) {
            return "";
        };
        throw new Error("Failed pattern match at Data.String.Regex line 69, column 4 - line 69, column 33: " + [ f.unicode.constructor.name ]);
    })())));
};
var regex = function (s) {
    return function (f) {
        return $foreign["regex'"](s)(renderFlags(f));
    };
};
var parseFlags = function (s) {
    return {
        global: Data_String.contains("g")(s), 
        ignoreCase: Data_String.contains("i")(s), 
        multiline: Data_String.contains("m")(s), 
        sticky: Data_String.contains("y")(s), 
        unicode: Data_String.contains("u")(s)
    };
};
var noFlags = {
    global: false, 
    ignoreCase: false, 
    multiline: false, 
    sticky: false, 
    unicode: false
};
var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    noFlags: noFlags, 
    search: search, 
    match: match, 
    parseFlags: parseFlags, 
    renderFlags: renderFlags, 
    regex: regex, 
    showRegex: showRegex, 
    split: $foreign.split, 
    "replace'": $foreign["replace'"], 
    replace: $foreign.replace, 
    test: $foreign.test, 
    flags: $foreign.flags, 
    source: $foreign.source
};

},{"../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.String":"/Users/suppi/code/purescript/ld35/output/Data.String/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.String.Regex/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.String.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Unsafe

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.String.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    charCodeAt: $foreign.charCodeAt, 
    charAt: $foreign.charAt, 
    "char": $foreign["char"]
};

},{"./foreign":"/Users/suppi/code/purescript/ld35/output/Data.String.Unsafe/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.String/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substr(n);
  };
};

exports.count = function (p) {
  return function (s) {
    for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Data.String/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Char = require("../Data.Char");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v), 
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var $$null = function (s) {
    return $foreign.length(s) === 0;
};
var localeCompare = $foreign._localeCompare(Prelude.LT.value)(Prelude.EQ.value)(Prelude.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (suffix) {
    return function (str) {
        var $2 = lastIndexOf(suffix)(str);
        if ($2 instanceof Data_Maybe.Just && $2.value0 === $foreign.length(str) - $foreign.length(suffix)) {
            return Data_Maybe.Just.create($foreign.take($2.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (prefix) {
    return function (str) {
        var $4 = indexOf(prefix)(str);
        if ($4 instanceof Data_Maybe.Just && $4.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(prefix))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var fromChar = Data_Char.toString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (x) {
    return function (s) {
        return Data_Maybe.isJust(indexOf(x)(s));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripSuffix: stripSuffix, 
    stripPrefix: stripPrefix, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    localeCompare: localeCompare, 
    singleton: singleton, 
    uncons: uncons, 
    "null": $$null, 
    "lastIndexOf'": lastIndexOf$prime, 
    lastIndexOf: lastIndexOf, 
    "indexOf'": indexOf$prime, 
    indexOf: indexOf, 
    contains: contains, 
    toChar: toChar, 
    fromChar: fromChar, 
    charCodeAt: charCodeAt, 
    charAt: charAt, 
    joinWith: $foreign.joinWith, 
    trim: $foreign.trim, 
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharArray: $foreign.toCharArray, 
    split: $foreign.split, 
    drop: $foreign.drop, 
    take: $foreign.take, 
    count: $foreign.count, 
    replace: $foreign.replace, 
    length: $foreign.length, 
    fromCharArray: $foreign.fromCharArray
};

},{"../Data.Char":"/Users/suppi/code/purescript/ld35/output/Data.Char/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.String.Unsafe":"/Users/suppi/code/purescript/ld35/output/Data.String.Unsafe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.String/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Traversable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Traversable

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont (fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList (x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray (list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var StateL = function (x) {
    return x;
};
var StateR = function (x) {
    return x;
};
var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Prelude.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 79, column 3 - line 80, column 3: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 77, column 3 - line 78, column 3: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (tma) {
            return traverse(dictTraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(tma);
        };
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Prelude.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Prelude.apply(dictApplicative["__superclass_Prelude.Apply_0"]()))(Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Prelude.map(dictTraversable["__superclass_Prelude.Functor_0"]())(f)(ta));
            };
        };
    };
};
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $75 = stateR(k)(s);
            return {
                accum: $75.accum, 
                value: f($75.value)
            };
        };
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $78 = stateL(k)(s);
            return {
                accum: $78.accum, 
                value: f($78.value)
            };
        };
    };
});
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var $81 = stateR(x)(s);
            var $82 = stateR(f)($81.accum);
            return {
                accum: $82.accum, 
                value: $82.value($81.value)
            };
        };
    };
});
var applyStateL = new Prelude.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var $87 = stateL(f)(s);
            var $88 = stateL(x)($87.accum);
            return {
                accum: $88.accum, 
                value: $87.value($88.value)
            };
        };
    };
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(dictTraversable)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    mapAccumR: mapAccumR, 
    mapAccumL: mapAccumL, 
    scanr: scanr, 
    scanl: scanl, 
    "for": $$for, 
    sequenceDefault: sequenceDefault, 
    traverseDefault: traverseDefault, 
    sequence: sequence, 
    traverse: traverse, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Maybe.First":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.First/index.js","../Data.Maybe.Last":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.Last/index.js","../Data.Monoid.Additive":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative":"/Users/suppi/code/purescript/ld35/output/Data.Monoid.Multiplicative/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Prelude.Show(function (v) {
            return "Tuple (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Prelude.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Prelude.add(dictSemiring)(v.value0)(v1.value0), Prelude.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.mul(dictSemiring)(v.value0)(v1.value0), Prelude.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Prelude.one(dictSemiring), Prelude.one(dictSemiring1)), new Tuple(Prelude.zero(dictSemiring), Prelude.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Prelude.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0), Prelude["<>"](dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Prelude.Ring(function () {
            return semiringTuple(dictRing["__superclass_Prelude.Semiring_0"]())(dictRing1["__superclass_Prelude.Semiring_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.sub(dictRing)(v.value0)(v1.value0), Prelude.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictMonoid1["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var moduloSemiringTuple = function (dictModuloSemiring) {
    return function (dictModuloSemiring1) {
        return new Prelude.ModuloSemiring(function () {
            return semiringTuple(dictModuloSemiring["__superclass_Prelude.Semiring_0"]())(dictModuloSemiring1["__superclass_Prelude.Semiring_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.div(dictModuloSemiring)(v.value0)(v1.value0), Prelude.div(dictModuloSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.mod(dictModuloSemiring)(v.value0)(v1.value0), Prelude.mod(dictModuloSemiring1)(v.value1)(v1.value1));
            };
        });
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function (f) {
                return Data_Maybe_First.runFirst(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $145 = Prelude["=="](dictEq)(a)(v.value0);
                    if ($145) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    if (!$145) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.Tuple line 174, column 58 - line 174, column 93: " + [ $145.constructor.name ]);
                })(f));
            };
        };
    };
};
var functorTuple = new Prelude.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Prelude.Eq(function (v) {
            return function (v1) {
                return Prelude["=="](dictEq)(v.value0)(v1.value0) && Prelude["=="](dictEq1)(v.value1)(v1.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Prelude.Ord(function () {
            return eqTuple(dictOrd["__superclass_Prelude.Eq_0"]())(dictOrd1["__superclass_Prelude.Eq_0"]());
        }, function (v) {
            return function (v1) {
                var $190 = Prelude.compare(dictOrd)(v.value0)(v1.value0);
                if ($190 instanceof Prelude.EQ) {
                    return Prelude.compare(dictOrd1)(v.value1)(v1.value1);
                };
                return $190;
            };
        });
    };
};
var divisionRingTuple = function (dictDivisionRing) {
    return function (dictDivisionRing1) {
        return new Prelude.DivisionRing(function () {
            return moduloSemiringTuple(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]())(dictDivisionRing1["__superclass_Prelude.ModuloSemiring_1"]());
        }, function () {
            return ringTuple(dictDivisionRing["__superclass_Prelude.Ring_0"]())(dictDivisionRing1["__superclass_Prelude.Ring_0"]());
        });
    };
};
var numTuple = function (dictNum) {
    return function (dictNum1) {
        return new Prelude.Num(function () {
            return divisionRingTuple(dictNum["__superclass_Prelude.DivisionRing_0"]())(dictNum1["__superclass_Prelude.DivisionRing_0"]());
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Prelude.Bounded(new Tuple(Prelude.bottom(dictBounded), Prelude.bottom(dictBounded1)), new Tuple(Prelude.top(dictBounded), Prelude.top(dictBounded1)));
    };
};
var boundedOrdTuple = function (dictBoundedOrd) {
    return function (dictBoundedOrd1) {
        return new Prelude.BoundedOrd(function () {
            return boundedTuple(dictBoundedOrd["__superclass_Prelude.Bounded_0"]())(dictBoundedOrd1["__superclass_Prelude.Bounded_0"]());
        }, function () {
            return ordTuple(dictBoundedOrd["__superclass_Prelude.Ord_1"]())(dictBoundedOrd1["__superclass_Prelude.Ord_1"]());
        });
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Prelude.BooleanAlgebra(function () {
            return boundedTuple(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]())(dictBooleanAlgebra1["__superclass_Prelude.Bounded_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.conj(dictBooleanAlgebra)(v.value0)(v1.value0), Prelude.conj(dictBooleanAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.disj(dictBooleanAlgebra)(v.value0)(v1.value0), Prelude.disj(dictBooleanAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Prelude.not(dictBooleanAlgebra)(v.value0), Prelude.not(dictBooleanAlgebra1)(v.value1));
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Prelude.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Prelude.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var $254 = f(v.value1);
            return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)($254.value0), $254.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Prelude.Applicative(function () {
        return applyTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Prelude.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    lookup: lookup, 
    swap: swap, 
    uncurry: uncurry, 
    curry: curry, 
    snd: snd, 
    fst: fst, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    ordTuple: ordTuple, 
    boundedTuple: boundedTuple, 
    boundedOrdTuple: boundedOrdTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    moduloSemiringTuple: moduloSemiringTuple, 
    ringTuple: ringTuple, 
    divisionRingTuple: divisionRingTuple, 
    numTuple: numTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple
};

},{"../Control.Biapplicative":"/Users/suppi/code/purescript/ld35/output/Control.Biapplicative/index.js","../Control.Biapply":"/Users/suppi/code/purescript/ld35/output/Control.Biapply/index.js","../Control.Comonad":"/Users/suppi/code/purescript/ld35/output/Control.Comonad/index.js","../Control.Extend":"/Users/suppi/code/purescript/ld35/output/Control.Extend/index.js","../Control.Lazy":"/Users/suppi/code/purescript/ld35/output/Control.Lazy/index.js","../Data.Bifoldable":"/Users/suppi/code/purescript/ld35/output/Data.Bifoldable/index.js","../Data.Bifunctor":"/Users/suppi/code/purescript/ld35/output/Data.Bifunctor/index.js","../Data.Bitraversable":"/Users/suppi/code/purescript/ld35/output/Data.Bitraversable/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Functor.Invariant":"/Users/suppi/code/purescript/ld35/output/Data.Functor.Invariant/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Maybe.First":"/Users/suppi/code/purescript/ld35/output/Data.Maybe.First/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Data.Unfoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Traversable = require("../Data.Traversable");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var v = Data_Array_ST.emptySTArray();
            var v1 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var v2 = Control_Monad_ST.readSTRef(v1)();
                    var $12 = f(v2);
                    if ($12 instanceof Data_Maybe.Nothing) {
                        return true;
                    };
                    if ($12 instanceof Data_Maybe.Just) {
                        Data_Array_ST.pushSTArray(v)($12.value0.value0)();
                        Control_Monad_ST.writeSTRef(v1)($12.value0.value1)();
                        return false;
                    };
                    throw new Error("Failed pattern match at Data.Unfoldable line 35, column 7 - line 41, column 5: " + [ $12.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return v;
        }));
    };
});
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $16 = i <= 0;
                if ($16) {
                    return Data_Maybe.Nothing.value;
                };
                if (!$16) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
                };
                throw new Error("Failed pattern match at Data.Unfoldable line 54, column 7 - line 58, column 1: " + [ $16.constructor.name ]);
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.unit);
};
module.exports = {
    Unfoldable: Unfoldable, 
    singleton: singleton, 
    none: none, 
    replicateA: replicateA, 
    replicate: replicate, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Monad.ST":"/Users/suppi/code/purescript/ld35/output/Control.Monad.ST/index.js","../Data.Array.ST":"/Users/suppi/code/purescript/ld35/output/Data.Array.ST/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Debug.Trace/foreign.js":[function(require,module,exports){
/* global exports, console */
"use strict";

// module Debug.Trace

exports.traceAny = function (x) {
  return function (k) {
    console.log(x);
    return k({});
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Debug.Trace/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var traceShowM = function (dictShow) {
    return function (dictMonad) {
        return function (s) {
            return $foreign.traceAny(Prelude.show(dictShow)(s))(function (v) {
                return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(s);
            });
        };
    };
};
var traceShow = function (dictShow) {
    return function ($16) {
        return $foreign.traceAny(Prelude.show(dictShow)($16));
    };
};
var traceAnyM = function (dictMonad) {
    return function (s) {
        return $foreign.traceAny(s)(function (v) {
            return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(s);
        });
    };
};
var traceAnyA = function (dictApplicative) {
    return function (s) {
        return $foreign.traceAny(s)(function (v) {
            return Prelude.pure(dictApplicative)(Prelude.unit);
        });
    };
};
var traceShowA = function (dictShow) {
    return function (dictApplicative) {
        return function ($17) {
            return traceAnyA(dictApplicative)(Prelude.show(dictShow)($17));
        };
    };
};
var traceA = function (dictApplicative) {
    return traceAnyA(dictApplicative);
};
var trace = $foreign.traceAny;
var spy = function (a) {
    return $foreign.traceAny(a)(function (v) {
        return a;
    });
};
module.exports = {
    traceShowM: traceShowM, 
    traceAnyM: traceAnyM, 
    traceShowA: traceShowA, 
    traceA: traceA, 
    traceAnyA: traceAnyA, 
    spy: spy, 
    traceShow: traceShow, 
    trace: trace, 
    traceAny: $foreign.traceAny
};

},{"../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Debug.Trace/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Graphics.Canvas/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Graphics.Canvas

exports.canvasElementToImageSource = function(e) {
    return e;
};

exports.withImage = function (src) {
  return function(f) {
        return function () {
            var img = new Image();
            img.src = src;
            img.addEventListener("load", function() {
                f(img)();
            }, false);

            return {};
        }
    };
};

exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
    return function() {
        var el = document.getElementById(id);
        if (el && el instanceof HTMLCanvasElement) {
            return Just(el);
        } else {
            return Nothing;
        }
    };
};

exports.getContext2D = function(c) {
    return function() {
        return c.getContext('2d');
    };
};

exports.getCanvasWidth = function(canvas) {
    return function() {
        return canvas.width;
    };
};

exports.getCanvasHeight = function(canvas) {
    return function() {
        return canvas.height;
    };
};

exports.setCanvasWidth = function(width) {
    return function(canvas) {
        return function() {
            canvas.width = width;
            return canvas;
        };
    };
};

exports.setCanvasHeight = function(height) {
    return function(canvas) {
        return function() {
            canvas.height = height;
            return canvas;
        };
    };
};

exports.canvasToDataURL = function(canvas) {
    return function() {
        return canvas.toDataURL();
    };
};

exports.setLineWidth = function(width) {
    return function(ctx) {
        return function() {
            ctx.lineWidth = width;
            return ctx;
        };
    };
};

exports.setFillStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = style;
            return ctx;
        };
    };
};

exports.setStrokeStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.strokeStyle = style;
            return ctx;
        };
    };
};

exports.setShadowColor = function(color) {
    return function(ctx) {
        return function() {
            ctx.shadowColor = color;
            return ctx;
        };
    };
};

exports.setShadowBlur = function(blur) {
    return function(ctx) {
        return function() {
            ctx.shadowBlur = blur;
            return ctx;
        };
    };
};

exports.setShadowOffsetX = function(offsetX) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetX = offsetX;
            return ctx;
        };
    };
};

exports.setShadowOffsetY = function(offsetY) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetY = offsetY;
            return ctx;
        };
    };
};

exports.setLineCapImpl = function(cap) {
    return function(ctx) {
        return function() {
            ctx.lineCap = cap;
            return ctx;
        };
    };
};

exports.setGlobalCompositeOperationImpl = function(ctx) {
    return function(op) {
        return function() {
            ctx.globalCompositeOperation = op;
            return ctx;
        };
    };
};

exports.setGlobalAlpha = function(ctx) {
    return function(alpha) {
        return function() {
            ctx.setGlobalAlpha = alpha;
            return ctx;
        };
    };
};

exports.beginPath = function(ctx) {
    return function() {
        ctx.beginPath();
        return ctx;
    };
};

exports.stroke = function(ctx) {
    return function() {
        ctx.stroke();
        return ctx;
    };
};

exports.fill = function(ctx) {
    return function() {
        ctx.fill();
        return ctx;
    };
};

exports.clip = function(ctx) {
    return function() {
        ctx.clip();
        return ctx;
    };
};

exports.lineTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.lineTo(x, y);
                return ctx;
            };
        };
    };
};

exports.moveTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.moveTo(x, y);
                return ctx;
            };
        };
    };
};

exports.closePath = function(ctx) {
    return function() {
        ctx.closePath();
        return ctx;
    };
};

exports.arc = function(ctx) {
    return function(a) {
        return function() {
            ctx.arc(a.x, a.y, a.r, a.start, a.end);
            return ctx;
        };
    };
};

exports.rect = function(ctx) {
    return function(r) {
        return function() {
            ctx.rect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.fillRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.fillRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.strokeRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.strokeRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.scale = function(t) {
    return function(ctx) {
        return function() {
            ctx.scale(t.scaleX, t.scaleY);
            return ctx;
        };
    };
};

exports.rotate = function(angle) {
    return function(ctx) {
        return function() {
            ctx.rotate(angle);
            return ctx;
        };
    };
};

exports.translate = function(t) {
    return function(ctx) {
        return function() {
            ctx.translate(t.translateX, t.translateY);
            return ctx;
        };
    };
};

exports.transform = function(t) {
    return function(ctx) {
        return function() {
            ctx.transform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
            return ctx;
        };
    };
};

exports.clearRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.clearRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.textAlignImpl = function(ctx) {
    return function() {
        return ctx.textAlign;
    }
};

exports.setTextAlignImpl = function(ctx) {
    return function(textAlign) {
        return function() {
            ctx.textAlign = textAlign;
            return ctx;
        }
    }
};

exports.font = function(ctx) {
    return function() {
        return ctx.font;
    };
};

exports.setFont = function(fontspec) {
    return function(ctx) {
        return function() {
            ctx.font = fontspec;
            return ctx;
        };
    };
};

exports.fillText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.fillText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.strokeText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.strokeText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.measureText = function(ctx) {
    return function(text) {
        return function() {
            return ctx.measureText(text);
        };
    };
};

exports.save = function(ctx) {
    return function() {
        ctx.save();
        return ctx;
    };
};

exports.restore = function(ctx) {
    return function() {
        ctx.restore();
        return ctx;
    };
};

exports.getImageData = function(ctx) {
    return function(x) {
        return function(y) {
            return function(w) {
                return function(h) {
                    return function() {
                        return ctx.getImageData(x, y, w, h);
                    };
                };
            };
        };
    };
};

exports.putImageDataFull = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function(dx) {
                    return function(dy) {
                        return function(dw) {
                            return function(dh) {
                                return function() {
                                    ctx.putImageData(image_data, x, y, dx, dy, dw, dh);
                                    return ctx;
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.putImageData = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.putImageData(image_data, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.createImageData = function(ctx) {
    return function(sw) {
        return function(sh) {
            return function() {
                return ctx.createImageData(sw, sh);
            };
        };
    };
};

exports.createImageDataCopy = function(ctx) {
    return function(image_data) {
        return function() {
            return ctx.createImageData(image_data);
        };
    };
};

exports.drawImage = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function() {
                    ctx.drawImage(image_source, dx, dy);
                    return ctx;
                };
            };
        };
    };
};

exports.drawImageScale = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function(dWidth) {
                    return function(dHeight) {
                        return function() {
                            ctx.drawImage(image_source, dx, dy, dWidth, dHeight);
                            return ctx;
                        };
                    };
                };
            };
        };
    };
};

exports.drawImageFull = function(ctx) {
    return function(image_source) {
        return function(sx) {
            return function(sy) {
                return function(sWidth) {
                    return function(sHeight) {
                        return function(dx) {
                            return function(dy) {
                                return function(dWidth) {
                                    return function(dHeight) {
                                        return function() {
                                            ctx.drawImage(image_source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
                                            return ctx;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.createLinearGradient = function(linearGradient) {
    return function(ctx) {
        return function() {
            return ctx.createLinearGradient(linearGradient.x0, linearGradient.y0, linearGradient.x1, linearGradient.y1);
        };
    };
};

exports.createRadialGradient = function(radialGradient) {
    return function(ctx) {
        return function() {
            return ctx.createRadialGradient(radialGradient.x0, radialGradient.y0, radialGradient.r0, radialGradient.x1, radialGradient.y1, radialGradient.r1);
        };
    };
};

exports.addColorStop = function(stop) {
    return function(color) {
        return function(gradient) {
            return function() {
                gradient.addColorStop(stop, color);
                return gradient;
            };
        };
    };
};

exports.setGradientFillStyle = function(gradient) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = gradient;
            return ctx;
        };
    };
};

exports.quadraticCurveTo = function(qCurve) {
    return function(ctx) {
        return function() {
            ctx.quadraticCurveTo(qCurve.cpx, qCurve.cpy, qCurve.x, qCurve.y);
            return ctx;
        };
    };
};

exports.bezierCurveTo = function(bCurve) {
    return function(ctx) {
        return function() {
            ctx.bezierCurveTo(bCurve.cp1x, bCurve.cp1y, bCurve.cp2x, bCurve.cp2y, bCurve.x, bCurve.y);
            return ctx;
        };
    };
};


},{}],"/Users/suppi/code/purescript/ld35/output/Graphics.Canvas/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_ArrayBuffer_Types = require("../Data.ArrayBuffer.Types");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception_Unsafe = require("../Control.Monad.Eff.Exception.Unsafe");
var AlignLeft = (function () {
    function AlignLeft() {

    };
    AlignLeft.value = new AlignLeft();
    return AlignLeft;
})();
var AlignRight = (function () {
    function AlignRight() {

    };
    AlignRight.value = new AlignRight();
    return AlignRight;
})();
var AlignCenter = (function () {
    function AlignCenter() {

    };
    AlignCenter.value = new AlignCenter();
    return AlignCenter;
})();
var AlignStart = (function () {
    function AlignStart() {

    };
    AlignStart.value = new AlignStart();
    return AlignStart;
})();
var AlignEnd = (function () {
    function AlignEnd() {

    };
    AlignEnd.value = new AlignEnd();
    return AlignEnd;
})();
var Round = (function () {
    function Round() {

    };
    Round.value = new Round();
    return Round;
})();
var Square = (function () {
    function Square() {

    };
    Square.value = new Square();
    return Square;
})();
var Butt = (function () {
    function Butt() {

    };
    Butt.value = new Butt();
    return Butt;
})();
var SourceOver = (function () {
    function SourceOver() {

    };
    SourceOver.value = new SourceOver();
    return SourceOver;
})();
var SourceIn = (function () {
    function SourceIn() {

    };
    SourceIn.value = new SourceIn();
    return SourceIn;
})();
var SourceOut = (function () {
    function SourceOut() {

    };
    SourceOut.value = new SourceOut();
    return SourceOut;
})();
var SourceAtop = (function () {
    function SourceAtop() {

    };
    SourceAtop.value = new SourceAtop();
    return SourceAtop;
})();
var DestinationOver = (function () {
    function DestinationOver() {

    };
    DestinationOver.value = new DestinationOver();
    return DestinationOver;
})();
var DestinationIn = (function () {
    function DestinationIn() {

    };
    DestinationIn.value = new DestinationIn();
    return DestinationIn;
})();
var DestinationOut = (function () {
    function DestinationOut() {

    };
    DestinationOut.value = new DestinationOut();
    return DestinationOut;
})();
var DestinationAtop = (function () {
    function DestinationAtop() {

    };
    DestinationAtop.value = new DestinationAtop();
    return DestinationAtop;
})();
var Lighter = (function () {
    function Lighter() {

    };
    Lighter.value = new Lighter();
    return Lighter;
})();
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var Xor = (function () {
    function Xor() {

    };
    Xor.value = new Xor();
    return Xor;
})();
var withContext = function (ctx) {
    return function (action) {
        return function __do() {
            $foreign.save(ctx)();
            var v = action();
            $foreign.restore(ctx)();
            return v;
        };
    };
};
var textAlign = function (ctx) {
    var unsafeParseTextAlign = function (v) {
        if (v === "left") {
            return AlignLeft.value;
        };
        if (v === "right") {
            return AlignRight.value;
        };
        if (v === "center") {
            return AlignCenter.value;
        };
        if (v === "start") {
            return AlignStart.value;
        };
        if (v === "end") {
            return AlignEnd.value;
        };
        return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("invalid TextAlign: " + v);
    };
    return Prelude["<$>"](Control_Monad_Eff.functorEff)(unsafeParseTextAlign)($foreign.textAlignImpl(ctx));
};
var strokePath = function (ctx) {
    return function (path) {
        return function __do() {
            $foreign.beginPath(ctx)();
            var v = path();
            $foreign.stroke(ctx)();
            return v;
        };
    };
};
var showTextAlign = new Prelude.Show(function (v) {
    if (v instanceof AlignLeft) {
        return "left";
    };
    if (v instanceof AlignRight) {
        return "right";
    };
    if (v instanceof AlignCenter) {
        return "center";
    };
    if (v instanceof AlignStart) {
        return "start";
    };
    if (v instanceof AlignEnd) {
        return "end";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 383, column 3 - line 384, column 3: " + [ v.constructor.name ]);
});
var showComposite = new Prelude.Show(function (v) {
    if (v instanceof SourceOver) {
        return "source-over";
    };
    if (v instanceof SourceIn) {
        return "source-in";
    };
    if (v instanceof SourceOut) {
        return "source-out";
    };
    if (v instanceof SourceAtop) {
        return "source-atop";
    };
    if (v instanceof DestinationOver) {
        return "destination-over";
    };
    if (v instanceof DestinationIn) {
        return "destination-in";
    };
    if (v instanceof DestinationOut) {
        return "destination-out";
    };
    if (v instanceof DestinationAtop) {
        return "destination-atop";
    };
    if (v instanceof Lighter) {
        return "lighter";
    };
    if (v instanceof Copy) {
        return "copy";
    };
    if (v instanceof Xor) {
        return "xor";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 223, column 3 - line 224, column 3: " + [ v.constructor.name ]);
});
var setTextAlign = function (ctx) {
    return function (textalign) {
        return $foreign.setTextAlignImpl(ctx)(Prelude.show(showTextAlign)(textalign));
    };
};
var setLineCap = function (v) {
    if (v instanceof Round) {
        return $foreign.setLineCapImpl("round");
    };
    if (v instanceof Square) {
        return $foreign.setLineCapImpl("square");
    };
    if (v instanceof Butt) {
        return $foreign.setLineCapImpl("butt");
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 204, column 1 - line 205, column 1: " + [ v.constructor.name ]);
};
var setGlobalCompositeOperation = function (ctx) {
    return function (composite) {
        return $foreign.setGlobalCompositeOperationImpl(ctx)(Prelude.show(showComposite)(composite));
    };
};
var setCanvasDimensions = function (d) {
    return function (ce) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.setCanvasHeight(d.height)(ce))($foreign.setCanvasWidth(d.width));
    };
};
var getCanvasElementById = function (elId) {
    return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};
var getCanvasDimensions = function (ce) {
    return function __do() {
        var v = $foreign.getCanvasWidth(ce)();
        var v1 = $foreign.getCanvasHeight(ce)();
        return {
            width: v, 
            height: v1
        };
    };
};
var fillPath = function (ctx) {
    return function (path) {
        return function __do() {
            $foreign.beginPath(ctx)();
            var v = path();
            $foreign.fill(ctx)();
            return v;
        };
    };
};
module.exports = {
    AlignLeft: AlignLeft, 
    AlignRight: AlignRight, 
    AlignCenter: AlignCenter, 
    AlignStart: AlignStart, 
    AlignEnd: AlignEnd, 
    Round: Round, 
    Square: Square, 
    Butt: Butt, 
    SourceOver: SourceOver, 
    SourceIn: SourceIn, 
    SourceOut: SourceOut, 
    SourceAtop: SourceAtop, 
    DestinationOver: DestinationOver, 
    DestinationIn: DestinationIn, 
    DestinationOut: DestinationOut, 
    DestinationAtop: DestinationAtop, 
    Lighter: Lighter, 
    Copy: Copy, 
    Xor: Xor, 
    withContext: withContext, 
    setTextAlign: setTextAlign, 
    textAlign: textAlign, 
    fillPath: fillPath, 
    strokePath: strokePath, 
    setGlobalCompositeOperation: setGlobalCompositeOperation, 
    setLineCap: setLineCap, 
    setCanvasDimensions: setCanvasDimensions, 
    getCanvasDimensions: getCanvasDimensions, 
    getCanvasElementById: getCanvasElementById, 
    showComposite: showComposite, 
    showTextAlign: showTextAlign, 
    bezierCurveTo: $foreign.bezierCurveTo, 
    quadraticCurveTo: $foreign.quadraticCurveTo, 
    setGradientFillStyle: $foreign.setGradientFillStyle, 
    addColorStop: $foreign.addColorStop, 
    createRadialGradient: $foreign.createRadialGradient, 
    createLinearGradient: $foreign.createLinearGradient, 
    drawImageFull: $foreign.drawImageFull, 
    drawImageScale: $foreign.drawImageScale, 
    drawImage: $foreign.drawImage, 
    canvasElementToImageSource: $foreign.canvasElementToImageSource, 
    createImageDataCopy: $foreign.createImageDataCopy, 
    createImageData: $foreign.createImageData, 
    putImageDataFull: $foreign.putImageDataFull, 
    putImageData: $foreign.putImageData, 
    getImageData: $foreign.getImageData, 
    withImage: $foreign.withImage, 
    restore: $foreign.restore, 
    save: $foreign.save, 
    measureText: $foreign.measureText, 
    strokeText: $foreign.strokeText, 
    fillText: $foreign.fillText, 
    setFont: $foreign.setFont, 
    font: $foreign.font, 
    transform: $foreign.transform, 
    translate: $foreign.translate, 
    rotate: $foreign.rotate, 
    scale: $foreign.scale, 
    clearRect: $foreign.clearRect, 
    strokeRect: $foreign.strokeRect, 
    fillRect: $foreign.fillRect, 
    rect: $foreign.rect, 
    arc: $foreign.arc, 
    closePath: $foreign.closePath, 
    moveTo: $foreign.moveTo, 
    lineTo: $foreign.lineTo, 
    clip: $foreign.clip, 
    fill: $foreign.fill, 
    stroke: $foreign.stroke, 
    beginPath: $foreign.beginPath, 
    setGlobalAlpha: $foreign.setGlobalAlpha, 
    setShadowColor: $foreign.setShadowColor, 
    setShadowOffsetY: $foreign.setShadowOffsetY, 
    setShadowOffsetX: $foreign.setShadowOffsetX, 
    setShadowBlur: $foreign.setShadowBlur, 
    setStrokeStyle: $foreign.setStrokeStyle, 
    setFillStyle: $foreign.setFillStyle, 
    setLineWidth: $foreign.setLineWidth, 
    canvasToDataURL: $foreign.canvasToDataURL, 
    setCanvasHeight: $foreign.setCanvasHeight, 
    getCanvasHeight: $foreign.getCanvasHeight, 
    setCanvasWidth: $foreign.setCanvasWidth, 
    getCanvasWidth: $foreign.getCanvasWidth, 
    getContext2D: $foreign.getContext2D
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Monad.Eff.Exception.Unsafe":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Exception.Unsafe/index.js","../Data.ArrayBuffer.Types":"/Users/suppi/code/purescript/ld35/output/Data.ArrayBuffer.Types/index.js","../Data.Function":"/Users/suppi/code/purescript/ld35/output/Data.Function/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Graphics.Canvas/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing.Font/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Foldable = require("../Data.Foldable");
var Control_Alt = require("../Control.Alt");
var FontOptions = function (x) {
    return x;
};
var FontFamily = function (x) {
    return x;
};
var Font = (function () {
    function Font(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Font.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Font(value0, value1, value2);
            };
        };
    };
    return Font;
})();
var smallCaps = {
    style: Data_Maybe.Nothing.value, 
    variant: new Data_Maybe.Just("small-caps"), 
    weight: Data_Maybe.Nothing.value
};
var serif = "serif";
var semigroupFontOptions = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return {
            style: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.style)(v1.style), 
            variant: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.variant)(v1.variant), 
            weight: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.weight)(v1.weight)
        };
    };
});
var sansSerif = "sans-serif";
var optionsString = function (v) {
    return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")([ Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(v.style), Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(v.variant), Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(v.weight) ]);
};
var oblique = {
    style: new Data_Maybe.Just("oblique"), 
    variant: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value
};
var monospace = "monospace";
var monoidFontOptions = new Data_Monoid.Monoid(function () {
    return semigroupFontOptions;
}, {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value
});
var light = {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: new Data_Maybe.Just("lighter")
};
var italic = {
    style: new Data_Maybe.Just("italic"), 
    variant: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value
};
var fontString = function (v) {
    return optionsString(v.value2) + (" " + (Prelude.show(Prelude.showInt)(v.value1) + ("px " + v.value0)));
};
var font = Font.create;
var fantasy = "fantasy";
var eqFontOptions = new Prelude.Eq(function (v) {
    return function (v1) {
        return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(v.style)(v1.style) && (Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(v.variant)(v1.variant) && Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(v.weight)(v1.weight));
    };
});
var eqFontFamily = new Prelude.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
var eqFont = new Prelude.Eq(function (v) {
    return function (v1) {
        return Prelude["=="](eqFontFamily)(v.value0)(v1.value0) && (v.value1 === v1.value1 && Prelude["=="](eqFontOptions)(v.value2)(v1.value2));
    };
});
var customFont = FontFamily;
var cursive = "cursive";
var bolder = {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: new Data_Maybe.Just("bolder")
};
var bold = {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: new Data_Maybe.Just("bold")
};
module.exports = {
    smallCaps: smallCaps, 
    oblique: oblique, 
    italic: italic, 
    light: light, 
    bolder: bolder, 
    bold: bold, 
    customFont: customFont, 
    fantasy: fantasy, 
    cursive: cursive, 
    monospace: monospace, 
    sansSerif: sansSerif, 
    serif: serif, 
    fontString: fontString, 
    font: font, 
    eqFont: eqFont, 
    eqFontFamily: eqFontFamily, 
    eqFontOptions: eqFontOptions, 
    semigroupFontOptions: semigroupFontOptions, 
    monoidFontOptions: monoidFontOptions
};

},{"../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Foldable = require("../Data.Foldable");
var Control_Alt = require("../Control.Alt");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Graphics_Canvas = require("../Graphics.Canvas");
var Color = require("../Color");
var Graphics_Drawing_Font = require("../Graphics.Drawing.Font");
var $$Math = require("../Math");
var Shadow = function (x) {
    return x;
};
var Path = (function () {
    function Path(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Path.create = function (value0) {
        return function (value1) {
            return new Path(value0, value1);
        };
    };
    return Path;
})();
var Rectangle = (function () {
    function Rectangle(value0) {
        this.value0 = value0;
    };
    Rectangle.create = function (value0) {
        return new Rectangle(value0);
    };
    return Rectangle;
})();
var Circle = (function () {
    function Circle(value0) {
        this.value0 = value0;
    };
    Circle.create = function (value0) {
        return new Circle(value0);
    };
    return Circle;
})();
var Composite = (function () {
    function Composite(value0) {
        this.value0 = value0;
    };
    Composite.create = function (value0) {
        return new Composite(value0);
    };
    return Composite;
})();
var OutlineStyle = function (x) {
    return x;
};
var FillStyle = function (x) {
    return x;
};
var Fill = (function () {
    function Fill(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Fill.create = function (value0) {
        return function (value1) {
            return new Fill(value0, value1);
        };
    };
    return Fill;
})();
var Outline = (function () {
    function Outline(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Outline.create = function (value0) {
        return function (value1) {
            return new Outline(value0, value1);
        };
    };
    return Outline;
})();
var Text = (function () {
    function Text(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    Text.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new Text(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return Text;
})();
var Many = (function () {
    function Many(value0) {
        this.value0 = value0;
    };
    Many.create = function (value0) {
        return new Many(value0);
    };
    return Many;
})();
var Scale = (function () {
    function Scale(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Scale.create = function (value0) {
        return function (value1) {
            return new Scale(value0, value1);
        };
    };
    return Scale;
})();
var Translate = (function () {
    function Translate(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Translate.create = function (value0) {
        return function (value1) {
            return new Translate(value0, value1);
        };
    };
    return Translate;
})();
var Rotate = (function () {
    function Rotate(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Rotate.create = function (value0) {
        return function (value1) {
            return new Rotate(value0, value1);
        };
    };
    return Rotate;
})();
var Clipped = (function () {
    function Clipped(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Clipped.create = function (value0) {
        return function (value1) {
            return new Clipped(value0, value1);
        };
    };
    return Clipped;
})();
var WithShadow = (function () {
    function WithShadow(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    WithShadow.create = function (value0) {
        return function (value1) {
            return new WithShadow(value0, value1);
        };
    };
    return WithShadow;
})();
var translate = function (tx) {
    return function (ty) {
        return Translate.create({
            translateX: tx, 
            translateY: ty
        });
    };
};
var text = Text.create;
var shadowOffset = function (x) {
    return function (y) {
        return {
            color: Data_Maybe.Nothing.value, 
            blur: Data_Maybe.Nothing.value, 
            offset: new Data_Maybe.Just({
                x: x, 
                y: y
            })
        };
    };
};
var shadowColor = function (c) {
    return {
        color: new Data_Maybe.Just(c), 
        blur: Data_Maybe.Nothing.value, 
        offset: Data_Maybe.Nothing.value
    };
};
var shadowBlur = function (b) {
    return {
        color: Data_Maybe.Nothing.value, 
        blur: new Data_Maybe.Just(b), 
        offset: Data_Maybe.Nothing.value
    };
};
var shadow = WithShadow.create;
var semigroupShape = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Composite) {
            return new Composite(Prelude["++"](Data_List.semigroupList)(v.value0)(Data_List.singleton(v1)));
        };
        if (v1 instanceof Composite) {
            return new Composite(Data_List[":"](v)(v1.value0));
        };
        return new Composite(new Data_List.Cons(v, new Data_List.Cons(v1, Data_List.Nil.value)));
    };
});
var semigroupShadow = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return {
            color: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.color)(v1.color), 
            blur: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.blur)(v1.blur), 
            offset: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.offset)(v1.offset)
        };
    };
});
var semigroupOutlineStyle = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return {
            color: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.color)(v1.color), 
            lineWidth: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.lineWidth)(v1.lineWidth)
        };
    };
});
var semigroupFillStyle = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return {
            color: Control_Alt["<|>"](Data_Maybe.altMaybe)(v.color)(v1.color)
        };
    };
});
var semigroupDrawing = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Many) {
            return new Many(Prelude["++"](Data_List.semigroupList)(v.value0)(Data_List.singleton(v1)));
        };
        if (v1 instanceof Many) {
            return new Many(Data_List[":"](v)(v1.value0));
        };
        return new Many(new Data_List.Cons(v, new Data_List.Cons(v1, Data_List.Nil.value)));
    };
});
var scale = function (sx) {
    return function (sy) {
        return Scale.create({
            scaleX: sx, 
            scaleY: sy
        });
    };
};
var rotate = Rotate.create;
var render = function (ctx) {
    var renderShape = function (v) {
        if (v instanceof Path && v.value1 instanceof Data_List.Nil) {
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
        };
        if (v instanceof Path && v.value1 instanceof Data_List.Cons) {
            return function __do() {
                Graphics_Canvas.moveTo(ctx)(v.value1.value0.x)(v.value1.value0.y)();
                Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(v.value1.value1)(function (p1) {
                    return Graphics_Canvas.lineTo(ctx)(p1.x)(p1.y);
                })();
                return Control_Monad.when(Control_Monad_Eff.monadEff)(v.value0)(Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.closePath(ctx)))();
            };
        };
        if (v instanceof Rectangle) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.rect(ctx)(v.value0));
        };
        if (v instanceof Circle) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.arc(ctx)({
                x: v.value0.x, 
                y: v.value0.y, 
                r: v.value0.r, 
                start: 0.0, 
                end: $$Math.pi * 2.0
            }));
        };
        if (v instanceof Composite) {
            return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(v.value0)(renderShape);
        };
        throw new Error("Failed pattern match at Graphics.Drawing line 312, column 3 - line 313, column 3: " + [ v.constructor.name ]);
    };
    var applyShadow = function (v) {
        return function __do() {
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v.color)(function (color) {
                return Graphics_Canvas.setShadowColor(Color.cssStringHSLA(color))(ctx);
            })();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v.blur)(function (blur) {
                return Graphics_Canvas.setShadowBlur(blur)(ctx);
            })();
            return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v.offset)(function (offset) {
                return function __do() {
                    Graphics_Canvas.setShadowOffsetX(offset.x)(ctx)();
                    return Graphics_Canvas.setShadowOffsetY(offset.y)(ctx)();
                };
            })();
        };
    };
    var applyOutlineStyle = function (v) {
        return function __do() {
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v.color)(function (color) {
                return Graphics_Canvas.setStrokeStyle(Color.cssStringHSLA(color))(ctx);
            })();
            return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v.lineWidth)(function (width) {
                return Graphics_Canvas.setLineWidth(width)(ctx);
            })();
        };
    };
    var applyFillStyle = function (v) {
        return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v.color)(function (color) {
            return Graphics_Canvas.setFillStyle(Color.cssStringHSLA(color))(ctx);
        });
    };
    var go = function (v) {
        if (v instanceof Fill) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                applyFillStyle(v.value1)();
                return Graphics_Canvas.fillPath(ctx)(renderShape(v.value0))();
            }));
        };
        if (v instanceof Outline) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                applyOutlineStyle(v.value1)();
                return Graphics_Canvas.strokePath(ctx)(renderShape(v.value0))();
            }));
        };
        if (v instanceof Many) {
            return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(v.value0)(go);
        };
        if (v instanceof Scale) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                Graphics_Canvas.scale(v.value0)(ctx)();
                return go(v.value1)();
            }));
        };
        if (v instanceof Translate) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                Graphics_Canvas.translate(v.value0)(ctx)();
                return go(v.value1)();
            }));
        };
        if (v instanceof Rotate) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                Graphics_Canvas.rotate(v.value0)(ctx)();
                return go(v.value1)();
            }));
        };
        if (v instanceof Clipped) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                renderShape(v.value0)();
                Graphics_Canvas.clip(ctx)();
                return go(v.value1)();
            }));
        };
        if (v instanceof WithShadow) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                applyShadow(v.value0)();
                return go(v.value1)();
            }));
        };
        if (v instanceof Text) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                Graphics_Canvas.setFont(Graphics_Drawing_Font.fontString(v.value0))(ctx)();
                applyFillStyle(v.value3)();
                return Graphics_Canvas.fillText(ctx)(v.value4)(v.value1)(v.value2)();
            }));
        };
        throw new Error("Failed pattern match at Graphics.Drawing line 262, column 1 - line 319, column 40: " + [ v.constructor.name ]);
    };
    return go;
};
var rectangle = function (x) {
    return function (y) {
        return function (w) {
            return function (h) {
                return new Rectangle({
                    x: x, 
                    y: y, 
                    w: w, 
                    h: h
                });
            };
        };
    };
};
var path = function (dictFoldable) {
    return function ($152) {
        return Path.create(false)(Data_List.toList(dictFoldable)($152));
    };
};
var outlined = Prelude.flip(Outline.create);
var outlineColor = function (c) {
    return {
        color: new Data_Maybe.Just(c), 
        lineWidth: Data_Maybe.Nothing.value
    };
};
var monoidShape = new Data_Monoid.Monoid(function () {
    return semigroupShape;
}, new Composite(Data_Monoid.mempty(Data_List.monoidList)));
var monoidShadow = new Data_Monoid.Monoid(function () {
    return semigroupShadow;
}, {
    color: Data_Maybe.Nothing.value, 
    blur: Data_Maybe.Nothing.value, 
    offset: Data_Maybe.Nothing.value
});
var monoidOutlineStyle = new Data_Monoid.Monoid(function () {
    return semigroupOutlineStyle;
}, {
    color: Data_Maybe.Nothing.value, 
    lineWidth: Data_Maybe.Nothing.value
});
var monoidFillStyle = new Data_Monoid.Monoid(function () {
    return semigroupFillStyle;
}, {
    color: Data_Maybe.Nothing.value
});
var monoidDrawing = new Data_Monoid.Monoid(function () {
    return semigroupDrawing;
}, new Many(Data_Monoid.mempty(Data_List.monoidList)));
var lineWidth = function (c) {
    return {
        color: Data_Maybe.Nothing.value, 
        lineWidth: new Data_Maybe.Just(c)
    };
};
var filled = Prelude.flip(Fill.create);
var fillColor = function (c) {
    return {
        color: new Data_Maybe.Just(c)
    };
};
var everywhere = function (f) {
    var go = function (v) {
        if (v instanceof Many) {
            return f(new Many(Prelude.map(Data_List.functorList)(go)(v.value0)));
        };
        if (v instanceof Scale) {
            return f(new Scale(v.value0, go(v.value1)));
        };
        if (v instanceof Translate) {
            return f(new Translate(v.value0, go(v.value1)));
        };
        if (v instanceof Rotate) {
            return f(new Rotate(v.value0, go(v.value1)));
        };
        if (v instanceof Clipped) {
            return f(new Clipped(v.value0, go(v.value1)));
        };
        if (v instanceof WithShadow) {
            return f(new WithShadow(v.value0, go(v.value1)));
        };
        return f(v);
    };
    return go;
};
var eqShape = new Prelude.Eq(function (v) {
    return function (v1) {
        if (v instanceof Path && v1 instanceof Path) {
            return v.value0 === v1.value0 && (Prelude["=="](Data_List.eqList(Prelude.eqNumber))(Prelude.map(Data_List.functorList)(function (v2) {
                return v2.x;
            })(v.value1))(Prelude.map(Data_List.functorList)(function (v2) {
                return v2.x;
            })(v1.value1)) && Prelude["=="](Data_List.eqList(Prelude.eqNumber))(Prelude.map(Data_List.functorList)(function (v2) {
                return v2.y;
            })(v.value1))(Prelude.map(Data_List.functorList)(function (v2) {
                return v2.y;
            })(v1.value1)));
        };
        if (v instanceof Rectangle && v1 instanceof Rectangle) {
            return v.value0.x === v1.value0.x && (v.value0.y === v1.value0.y && (v.value0.w === v1.value0.w && v.value0.h === v1.value0.h));
        };
        if (v instanceof Circle && v1 instanceof Circle) {
            return v.value0.x === v1.value0.x && (v.value0.y === v1.value0.y && v.value0.r === v1.value0.r);
        };
        if (v instanceof Composite && v1 instanceof Composite) {
            return Prelude["=="](Data_List.eqList(eqShape))(v.value0)(v1.value0);
        };
        return false;
    };
});
var eqShadow = new Prelude.Eq(function (v) {
    return function (v1) {
        return Prelude["=="](Data_Maybe.eqMaybe(Color.eqColor))(v.color)(v1.color) && (Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqNumber))(v.blur)(v1.blur) && Data_Maybe.maybe(Data_Maybe.isNothing(v1.offset))(function (o) {
            return Data_Maybe.maybe(false)(function (o$prime) {
                return o.x === o$prime.x && o.y === o$prime.y;
            })(v1.offset);
        })(v.offset));
    };
});
var eqOutlineStyle = new Prelude.Eq(function (v) {
    return function (v1) {
        return Prelude["=="](Data_Maybe.eqMaybe(Color.eqColor))(v.color)(v1.color) && Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqNumber))(v.lineWidth)(v1.lineWidth);
    };
});
var eqFillStyle = new Prelude.Eq(function (v) {
    return function (v1) {
        return Prelude["=="](Data_Maybe.eqMaybe(Color.eqColor))(v.color)(v1.color);
    };
});
var eqDrawing = new Prelude.Eq(function (v) {
    return function (v1) {
        if (v instanceof Fill && v1 instanceof Fill) {
            return Prelude["=="](eqShape)(v.value0)(v1.value0) && Prelude["=="](eqFillStyle)(v.value1)(v1.value1);
        };
        if (v instanceof Outline && v1 instanceof Outline) {
            return Prelude["=="](eqShape)(v.value0)(v1.value0) && Prelude["=="](eqOutlineStyle)(v.value1)(v1.value1);
        };
        if (v instanceof Text && v1 instanceof Text) {
            return Prelude["=="](Graphics_Drawing_Font.eqFont)(v.value0)(v1.value0) && (v.value1 === v1.value1 && (v.value2 === v1.value2 && (Prelude["=="](eqFillStyle)(v.value3)(v1.value3) && v.value4 === v1.value4)));
        };
        if (v instanceof Many && v1 instanceof Many) {
            return Prelude["=="](Data_List.eqList(eqDrawing))(v.value0)(v1.value0);
        };
        if (v instanceof Scale && v1 instanceof Scale) {
            return v.value0.scaleX === v1.value0.scaleX && (v.value0.scaleY === v1.value0.scaleY && Prelude["=="](eqDrawing)(v.value1)(v1.value1));
        };
        if (v instanceof Translate && v1 instanceof Translate) {
            return v.value0.translateX === v1.value0.translateX && (v.value0.translateY === v1.value0.translateY && Prelude["=="](eqDrawing)(v.value1)(v1.value1));
        };
        if (v instanceof Rotate && v1 instanceof Rotate) {
            return v.value0 === v1.value0 && Prelude["=="](eqDrawing)(v.value1)(v1.value1);
        };
        if (v instanceof Clipped && v1 instanceof Clipped) {
            return Prelude["=="](eqShape)(v.value0)(v1.value0) && Prelude["=="](eqDrawing)(v.value1)(v1.value1);
        };
        if (v instanceof WithShadow && v1 instanceof WithShadow) {
            return Prelude["=="](eqShadow)(v.value0)(v1.value0) && Prelude["=="](eqDrawing)(v.value1)(v1.value1);
        };
        return false;
    };
});
var closed = function (dictFoldable) {
    return function ($153) {
        return Path.create(true)(Data_List.toList(dictFoldable)($153));
    };
};
var clipped = Clipped.create;
var circle = function (x) {
    return function (y) {
        return function (r) {
            return new Circle({
                x: x, 
                y: y, 
                r: r
            });
        };
    };
};
module.exports = {
    render: render, 
    everywhere: everywhere, 
    text: text, 
    rotate: rotate, 
    translate: translate, 
    scale: scale, 
    clipped: clipped, 
    outlined: outlined, 
    filled: filled, 
    shadow: shadow, 
    shadowColor: shadowColor, 
    shadowBlur: shadowBlur, 
    shadowOffset: shadowOffset, 
    lineWidth: lineWidth, 
    outlineColor: outlineColor, 
    fillColor: fillColor, 
    circle: circle, 
    rectangle: rectangle, 
    closed: closed, 
    path: path, 
    semigroupShape: semigroupShape, 
    monoidShape: monoidShape, 
    eqShape: eqShape, 
    semigroupFillStyle: semigroupFillStyle, 
    monoidFillStyle: monoidFillStyle, 
    eqFillStyle: eqFillStyle, 
    semigroupOutlineStyle: semigroupOutlineStyle, 
    monoidOutlineStyle: monoidOutlineStyle, 
    eqOutlineStyle: eqOutlineStyle, 
    eqShadow: eqShadow, 
    semigroupShadow: semigroupShadow, 
    monoidShadow: monoidShadow, 
    semigroupDrawing: semigroupDrawing, 
    monoidDrawing: monoidDrawing, 
    eqDrawing: eqDrawing
};

},{"../Color":"/Users/suppi/code/purescript/ld35/output/Color/index.js","../Control.Alt":"/Users/suppi/code/purescript/ld35/output/Control.Alt/index.js","../Control.Monad":"/Users/suppi/code/purescript/ld35/output/Control.Monad/index.js","../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.List":"/Users/suppi/code/purescript/ld35/output/Data.List/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Graphics.Canvas":"/Users/suppi/code/purescript/ld35/output/Graphics.Canvas/index.js","../Graphics.Drawing.Font":"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing.Font/index.js","../Math":"/Users/suppi/code/purescript/ld35/output/Math/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Input/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var DOM = require("../DOM");
var Control_Timer = require("../Control.Timer");
var Data_Int = require("../Data.Int");
var Signal = require("../Signal");
var Signal_DOM = require("../Signal.DOM");
var Graphics_Drawing = require("../Graphics.Drawing");
var CanvasUtils = require("../CanvasUtils");
var Click = (function () {
    function Click() {

    };
    Click.value = new Click();
    return Click;
})();
var Hold = (function () {
    function Hold() {

    };
    Hold.value = new Hold();
    return Hold;
})();
var Idle = (function () {
    function Idle() {

    };
    Idle.value = new Idle();
    return Idle;
})();
var Release = (function () {
    function Release() {

    };
    Release.value = new Release();
    return Release;
})();
var Mouse = (function () {
    function Mouse(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Mouse.create = function (value0) {
        return function (value1) {
            return new Mouse(value0, value1);
        };
    };
    return Mouse;
})();
var LeftArrow = (function () {
    function LeftArrow() {

    };
    LeftArrow.value = new LeftArrow();
    return LeftArrow;
})();
var RightArrow = (function () {
    function RightArrow() {

    };
    RightArrow.value = new RightArrow();
    return RightArrow;
})();
var UpArrow = (function () {
    function UpArrow() {

    };
    UpArrow.value = new UpArrow();
    return UpArrow;
})();
var DownArrow = (function () {
    function DownArrow() {

    };
    DownArrow.value = new DownArrow();
    return DownArrow;
})();
var upKeyCode = 50;
var showBtnAction = new Prelude.Show(function (v) {
    if (v instanceof Idle) {
        return "Idle";
    };
    if (v instanceof Hold) {
        return "Hold";
    };
    if (v instanceof Click) {
        return "Click";
    };
    if (v instanceof Release) {
        return "Release";
    };
    throw new Error("Failed pattern match at Input line 44, column 3 - line 45, column 3: " + [ v.constructor.name ]);
});
var showMouse = new Prelude.Show(function (v) {
    return "Mouse " + ("(" + (Prelude.show(Prelude.showNumber)(v.value0.x) + (", " + (Prelude.show(Prelude.showNumber)(v.value0.y) + (") " + Prelude.show(showBtnAction)(v.value1))))));
});
var showArrows = function (arrows) {
    return "Arrows " + (Prelude.show(showBtnAction)(arrows.left) + (" " + (Prelude.show(showBtnAction)(arrows.down) + (" " + (Prelude.show(showBtnAction)(arrows.up) + (" " + Prelude.show(showBtnAction)(arrows.right)))))));
};
var showInput = function (i) {
    return "Input\n  " + (showArrows(i.arrows) + ("\n  " + Prelude.show(showMouse)(i.mouse)));
};
var showArrowKey = new Prelude.Show(function (v) {
    if (v instanceof UpArrow) {
        return "UpArrow";
    };
    if (v instanceof LeftArrow) {
        return "LeftArrow";
    };
    if (v instanceof DownArrow) {
        return "DownArrow";
    };
    if (v instanceof RightArrow) {
        return "RightArrow";
    };
    throw new Error("Failed pattern match at Input line 60, column 3 - line 61, column 3: " + [ v.constructor.name ]);
});
var rightKeyCode = 52;
var mouseSignal = function __do() {
    var v = Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude.map(Signal.functorSignal)(function (p) {
        return {
            x: Data_Int.toNumber(p.x), 
            y: Data_Int.toNumber(p.y)
        };
    }))(Signal_DOM.mousePos)();
    var v1 = Signal_DOM.mouseButton(0)();
    var sig = Prelude["<*>"](Signal.applySignal)(Prelude["<$>"](Signal.functorSignal)(Data_Tuple.Tuple.create)(v))(v1);
    return sig;
};
var leftKeyCode = 49;
var initInput = {
    arrows: {
        right: Idle.value, 
        left: Idle.value, 
        down: Idle.value, 
        up: Idle.value
    }, 
    mouse: new Mouse(CanvasUtils.makePoint(0.0)(0.0), Idle.value)
};
var eqBtnAction = new Prelude.Eq(function (v) {
    return function (v1) {
        if (v instanceof Hold && v1 instanceof Hold) {
            return true;
        };
        if (v instanceof Click && v1 instanceof Click) {
            return true;
        };
        if (v instanceof Idle && v1 instanceof Idle) {
            return true;
        };
        if (v instanceof Release && v1 instanceof Release) {
            return true;
        };
        return false;
    };
});
var downKeyCode = 51;
var btnStateUpdate = function (v) {
    return function (v1) {
        if (!v && v1 instanceof Hold) {
            return Release.value;
        };
        if (!v) {
            return Idle.value;
        };
        if (v && v1 instanceof Idle) {
            return Click.value;
        };
        if (v) {
            return Hold.value;
        };
        throw new Error("Failed pattern match at Input line 127, column 1 - line 128, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var mouseFold = function (v) {
    return function (v1) {
        return new Mouse(v.value0, btnStateUpdate(v.value1)(v1.value1));
    };
};
var asNum = function (b) {
    if (b) {
        return 1.0;
    };
    if (!b) {
        return 0.0;
    };
    throw new Error("Failed pattern match at Input line 157, column 11 - line 157, column 30: " + [ b.constructor.name ]);
};
var arrowsSignal = function __do() {
    var v = Signal_DOM.keyPressed(rightKeyCode)();
    var v1 = Signal_DOM.keyPressed(leftKeyCode)();
    var v2 = Signal_DOM.keyPressed(downKeyCode)();
    var v3 = Signal_DOM.keyPressed(upKeyCode)();
    return Prelude["<*>"](Signal.applySignal)(Prelude["<*>"](Signal.applySignal)(Prelude["<*>"](Signal.applySignal)(Prelude["<$>"](Signal.functorSignal)(function (v4) {
        return function (v5) {
            return function (v6) {
                return function (v7) {
                    return {
                        left: v4, 
                        right: v5, 
                        down: v6, 
                        up: v7
                    };
                };
            };
        };
    })(v1))(v))(v2))(v3);
};
var arrFold = function (inp) {
    return function (arrows) {
        return {
            right: btnStateUpdate(inp.right)(arrows.right), 
            left: btnStateUpdate(inp.left)(arrows.left), 
            down: btnStateUpdate(inp.down)(arrows.down), 
            up: btnStateUpdate(inp.up)(arrows.up)
        };
    };
};
var updateInput = function (v) {
    return function (state) {
        return {
            arrows: arrFold(v.value0)(state.arrows), 
            mouse: mouseFold(v.value1)(state.mouse)
        };
    };
};
var input = function __do() {
    var v = Signal_DOM.animationFrame();
    var v1 = arrowsSignal();
    var v2 = mouseSignal();
    var sig = Signal.sampleOn(v)(Prelude["<*>"](Signal.applySignal)(Prelude["<$>"](Signal.functorSignal)(Data_Tuple.Tuple.create)(v1))(v2));
    return Signal.foldp(updateInput)(initInput)(sig);
};
module.exports = {
    Click: Click, 
    Hold: Hold, 
    Idle: Idle, 
    Release: Release, 
    Mouse: Mouse, 
    LeftArrow: LeftArrow, 
    RightArrow: RightArrow, 
    UpArrow: UpArrow, 
    DownArrow: DownArrow, 
    asNum: asNum, 
    downKeyCode: downKeyCode, 
    upKeyCode: upKeyCode, 
    rightKeyCode: rightKeyCode, 
    leftKeyCode: leftKeyCode, 
    arrowsSignal: arrowsSignal, 
    btnStateUpdate: btnStateUpdate, 
    arrFold: arrFold, 
    mouseFold: mouseFold, 
    mouseSignal: mouseSignal, 
    updateInput: updateInput, 
    initInput: initInput, 
    input: input, 
    showInput: showInput, 
    showArrows: showArrows, 
    showBtnAction: showBtnAction, 
    eqBtnAction: eqBtnAction, 
    showMouse: showMouse, 
    showArrowKey: showArrowKey
};

},{"../CanvasUtils":"/Users/suppi/code/purescript/ld35/output/CanvasUtils/index.js","../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Timer":"/Users/suppi/code/purescript/ld35/output/Control.Timer/index.js","../DOM":"/Users/suppi/code/purescript/ld35/output/DOM/index.js","../Data.Int":"/Users/suppi/code/purescript/ld35/output/Data.Int/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Graphics.Drawing":"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","../Signal":"/Users/suppi/code/purescript/ld35/output/Signal/index.js","../Signal.DOM":"/Users/suppi/code/purescript/ld35/output/Signal.DOM/index.js"}],"/Users/suppi/code/purescript/ld35/output/Main/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad = require("../Control.Monad");
var $$Math = require("../Math");
var Data_Int = require("../Data.Int");
var Data_Traversable = require("../Data.Traversable");
var Data_List_1 = require("../Data.List");
var Data_List_1 = require("../Data.List");
var Data_Array = require("../Data.Array");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Data_String = require("../Data.String");
var Graphics_Canvas = require("../Graphics.Canvas");
var Graphics_Drawing = require("../Graphics.Drawing");
var Signal = require("../Signal");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Console = require("../Control.Monad.Eff.Console");
var Control_Timer = require("../Control.Timer");
var DOM = require("../DOM");
var Input = require("../Input");
var Utils = require("../Utils");
var Zipper = require("../Zipper");
var CanvasUtils = require("../CanvasUtils");
var Shape = require("../Shape");
var Model = require("../Model");
var QAs = require("../QAs");
var wallHeight = 250.0;
var speed = CanvasUtils.height / 6.0;
var tick = speed / 60.0;
var renderWall = function (context) {
    return function (state) {
        return Graphics_Drawing.render(context)(Shape.daiKabe(state.wall)(CanvasUtils.width)(wallHeight));
    };
};
var renderText = function (context) {
    return function (state) {
        return Graphics_Drawing.render(context)(Shape.texts(26)(Shape.pink)({
            x: 20.0, 
            y: 30.0
        })(Prelude.show(Prelude.showInt)(Zipper.position(state.qas) + (function () {
            if (state.done) {
                return 1;
            };
            if (!state.done) {
                return 0;
            };
            throw new Error("Failed pattern match at Main line 183, column 16 - line 183, column 64: " + [ state.done.constructor.name ]);
        })() | 0) + (" / " + (Prelude.show(Prelude.showInt)(Zipper.length(state.qas)) + (" Score: " + Prelude.show(Prelude.showNumber)($$Math.max(0.0)($$Math.ceil(state.score))))))));
    };
};
var renderQAs = function (context) {
    return function (state) {
        return function __do() {
            Graphics_Drawing.render(context)(Shape.texts(36)(Shape.white)({
                x: CanvasUtils.width / 2.0 - Data_Int.toNumber(Data_String.length((Zipper.current(state.qas)).question) * 10 | 0), 
                y: state.wall + 40.0
            })((Zipper.current(state.qas)).question))();
            return Prelude["void"](Control_Monad_Eff.functorEff)(Data_Traversable.traverse(Data_List_1.traversableList)(Control_Monad_Eff.applicativeEff)(Graphics_Drawing.render(context))(Data_List_1.zipWith(Prelude["<>"](Graphics_Drawing.semigroupDrawing))(Data_List_1[":"](Shape.circle({
                x: 200.0, 
                y: state.wall + 80.0
            })(30.0))(Data_List_1[":"](Shape.triangle({
                x: 200.0, 
                y: state.wall + 170.0
            })(60.0))(Data_List_1[":"](Shape.square({
                x: 650.0, 
                y: state.wall + 80.0
            })(50.0))(Data_List_1[":"](Shape.ex({
                x: 650.0, 
                y: state.wall + 170.0
            })(50.0))(Data_List_1.Nil.value)))))(Data_List_1.zipWith(function (v) {
                return function (str) {
                    return Shape.texts(30)(Shape.white)({
                        x: v.value0, 
                        y: state.wall + v.value1
                    })(str);
                };
            })(Data_List_1[":"](new Data_Tuple.Tuple(300.0, 120.0))(Data_List_1[":"](new Data_Tuple.Tuple(300.0, 210.0))(Data_List_1[":"](new Data_Tuple.Tuple(750.0, 110.0))(Data_List_1[":"](new Data_Tuple.Tuple(750.0, 210.0))(Data_List_1.Nil.value)))))(Prelude.map(Data_List_1.functorList)(Data_Tuple.snd)((Zipper.current(state.qas)).answers)))))();
        };
    };
};
var renderPlayer = function (context) {
    return function (state) {
        var pos = CanvasUtils.height - state.score;
        var shape = Data_Maybe.fromMaybe(Shape.circle({
            x: 500.0, 
            y: pos
        })(30.0))((function (v) {
            return Data_Array["!!"](v)(state.answer);
        })([ Shape.circle({
            x: 500.0, 
            y: pos
        })(30.0), Shape.triangle({
            x: 500.0, 
            y: pos
        })(60.0), Shape.square({
            x: 500.0, 
            y: pos
        })(50.0), Shape.ex({
            x: 500.0, 
            y: pos
        })(50.0) ]));
        return Graphics_Drawing.render(context)(shape);
    };
};
var renderKeys = function (context) {
    return function (state) {
        return function __do() {
            Graphics_Drawing.render(context)(Prelude["<>"](Graphics_Drawing.semigroupDrawing)(Shape.smallKabe(state.wall)(CanvasUtils.width)(wallHeight))(Shape.texts(36)(Shape.white)({
                x: CanvasUtils.width / 2.0 - Data_Int.toNumber(Data_String.length("The keys are: ") * 10 | 0), 
                y: state.wall + 40.0
            })("The keys are: ")))();
            return Prelude["void"](Control_Monad_Eff.functorEff)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Graphics_Drawing.render(context))(Data_Array.zipWith(Prelude["<>"](Graphics_Drawing.semigroupDrawing))([ Shape.circle({
                x: 200.0, 
                y: state.wall + 80.0
            })(30.0), Shape.triangle({
                x: 200.0, 
                y: state.wall + 170.0
            })(60.0), Shape.square({
                x: 650.0, 
                y: state.wall + 80.0
            })(50.0), Shape.ex({
                x: 650.0, 
                y: state.wall + 170.0
            })(50.0) ])(Data_Array.zipWith(function (v) {
                return function (str) {
                    return Shape.texts(30)(Shape.white)({
                        x: v.value0, 
                        y: state.wall + v.value1
                    })(str);
                };
            })([ new Data_Tuple.Tuple(300.0, 120.0), new Data_Tuple.Tuple(300.0, 210.0), new Data_Tuple.Tuple(750.0, 110.0), new Data_Tuple.Tuple(750.0, 210.0) ])([ " = 1", " = 2", " = 3", " = 4" ]))))();
        };
    };
};
var renderGameOver = function (context) {
    return function (state) {
        return Graphics_Drawing.render(context)(Shape.texts(46)(Shape.red)({
            x: CanvasUtils.width / 2.0 - 100.0, 
            y: CanvasUtils.height / 2.0
        })("Game Over"));
    };
};
var renderGameComplete = function (context) {
    return function (state) {
        return Graphics_Drawing.render(context)(Prelude["<>"](Graphics_Drawing.semigroupDrawing)(Shape.texts(46)(Shape.green)({
            x: CanvasUtils.width / 2.0 - 100.0, 
            y: CanvasUtils.height / 2.0 - 100.0
        })("Well Done!"))(Shape.texts(46)(Shape.white)({
            x: CanvasUtils.width / 2.0 - 180.0, 
            y: CanvasUtils.height / 2.0
        })("Your Score is: " + Prelude.show(Prelude.showNumber)($$Math.ceil(state.score)))));
    };
};
var initWall = -300.0;
var updateGame = function (input) {
    return function (state) {
        var pos = CanvasUtils.height - state.score;
        var $$new = state.wall > CanvasUtils.height + 300.0;
        var wall = (function () {
            if ($$new) {
                return initWall;
            };
            if (!$$new) {
                return state.wall + tick;
            };
            throw new Error("Failed pattern match at Main line 99, column 14 - line 100, column 7: " + [ $$new.constructor.name ]);
        })();
        var match = Data_Maybe.maybe(true)(function ($32) {
            return !Data_Tuple.fst($32);
        })((function (v) {
            return Data_List_1["!!"](v)(state.answer);
        })((Zipper.current(state.qas)).answers));
        var score = (function () {
            var $15 = pos > wall && (pos < wall + wallHeight && match);
            if ($15) {
                return CanvasUtils.height - (wall + wallHeight);
            };
            if (!$15) {
                return state.score;
            };
            throw new Error("Failed pattern match at Main line 105, column 9 - line 113, column 7: " + [ $15.constructor.name ]);
        })();
        var doneAndQas = (function () {
            var $16 = $$new && score > 0.0;
            if ($16) {
                return Zipper.next(state.qas);
            };
            if (!$16) {
                return new Data_Tuple.Tuple(!state.done, state.qas);
            };
            throw new Error("Failed pattern match at Main line 125, column 20 - line 126, column 7: " + [ $16.constructor.name ]);
        })();
        var qas = Data_Tuple.snd(doneAndQas);
        var done = !Data_Tuple.fst(doneAndQas);
        var answer = (function () {
            var $17 = Prelude["=="](Input.eqBtnAction)(input.arrows.left)(Input.Click.value);
            if ($17) {
                return 0;
            };
            if (!$17) {
                var $18 = Prelude["=="](Input.eqBtnAction)(input.arrows.up)(Input.Click.value);
                if ($18) {
                    return 1;
                };
                if (!$18) {
                    var $19 = Prelude["=="](Input.eqBtnAction)(input.arrows.down)(Input.Click.value);
                    if ($19) {
                        return 2;
                    };
                    if (!$19) {
                        var $20 = Prelude["=="](Input.eqBtnAction)(input.arrows.right)(Input.Click.value);
                        if ($20) {
                            return 3;
                        };
                        if (!$20) {
                            return state.answer;
                        };
                        throw new Error("Failed pattern match at Main line 120, column 14 - line 125, column 7: " + [ $20.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Main line 118, column 14 - line 125, column 7: " + [ $19.constructor.name ]);
                };
                throw new Error("Failed pattern match at Main line 116, column 14 - line 125, column 7: " + [ $18.constructor.name ]);
            };
            throw new Error("Failed pattern match at Main line 114, column 9 - line 125, column 7: " + [ $17.constructor.name ]);
        })();
        return {
            qas: qas, 
            wall: wall, 
            score: (function () {
                if (done) {
                    return state.score;
                };
                if (!done) {
                    return score;
                };
                throw new Error("Failed pattern match at Main line 131, column 16 - line 132, column 7: " + [ done.constructor.name ]);
            })(), 
            answer: answer, 
            done: done, 
            starting: false
        };
    };
};
var update = function (input) {
    return function (state) {
        var $$new = state.wall > CanvasUtils.height + 300.0;
        var starting = (function () {
            if ($$new) {
                return false;
            };
            if (!$$new) {
                return state.starting;
            };
            throw new Error("Failed pattern match at Main line 90, column 18 - line 91, column 3: " + [ $$new.constructor.name ]);
        })();
        var wall = (function () {
            if ($$new) {
                return initWall;
            };
            if (!$$new) {
                return state.wall + tick;
            };
            throw new Error("Failed pattern match at Main line 89, column 14 - line 90, column 7: " + [ $$new.constructor.name ]);
        })();
        if (state.starting) {
            var $25 = {};
            for (var $26 in state) {
                if (state.hasOwnProperty($26)) {
                    $25[$26] = state[$26];
                };
            };
            $25.wall = wall;
            $25.starting = starting;
            return $25;
        };
        if (!state.starting) {
            return updateGame(input)(state);
        };
        throw new Error("Failed pattern match at Main line 91, column 6 - line 96, column 1: " + [ state.starting.constructor.name ]);
    };
};
var initState = {
    qas: QAs.qas, 
    score: 300.0, 
    answer: 0, 
    wall: -300.0, 
    done: false, 
    starting: true
};
var initPlayer = 300.0;
var clearCanvas = function (ctx) {
    return function __do() {
        Graphics_Canvas.setFillStyle("#1B1C1B")(ctx)();
        return Graphics_Canvas.fillRect(ctx)({
            x: 0.0, 
            y: 0.0, 
            w: CanvasUtils.width + 100.0, 
            h: CanvasUtils.height + 100.0
        })();
    };
};
var render = function (context) {
    return function (state) {
        return function __do() {
            clearCanvas(context)();
            (function () {
                if (state.starting) {
                    return renderKeys(context)(state);
                };
                if (!state.starting) {
                    return function __do() {
                        renderPlayer(context)(state)();
                        renderWall(context)(state)();
                        Control_Monad.unless(Control_Monad_Eff.monadEff)(state.done)(renderQAs(context)(state))();
                        renderText(context)(state)();
                        Control_Monad.when(Control_Monad_Eff.monadEff)(state.score < -50.0)(renderGameOver(context)(state))();
                        return Control_Monad.when(Control_Monad_Eff.monadEff)(state.done)(renderGameComplete(context)(state))();
                    };
                };
                throw new Error("Failed pattern match at Main line 144, column 3 - line 154, column 3: " + [ state.starting.constructor.name ]);
            })()();
            return Prelude.unit;
        };
    };
};
var main = function __do() {
    var v = Graphics_Canvas.getCanvasElementById("canvas")();
    if (v instanceof Data_Maybe.Just) {
        var v1 = Graphics_Canvas.getContext2D(v.value0)();
        var v2 = Input.input();
        var game = Signal.foldp(update)(initState)(v2);
        return Signal.runSignal(Prelude["<$>"](Signal.functorSignal)(render(v1))(game))();
    };
    throw new Error("Failed pattern match at Main line 35, column 8 - line 46, column 1: " + [ v.constructor.name ]);
};
module.exports = {
    renderKeys: renderKeys, 
    renderQAs: renderQAs, 
    renderGameComplete: renderGameComplete, 
    renderGameOver: renderGameOver, 
    renderText: renderText, 
    renderWall: renderWall, 
    renderPlayer: renderPlayer, 
    clearCanvas: clearCanvas, 
    render: render, 
    updateGame: updateGame, 
    update: update, 
    initWall: initWall, 
    initPlayer: initPlayer, 
    wallHeight: wallHeight, 
    speed: speed, 
    tick: tick, 
    initState: initState, 
    main: main
};

},{"../CanvasUtils":"/Users/suppi/code/purescript/ld35/output/CanvasUtils/index.js","../Control.Monad":"/Users/suppi/code/purescript/ld35/output/Control.Monad/index.js","../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Monad.Eff.Console":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff.Console/index.js","../Control.Timer":"/Users/suppi/code/purescript/ld35/output/Control.Timer/index.js","../DOM":"/Users/suppi/code/purescript/ld35/output/DOM/index.js","../Data.Array":"/Users/suppi/code/purescript/ld35/output/Data.Array/index.js","../Data.Int":"/Users/suppi/code/purescript/ld35/output/Data.Int/index.js","../Data.List":"/Users/suppi/code/purescript/ld35/output/Data.List/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Data.String":"/Users/suppi/code/purescript/ld35/output/Data.String/index.js","../Data.Traversable":"/Users/suppi/code/purescript/ld35/output/Data.Traversable/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Graphics.Canvas":"/Users/suppi/code/purescript/ld35/output/Graphics.Canvas/index.js","../Graphics.Drawing":"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing/index.js","../Input":"/Users/suppi/code/purescript/ld35/output/Input/index.js","../Math":"/Users/suppi/code/purescript/ld35/output/Math/index.js","../Model":"/Users/suppi/code/purescript/ld35/output/Model/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","../QAs":"/Users/suppi/code/purescript/ld35/output/QAs/index.js","../Shape":"/Users/suppi/code/purescript/ld35/output/Shape/index.js","../Signal":"/Users/suppi/code/purescript/ld35/output/Signal/index.js","../Utils":"/Users/suppi/code/purescript/ld35/output/Utils/index.js","../Zipper":"/Users/suppi/code/purescript/ld35/output/Zipper/index.js"}],"/Users/suppi/code/purescript/ld35/output/Math/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports["%"] = function(n) {
  return function(m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],"/Users/suppi/code/purescript/ld35/output/Math/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    sqrt2: $foreign.sqrt2, 
    sqrt1_2: $foreign.sqrt1_2, 
    pi: $foreign.pi, 
    log10e: $foreign.log10e, 
    log2e: $foreign.log2e, 
    ln10: $foreign.ln10, 
    ln2: $foreign.ln2, 
    e: $foreign.e, 
    "%": $foreign["%"], 
    tan: $foreign.tan, 
    sqrt: $foreign.sqrt, 
    sin: $foreign.sin, 
    round: $foreign.round, 
    pow: $foreign.pow, 
    min: $foreign.min, 
    max: $foreign.max, 
    log: $foreign.log, 
    floor: $foreign.floor, 
    exp: $foreign.exp, 
    cos: $foreign.cos, 
    ceil: $foreign.ceil, 
    atan2: $foreign.atan2, 
    atan: $foreign.atan, 
    asin: $foreign.asin, 
    acos: $foreign.acos, 
    abs: $foreign.abs
};

},{"./foreign":"/Users/suppi/code/purescript/ld35/output/Math/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Model/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_List = require("../Data.List");
var qa = function (q) {
    return function (as) {
        return {
            question: q, 
            answers: as
        };
    };
};
module.exports = {
    qa: qa
};

},{"../Data.List":"/Users/suppi/code/purescript/ld35/output/Data.List/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js"}],"/Users/suppi/code/purescript/ld35/output/Prelude/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Bounded --------------------------------------------------------------------

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

//- BooleanAlgebra -------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g,
    function (c, i) { // jshint ignore:line
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Prelude/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (dictRing) {
    return sub(dictRing);
};
var showUnit = new Show(function (v) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Prelude line 864, column 3 - line 865, column 3: " + [ v.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Prelude line 842, column 3 - line 843, column 3: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Prelude line 414, column 3 - line 415, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (dictApplicative) {
    return pure(dictApplicative);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (dictRing) {
    return function (a) {
        return $minus(dictRing)(zero(dictRing["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (dictSemiring) {
    return mul(dictSemiring);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (dictFunctor) {
    return map(dictFunctor);
};
var $less$hash$greater = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(dictFunctor)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (v) {
    return function (v1) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return EQ.value;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return EQ.value;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return EQ.value;
        };
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof EQ && v1 instanceof LT) {
            return GT.value;
        };
        if (v instanceof EQ && v1 instanceof GT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at Prelude line 669, column 3 - line 670, column 3: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (dictEq) {
    return eq(dictEq);
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl($eq$eq(dictEq)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (dictModuloSemiring) {
    return div(dictModuloSemiring);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (dictBooleanAlgebra) {
    return disj(dictBooleanAlgebra);
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var $$void = function (dictFunctor) {
    return function (fa) {
        return $less$dollar$greater(dictFunctor)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (dictBooleanAlgebra) {
    return conj(dictBooleanAlgebra);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (dictSemigroupoid) {
    return compose(dictSemigroupoid);
};
var $greater$greater$greater = function (dictSemigroupoid) {
    return flip(compose(dictSemigroupoid));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return eqArray(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var $79 = compare(dictOrd)(x)(y);
                    if ($79 instanceof EQ) {
                        return 0;
                    };
                    if ($79 instanceof LT) {
                        return 1;
                    };
                    if ($79 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at Prelude line 661, column 53 - line 664, column 57: " + [ $79.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $80 = compare(dictOrd)(a1)(a2);
            if ($80 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $81 = compare(dictOrd)(a1)(a2);
            if ($81 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $82 = compare(dictOrd)(a1)(a2);
            if ($82 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $83 = compare(dictOrd)(a1)(a2);
            if ($83 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded($foreign.bottomInt, $foreign.topInt);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);
var boundedOrdChar = new BoundedOrd(function () {
    return boundedChar;
}, function () {
    return ordChar;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (dictBounded) {
    return new Bounded(function (v) {
        return bottom(dictBounded);
    }, function (v) {
        return top(dictBounded);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return unit;
});
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return boundedFn(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(dictBooleanAlgebra)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(dictBooleanAlgebra)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(dictBooleanAlgebra)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (dictEq) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(dictEq)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v) {
                return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(f(v));
            });
        };
    };
};
var $greater$greater$eq = function (dictBind) {
    return bind(dictBind);
};
var asTypeOf = function (x) {
    return function (v) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (dictApply) {
    return apply(dictApply);
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return $less$times$greater(dictApplicative["__superclass_Prelude.Apply_0"]())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (dictSemigroup) {
    return append(dictSemigroup);
};
var $less$greater = function (dictSemigroup) {
    return append(dictSemigroup);
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return bind(dictMonad["__superclass_Prelude.Bind_1"]())(f)(function (v) {
                return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v1) {
                    return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(v(v1));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (dictSemiring) {
    return add(dictSemiring);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    unsafeCompare: unsafeCompare, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    boundedOrdChar: boundedOrdChar, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":"/Users/suppi/code/purescript/ld35/output/Prelude/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/QAs/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Zipper = require("../Zipper");
var Data_List = require("../Data.List");
var Data_Tuple = require("../Data.Tuple");
var Model = require("../Model");
var qas = new Zipper.Zipper(Model.qa("1 + 1 =")(Data_List[":"](new Data_Tuple.Tuple(true, "2"))(Data_List[":"](new Data_Tuple.Tuple(false, "3"))(Data_List.Nil.value))), Data_List.Nil.value, Data_List[":"](Model.qa("2 * 2 =")(Data_List[":"](new Data_Tuple.Tuple(false, "8"))(Data_List[":"](new Data_Tuple.Tuple(true, "4"))(Data_List[":"](new Data_Tuple.Tuple(false, "16"))(Data_List.Nil.value)))))(Data_List[":"](Model.qa("3 * 3 =")(Data_List[":"](new Data_Tuple.Tuple(false, "6"))(Data_List[":"](new Data_Tuple.Tuple(false, "15"))(Data_List[":"](new Data_Tuple.Tuple(false, "1"))(Data_List[":"](new Data_Tuple.Tuple(true, "9"))(Data_List.Nil.value))))))(Data_List.Nil.value)));
module.exports = {
    qas: qas
};

},{"../Data.List":"/Users/suppi/code/purescript/ld35/output/Data.List/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Model":"/Users/suppi/code/purescript/ld35/output/Model/index.js","../Zipper":"/Users/suppi/code/purescript/ld35/output/Zipper/index.js"}],"/Users/suppi/code/purescript/ld35/output/Shape/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Monoid = require("../Data.Monoid");
var $$Math = require("../Math");
var Graphics_Drawing_1 = require("../Graphics.Drawing");
var Graphics_Drawing_1 = require("../Graphics.Drawing");
var Graphics_Drawing_Font = require("../Graphics.Drawing.Font");
var Color = require("../Color");
var Data_Foldable = require("../Data.Foldable");
var white = Color.rgb(255)(255)(255);
var triangle = function (l) {
    return function (size) {
        var base = $$Math.sqrt($$Math.pow(size / 2.0)(2.0) + $$Math.pow(size)(2.0));
        var loc = {
            x: (l.x + size) - base, 
            y: l.y
        };
        return Graphics_Drawing_1.filled(Graphics_Drawing_1.fillColor(Color.rgb(80)(255)(80)))(Graphics_Drawing_1.closed(Data_Foldable.foldableArray)([ {
            x: loc.x, 
            y: loc.y + size
        }, {
            x: loc.x + base, 
            y: loc.y + size
        }, {
            x: loc.x + base / 2.0, 
            y: loc.y
        } ]));
    };
};
var square = function (loc) {
    return function (size) {
        return Graphics_Drawing_1.filled(Graphics_Drawing_1.fillColor(Color.rgb(255)(255)(80)))(Graphics_Drawing_1.rectangle(loc.x)(loc.y)(size)(size));
    };
};
var smallKabe = function (h) {
    return function (ws) {
        return function (hs) {
            return Graphics_Drawing_1.filled(Graphics_Drawing_1.fillColor(Color.rgb(80)(40)(130)))(Graphics_Drawing_1.rectangle(0.0)(h)(ws)(hs));
        };
    };
};
var red = Color.rgb(255)(0)(0);
var pink = Color.rgb(255)(50)(90);
var myfont = function (sz) {
    return Graphics_Drawing_Font.font(Graphics_Drawing_Font.serif)(sz)(Data_Monoid.mempty(Graphics_Drawing_Font.monoidFontOptions));
};
var texts = function (size) {
    return function (clr) {
        return function (loc) {
            return Graphics_Drawing_1.text(myfont(size))(loc.x)(loc.y)(Graphics_Drawing_1.fillColor(clr));
        };
    };
};
var green = Color.rgb(80)(255)(80);
var ex = function (loc) {
    return function (size) {
        return Prelude["<>"](Graphics_Drawing_1.semigroupDrawing)(Graphics_Drawing_1.outlined(Prelude["<>"](Graphics_Drawing_1.semigroupOutlineStyle)(Graphics_Drawing_1.lineWidth(5.0))(Graphics_Drawing_1.outlineColor(Color.rgb(255)(50)(100))))(Graphics_Drawing_1.closed(Data_Foldable.foldableArray)([ {
            x: loc.x, 
            y: loc.y + size
        }, {
            x: loc.x + size, 
            y: loc.y
        } ])))(Graphics_Drawing_1.outlined(Prelude["<>"](Graphics_Drawing_1.semigroupOutlineStyle)(Graphics_Drawing_1.lineWidth(5.0))(Graphics_Drawing_1.outlineColor(Color.rgb(255)(50)(100))))(Graphics_Drawing_1.closed(Data_Foldable.foldableArray)([ {
            x: loc.x, 
            y: loc.y
        }, {
            x: loc.x + size, 
            y: loc.y + size
        } ])));
    };
};
var daiKabe = function (h) {
    return function (ws) {
        return function (hs) {
            return Prelude["<>"](Graphics_Drawing_1.semigroupDrawing)(Graphics_Drawing_1.filled(Graphics_Drawing_1.fillColor(Color.rgb(80)(40)(130)))(Graphics_Drawing_1.rectangle(0.0)(h)(ws)(hs)))(Graphics_Drawing_1.filled(Graphics_Drawing_1.fillColor(Color.rgb(205)(205)(205)))(Graphics_Drawing_1.rectangle(ws / 2.0 - 25.0)((h + hs) - 80.0)(80.0)(80.0)));
        };
    };
};
var circle = function (loc) {
    return function (size) {
        return Graphics_Drawing_1.filled(Graphics_Drawing_1.fillColor(Color.rgb(0)(130)(255)))(Graphics_Drawing_1.circle((loc.x - 5.0) + size)(loc.y + size)(size));
    };
};
module.exports = {
    white: white, 
    green: green, 
    red: red, 
    pink: pink, 
    myfont: myfont, 
    texts: texts, 
    smallKabe: smallKabe, 
    daiKabe: daiKabe, 
    ex: ex, 
    circle: circle, 
    triangle: triangle, 
    square: square
};

},{"../Color":"/Users/suppi/code/purescript/ld35/output/Color/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Monoid":"/Users/suppi/code/purescript/ld35/output/Data.Monoid/index.js","../Graphics.Drawing":"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing/index.js","../Graphics.Drawing.Font":"/Users/suppi/code/purescript/ld35/output/Graphics.Drawing.Font/index.js","../Math":"/Users/suppi/code/purescript/ld35/output/Math/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Signal.DOM/foreign.js":[function(require,module,exports){
// module Signal.DOM

exports.keyPressedP =
  function keyPressedP(constant) {
    return function(keyCode) {
      return function() {
        var out = constant(false);
        window.addEventListener("keydown", function(e) {
          if (e.keyCode === keyCode) out.set(true);
        });
        window.addEventListener("keyup", function(e) {
          if (e.keyCode === keyCode) out.set(false);
        });
        return out;
      };
    };
  };

exports.mouseButtonP =
  function mouseButtonP(constant) {
    return function(button) {
      return function() {
        var out = constant(false);
        window.addEventListener("mousedown", function(e) {
          if (e.button === button) out.set(true);
        });
        window.addEventListener("mouseup", function(e) {
          if (e.button === button) out.set(false);
        });
        return out;
      };
    };
  };

exports.touchP =
  function touchP(constant) {
    var out = constant([]);
    function report(e) {
      var touches = [], i, l = e.touches.length;
      for (i = 0; i < l; i++) touches.push(e.touches.item(i));
      out.set(touches);
    }
    window.addEventListener("touchstart", report);
    window.addEventListener("touchend", report);
    window.addEventListener("touchmove", report);
    window.addEventListener("touchcancel", report);
    return function() {
      return out;
    };
  };

exports.mousePosP =
  function mousePosP(constant) {
    var out = constant({x:0,y:0});
    window.addEventListener('mousemove', function(e) {
      if (e.pageX !== undefined && e.pageY !== undefined) {
        out.set({x: e.pageX, y: e.pageY});
      } else if (e.clientX !== undefined && e.clientY !== undefined) {
        out.set({
          x: e.clientX + document.body.scrollLeft +
             document.documentElement.scrollLeft,
          y: e.clientY + document.body.scrollTop +
             document.documentElement.scrollTop
        });
      } else {
        throw new Error('Mouse event has no coordinates I recognise!');
      }
    });
    return function() {
      return out;
    };
  };

exports.animationFrameP =
  function animationFrameP(constant) {
    return function(now) {
      return function() {
        var requestAnimFrame, cancelAnimFrame;
        if (window.requestAnimationFrame) {
          requestAnimFrame = window.requestAnimationFrame;
          cancelAnimFrame = window.cancelAnimationFrame;
        } else if (window.mozRequestAnimationFrame) {
          requestAnimFrame = window.mozRequestAnimationFrame;
          cancelAnimFrame = window.mozCancelAnimationFrame;
        } else if (window.webkitRequestAnimationFrame) {
          requestAnimFrame = window.webkitRequestAnimationFrame;
          cancelAnimFrame = window.webkitCancelAnimationFrame;
        } else if (window.msRequestAnimationFrame) {
          requestAnimFrame = window.msRequestAnimationFrame;
          cancelAnimFrame = window.msCancelAnimationFrame;
        } else if (window.oRequestAnimationFrame) {
          requestAnimFrame = window.oRequestAnimationFrame;
          cancelAnimFrame = window.oCancelAnimationFrame;
        } else {
          requestAnimFrame = function(cb) {setTimeout(function() {cb(now())}, 1000/60)};
          cancelAnimFrame = window.clearTimeout;
        }
        var out = constant(now());
        requestAnimFrame(function tick(t) {
          out.set(t); requestAnimFrame(tick);
        });
        return out;
      };
    };
  };

exports.windowDimensionsP = function windowDimensionsP(constant) {
  var out = constant({ w: window.innerWidth, h: innerHeight });
  window.addEventListener("resize", function() {
    out.set({ w: window.innerWidth, h: window.innerHeight });
  });
  return function() {
    return out;
  }
}

},{}],"/Users/suppi/code/purescript/ld35/output/Signal.DOM/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Timer = require("../Control.Timer");
var DOM = require("../DOM");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Signal_Time = require("../Signal.Time");
var windowDimensions = $foreign.windowDimensionsP(Signal.constant);
var touch = $foreign.touchP(Signal.constant);
var tap = function __do() {
    var v = touch();
    return Signal.flippedMap(Signal.functorSignal)(v)(function (t) {
        if (t.length === 0) {
            return false;
        };
        return true;
    });
};
var mousePos = $foreign.mousePosP(Signal.constant);
var mouseButton = $foreign.mouseButtonP(Signal.constant);
var keyPressed = $foreign.keyPressedP(Signal.constant);
var animationFrame = $foreign.animationFrameP(Signal.constant)(Signal_Time.now);
module.exports = {
    windowDimensions: windowDimensions, 
    mousePos: mousePos, 
    tap: tap, 
    touch: touch, 
    mouseButton: mouseButton, 
    keyPressed: keyPressed, 
    animationFrame: animationFrame
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Timer":"/Users/suppi/code/purescript/ld35/output/Control.Timer/index.js","../DOM":"/Users/suppi/code/purescript/ld35/output/DOM/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","../Signal":"/Users/suppi/code/purescript/ld35/output/Signal/index.js","../Signal.Time":"/Users/suppi/code/purescript/ld35/output/Signal.Time/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Signal.DOM/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Signal.Time/foreign.js":[function(require,module,exports){
(function (process){
// module Signal.Time

function now() {
  var perf = typeof performance !== 'undefined' ? performance : null,
      proc = typeof process !== 'undefined' ? process : null;
  return (
    perf && (perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow) ||
    (proc && proc.hrtime && function() {
      var t = proc.hrtime();
      return (t[0] * 1e9 + t[1]) / 1e6;
    }) ||
    Date.now
  ).call(perf);
};

exports.now = now;

exports.everyP = function everyP(constant) {
  return function(t) {
    var out = constant(now());
    setInterval(function() {
      out.set(now());
    }, t);
    return out;
  };
};

exports.delayP = function delayP(constant) {
  return function(t) {
    return function(sig) {
      var out = constant(sig.get());
      var first = true;
      sig.subscribe(function(val) {
        if (first) {
          first = false;
        } else {
          setTimeout(function() {
            out.set(val);
          }, t);
        }
      });
      return out;
    }
  };
};

exports.sinceP = function sinceP(constant) {
  return function(t) {
    return function(sig) {
      var out = constant(false);
      var first = true;
      var timer = undefined;
      var tick = function() {
        out.set(false);
        timer = undefined;
      };
      sig.subscribe(function() {
        if (first) {
          first = false;
          return;
        }
        if (timer === undefined) {
          out.set(true);
          timer = setTimeout(tick, t);
        } else {
          clearTimeout(timer);
          timer = setTimeout(tick, t);
        }
      });
      return out;
    }
  };
};

}).call(this,require('_process'))
},{"_process":"/usr/local/lib/node_modules/pulp/node_modules/browserify/node_modules/process/browser.js"}],"/Users/suppi/code/purescript/ld35/output/Signal.Time/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Timer = require("../Control.Timer");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var since = $foreign.sinceP(Signal.constant);
var second = 1000.0;
var millisecond = 1.0;
var every = $foreign.everyP(Signal.constant);
var delay = $foreign.delayP(Signal.constant);
var debounce = function (t) {
    return function (s) {
        var whenEqual = function (value) {
            return function (input) {
                return Signal.filter(Prelude["=="](Prelude.eqBoolean)(value))(value)(input);
            };
        };
        var whenChangeTo = function (value) {
            return function (input) {
                return whenEqual(value)(Signal.dropRepeats(Prelude.eqBoolean)(input));
            };
        };
        var leading = whenChangeTo(false)(since(t)(s));
        return Signal.sampleOn(leading)(s);
    };
};
module.exports = {
    second: second, 
    millisecond: millisecond, 
    debounce: debounce, 
    since: since, 
    delay: delay, 
    every: every, 
    now: $foreign.now
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Control.Timer":"/Users/suppi/code/purescript/ld35/output/Control.Timer/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","../Signal":"/Users/suppi/code/purescript/ld35/output/Signal/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Signal.Time/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Signal/foreign.js":[function(require,module,exports){
// module Signal

function make(initial) {
  var subs = [];
  var val = initial;
  var sig = {
    subscribe: function(sub) {
      subs.push(sub);
      sub(val);
    },
    get: function() { return val; },
    set: function(newval) {
      val = newval;
      subs.forEach(function(sub) { sub(newval); });
    }
  };
  return sig;
};

exports.constant = make;

exports.mapSig = function(fun) {
  return function(sig) {
    var out = make(fun(sig.get()));
    sig.subscribe(function(val) { out.set(fun(val)); });
    return out;
  };
};


exports.applySig = function(fun) {
  return function(sig) {
    var out = make(fun.get()(sig.get()));
    var produce = function() { out.set(fun.get()(sig.get())); };
    fun.subscribe(produce);
    sig.subscribe(produce);
    return out;
  };
};

exports.merge = function(sig1) {
  return function(sig2) {
    var out = make(sig1.get());
    sig2.subscribe(out.set);
    sig1.subscribe(out.set);
    return out;
  };
};

exports.foldp = function(fun) {
  return function(seed) {
    return function(sig) {
      var acc = seed;
      var out = make(acc);
      sig.subscribe(function(val) {
        acc = fun(val)(acc);
        out.set(acc);
      });
      return out;
    };
  };
};

exports.sampleOn = function(sig1) {
  return function(sig2) {
    var out = make(sig2.get());
    sig1.subscribe(function() {
      out.set(sig2.get());
    });
    return out;
  };
};

exports.dropRepeats = function(eq) {
  return function(sig) {
    var val = sig.get();
    var out = make(val);
    sig.subscribe(function(newval) {
      if (!eq["eq"](val)(newval)) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };
};

exports["dropRepeats'"] = function(sig) {
  var val = sig.get();
  var out = make(val);
  sig.subscribe(function(newval) {
    if (val !== newval) {
      val = newval;
      out.set(val);
    }
  });
  return out;
};

exports.runSignal =
  function runSignal(sig) {
    return function() {
      sig.subscribe(function(val) {
        val();
      });
      return {};
    };
  };

exports.unwrap = function(sig) {
  return function() {
    var out = make(sig.get()());
    sig.subscribe(function(val) { out.set(val()); });
    return out;
  };
};

exports.filter = function(fn) {
  return function(seed) {
    return function(sig) {
      var out = make(fn(sig.get()) ? sig.get() : seed);
      sig.subscribe(function(val) { if (fn(val)) out.set(val); });
      return out;
    };
  };
};

},{}],"/Users/suppi/code/purescript/ld35/output/Signal/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Prelude = require("../Prelude");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var $less$tilde = squigglyMap;
var $tilde = squigglyApply;
var $tilde$greater = flippedMap;
var squigglyMap = function (dictFunctor) {
    return Prelude.map(dictFunctor);
};
var squigglyApply = function (dictApply) {
    return Prelude.apply(dictApply);
};
var semigroupSignal = new Prelude.Semigroup($foreign.merge);
var mergeMany = function (dictFunctor) {
    return function (dictFoldable) {
        return function (sigs) {
            var mergeMaybe = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return v;
                    };
                    if (v instanceof Data_Maybe.Nothing) {
                        return v1;
                    };
                    if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                    };
                    throw new Error("Failed pattern match at Signal line 49, column 9 - line 50, column 9: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Prelude["<$>"](dictFunctor)(Data_Maybe.Just.create)(sigs));
        };
    };
};
var functorSignal = new Prelude.Functor($foreign.mapSig);
var flippedMap = function (dictFunctor) {
    return Prelude.flip(Prelude.map(dictFunctor));
};
var filterMap = function (f) {
    return function (def) {
        return function (sig) {
            return Prelude["<$>"](functorSignal)(Data_Maybe.fromMaybe(def))($foreign.filter(Data_Maybe.isJust)(new Data_Maybe.Just(def))(Prelude["<$>"](functorSignal)(f)(sig)));
        };
    };
};
var applySignal = new Prelude.Apply(function () {
    return functorSignal;
}, $foreign.applySig);
var map2 = function (f) {
    return function (a) {
        return function (b) {
            return squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b);
        };
    };
};
var map3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var map4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var map5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Prelude.Applicative(function () {
    return applySignal;
}, $foreign.constant);
module.exports = {
    map5: map5, 
    map4: map4, 
    map3: map3, 
    map2: map2, 
    flippedMap: flippedMap, 
    squigglyApply: squigglyApply, 
    squigglyMap: squigglyMap, 
    "~": $tilde, 
    "~>": $tilde$greater, 
    "<~": $less$tilde, 
    filterMap: filterMap, 
    mergeMany: mergeMany, 
    functorSignal: functorSignal, 
    applySignal: applySignal, 
    applicativeSignal: applicativeSignal, 
    semigroupSignal: semigroupSignal, 
    filter: $foreign.filter, 
    unwrap: $foreign.unwrap, 
    runSignal: $foreign.runSignal, 
    "dropRepeats'": $foreign["dropRepeats'"], 
    dropRepeats: $foreign.dropRepeats, 
    sampleOn: $foreign.sampleOn, 
    foldp: $foreign.foldp, 
    merge: $foreign.merge, 
    constant: $foreign.constant
};

},{"../Control.Monad.Eff":"/Users/suppi/code/purescript/ld35/output/Control.Monad.Eff/index.js","../Data.Foldable":"/Users/suppi/code/purescript/ld35/output/Data.Foldable/index.js","../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","./foreign":"/Users/suppi/code/purescript/ld35/output/Signal/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Unsafe.Coerce/foreign.js":[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function(x) { return x; }

},{}],"/Users/suppi/code/purescript/ld35/output/Unsafe.Coerce/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":"/Users/suppi/code/purescript/ld35/output/Unsafe.Coerce/foreign.js"}],"/Users/suppi/code/purescript/ld35/output/Utils/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Debug_Trace = require("../Debug.Trace");
var spyShow = function (dictShow) {
    return function (desc) {
        return function (x) {
            return Debug_Trace.trace(desc + (": " + Prelude.show(dictShow)(x)))(function (v) {
                return x;
            });
        };
    };
};
var maybeToArray = function (v) {
    if (v instanceof Data_Maybe.Nothing) {
        return [  ];
    };
    if (v instanceof Data_Maybe.Just) {
        return [ v.value0 ];
    };
    throw new Error("Failed pattern match at Utils line 12, column 1 - line 13, column 1: " + [ v.constructor.name ]);
};
module.exports = {
    maybeToArray: maybeToArray, 
    spyShow: spyShow
};

},{"../Data.Maybe":"/Users/suppi/code/purescript/ld35/output/Data.Maybe/index.js","../Debug.Trace":"/Users/suppi/code/purescript/ld35/output/Debug.Trace/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js"}],"/Users/suppi/code/purescript/ld35/output/Zipper/index.js":[function(require,module,exports){
// Generated by psc version 0.8.4.0
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_List_1 = require("../Data.List");
var Data_List_1 = require("../Data.List");
var Utils = require("../Utils");
var Zipper = (function () {
    function Zipper(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Zipper.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Zipper(value0, value1, value2);
            };
        };
    };
    return Zipper;
})();
var zipper = Zipper.create;
var position = function (v) {
    return Data_List_1.length(v.value1);
};
var next = function (v) {
    if (v.value2 instanceof Data_List_1.Nil) {
        return new Data_Tuple.Tuple(false, v);
    };
    if (v.value2 instanceof Data_List_1.Cons) {
        return Data_Tuple.Tuple.create(true)(new Zipper(v.value2.value0, new Data_List_1.Cons(v.value0, v.value1), v.value2.value1));
    };
    throw new Error("Failed pattern match at Zipper line 21, column 3 - line 27, column 1: " + [ v.value2.constructor.name ]);
};
var length = function (v) {
    return (1 + Data_List_1.length(v.value1) | 0) + Data_List_1.length(v.value2) | 0;
};
var current = function (v) {
    return v.value0;
};
var back = function (v) {
    if (v.value1 instanceof Data_List_1.Nil) {
        return new Data_Tuple.Tuple(false, v);
    };
    if (v.value1 instanceof Data_List_1.Cons) {
        return Data_Tuple.Tuple.create(true)(new Zipper(v.value1.value0, v.value1.value1, new Data_List_1.Cons(v.value0, v.value2)));
    };
    throw new Error("Failed pattern match at Zipper line 29, column 3 - line 35, column 1: " + [ v.value1.constructor.name ]);
};
var start = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        if (v.value1 instanceof Data_List_1.Nil) {
            return v;
        };
        var __tco_v = Data_Tuple.snd(back(v));
        v = __tco_v;
        continue tco;
    };
};
module.exports = {
    Zipper: Zipper, 
    length: length, 
    position: position, 
    start: start, 
    back: back, 
    next: next, 
    current: current, 
    zipper: zipper
};

},{"../Data.List":"/Users/suppi/code/purescript/ld35/output/Data.List/index.js","../Data.Tuple":"/Users/suppi/code/purescript/ld35/output/Data.Tuple/index.js","../Prelude":"/Users/suppi/code/purescript/ld35/output/Prelude/index.js","../Utils":"/Users/suppi/code/purescript/ld35/output/Utils/index.js"}],"/Users/suppi/code/purescript/ld35/output/browserify.js":[function(require,module,exports){
require('Main').main();

},{"Main":"/Users/suppi/code/purescript/ld35/output/Main/index.js"}],"/usr/local/lib/node_modules/pulp/node_modules/browserify/node_modules/process/browser.js":[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}]},{},["/Users/suppi/code/purescript/ld35/output/browserify.js"]);
